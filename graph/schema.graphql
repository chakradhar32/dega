type Category {
  _id: ID!
  _class: String!
  name: String!
  slug: String!
  client_id: String!
  created_date: Time!
  last_updated_date: Time!
}

type Tag {
  _id: ID!
  _class: String!
  name: String!
  slug: String!
  client_id: String!
  created_date: Time!
  last_updated_date: Time!
}

type Format {
  _id: ID!
  _class: String!
  name: String!
  slug: String!
  client_id: String!
  is_default: Boolean
  created_date: Time!
  last_updated_date: Time!
}

type Status {
  _id: ID!
  _class: String!
  name: String!
  slug: String!
  client_id: String!
  is_default: Boolean
  created_date: Time!
  last_updated_date: Time!
}

type Medium {
  _id: ID!
  name: String!
  type: String!
  url: String!
  file_size: String!
  title: String!
  alt_text: String!
  uploaded_by: String!
  published_date: Time!
  last_updated_date: Time!
  slug: String
  client_id: String!
  created_date: Time!
  _class: String!
}

type Post {
  _id: ID!
  title: String!
  client_id: String!
  content: String!
  excerpt: String
  published_date: Time!
  last_updated_date: Time!
  featured: Boolean!
  sticky: Boolean!
  updates: String
  slug: String!
  created_date: Time!
  status: Status!
  format: Format!
  media: Medium
  categories: [Category!]!
  tags: [Tag!]!
  degaUsers: [User!]!
  _class: String!
}

type Organization {
  _id: ID!
  name: String!
  site_title: String!
  tag_line: String!
  client_id: String!
  slug: String!
  email: String!
  created_date: Time!
  last_updated_date: Time!
  site_address: String!
  enable_factchecking: Boolean!
  mediaLogo: Medium
  mediaMobileLogo: Medium
  mediaFavicon: Medium
  mediaMobileIcon: Medium
  _class: String!
}

type User {
  _id: ID!
  first_name: String!
  last_name: String!
  display_name: String!
  description: String
  slug: String!
  enabled: Boolean!
  email_verified: Boolean!
  email: String!
  keycloak_id: String!
  created_date: Time!
  is_super_admin: Boolean!
  organizationDefault: Organization!
  organizationCurrent: Organization!
  media: Medium
  _class: String!
}

type Rating {
  _id: ID!
  name: String!
  numeric_value: Int!
  is_default: Boolean!
  client_id: String!
  slug: String!
  description: String!
  created_date: Time!
  last_updated_date: Time!
  media: Medium
  _class: String!
}

type Claimant {
  _id: ID!
  name: String!
  tag_line: String!
  description: String!
  client_id: String!
  slug: String!
  created_date: Time!
  last_updated_date: Time!
  media: Medium
  _class: String!
}

type Claim {
  _id: ID!
  claim: String!
  description: String!
  claim_date: Time!
  claim_source: String!
  checked_date: Time!
  review_sources: String!
  review: String!
  review_tag_line: String
  client_id: String!
  slug: String!
  created_date: Time!
  last_updated_date: Time!
  rating: Rating!
  claimant: Claimant!
  _class: String!
}

type Factcheck {
  _id: ID!
  title: String!
  client_id: String!
  introduction: String!
  summary: String!
  excerpt: String
  last_updated_date: Time!
  featured: Boolean!
  sticky: Boolean!
  updates: String
  slug: String!
  sub_title: String
  created_date: Time!
  published_date: Time!
  claims: [Claim!]!
  status: Status!
  media: Medium
  categories: [Category!]!
  tags: [Tag!]!
  degaUsers: [User!]!
  _class: String!
}

type CategoriesPaging {
  nodes: [Category!]!
  total: Int!
}

type TagsPaging {
  nodes: [Tag!]!
  total: Int!
}

type PostsPaging {
  nodes: [Post!]!
  total: Int!
}

type FactchecksPaging {
  nodes: [Factcheck!]!
  total: Int!
}

type UsersPaging {
  nodes: [User!]!
  total: Int!
}

type ClaimsPaging {
  nodes: [Claim!]!
  total: Int!
}

type ClaimantsPaging {
  nodes: [Claimant!]!
  total: Int!
}

type RatingsPaging {
  nodes: [Rating!]!
  total: Int!
}

type FormatsPaging {
  nodes: [Format!]!
  total: Int!
}

type StatusesPaging {
  nodes: [Status!]!
  total: Int!
}

type Sitemap {
  slug: String!
  _id: ID!
  created_date: Time!
}

type Sitemaps {
  categories: [Sitemap]
  tags: [Sitemap]
  users: [Sitemap]
  formats: [Sitemap]
  statuses: [Sitemap]
  posts: [Sitemap]
  factchecks: [Sitemap]
  claims: [Sitemap]
  claimants: [Sitemap]
  ratings: [Sitemap] 
}

type Query {
  categories(ids: [String!], page: Int, limit: Int, sortBy: String, sortOrder: String): CategoriesPaging
  category(id: String!): Category
  tags(ids: [String!], page: Int, limit: Int, sortBy: String, sortOrder: String): TagsPaging
  tag(id: String!): Tag
  formats: FormatsPaging
  statuses: StatusesPaging
  organization: Organization
  posts(categories: [String!], tags: [String!], users: [String!], page: Int, limit: Int, sortBy: String, sortOrder: String): PostsPaging
  post(id: String!): Post
  users(page: Int, limit: Int, sortBy: String, sortOrder: String): UsersPaging
  user(id: String!): User
  ratings(page: Int, limit: Int, sortBy: String, sortOrder: String): RatingsPaging
  claimants(page: Int, limit: Int, sortBy: String, sortOrder: String): ClaimantsPaging
  claims(ratings: [String!], claimants:[String!], page: Int, limit: Int, sortBy: String, sortOrder: String): ClaimsPaging
  factchecks(categories: [String!], tags: [String!], users: [String!], page: Int, limit: Int, sortBy: String, sortOrder: String): FactchecksPaging
  factcheck(id: String!): Factcheck
  sitemap: Sitemaps
}

scalar Time