// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spaces Edit component snapshot testing should match skeleton while loading 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <EditSpace />
</ContextProvider>
`;

exports[`Spaces Edit component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <EditSpace>
    <SpaceEditForm
      data={
        Object {
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "text": "Description",
                },
                "type": "paragraph",
              },
            ],
            "time": 1613559903378,
            "version": "2.19.0",
          },
          "fav_icon_id": 1,
          "id": 11,
          "logo_id": 1,
          "logo_mobile_id": 1,
          "mobile_icon_id": 1,
          "name": "name",
          "organisation_id": 1,
          "site_address": "site_address",
          "site_title": "site_title",
          "slug": "slug",
          "social_media_urls": Object {
            "facebook": "fb.com",
            "instagram": "instagram.com",
            "pintrest": "pinterest.com",
            "twitter": "twitter.com",
          },
          "tag_line": "tag_line",
        }
      }
      onCreate={[Function]}
    >
      <div>
        <ForwardRef(InternalForm)
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-space",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "text": "Description",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1613559903378,
                "version": "2.19.0",
              },
              "fav_icon_id": 1,
              "id": 11,
              "logo_id": 1,
              "logo_mobile_id": 1,
              "mobile_icon_id": 1,
              "name": "name",
              "organisation_id": 1,
              "site_address": "site_address",
              "site_title": "site_title",
              "slug": "slug",
              "social_media_urls": Object {
                "facebook": "fb.com",
                "instagram": "instagram.com",
                "pintrest": "pinterest.com",
                "twitter": "twitter.com",
              },
              "tag_line": "tag_line",
            }
          }
          labelCol={
            Object {
              "span": 8,
            }
          }
          name="create-space"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
          scrollToFirstError={true}
          style={
            Object {
              "paddingTop": "24px",
            }
          }
          wrapperCol={
            Object {
              "span": 8,
            }
          }
        >
          <SizeContextProvider>
            <ForwardRef(Form)
              className="ant-form ant-form-horizontal"
              form={
                Object {
                  "__INTERNAL__": Object {
                    "itemRef": [Function],
                    "name": "create-space",
                  },
                  "getFieldError": [Function],
                  "getFieldInstance": [Function],
                  "getFieldValue": [Function],
                  "getFieldsError": [Function],
                  "getFieldsValue": [Function],
                  "getInternalHooks": [Function],
                  "isFieldTouched": [Function],
                  "isFieldValidating": [Function],
                  "isFieldsTouched": [Function],
                  "isFieldsValidating": [Function],
                  "resetFields": [Function],
                  "scrollToField": [Function],
                  "setFields": [Function],
                  "setFieldsValue": [Function],
                  "submit": [Function],
                  "validateFields": [Function],
                }
              }
              id="create-space"
              initialValues={
                Object {
                  "description": Object {
                    "blocks": Array [
                      Object {
                        "data": Object {
                          "text": "Description",
                        },
                        "type": "paragraph",
                      },
                    ],
                    "time": 1613559903378,
                    "version": "2.19.0",
                  },
                  "fav_icon_id": 1,
                  "id": 11,
                  "logo_id": 1,
                  "logo_mobile_id": 1,
                  "mobile_icon_id": 1,
                  "name": "name",
                  "organisation_id": 1,
                  "site_address": "site_address",
                  "site_title": "site_title",
                  "slug": "slug",
                  "social_media_urls": Object {
                    "facebook": "fb.com",
                    "instagram": "instagram.com",
                    "pintrest": "pinterest.com",
                    "twitter": "twitter.com",
                  },
                  "tag_line": "tag_line",
                }
              }
              name="create-space"
              onFinish={[Function]}
              onFinishFailed={[Function]}
              onValuesChange={[Function]}
              style={
                Object {
                  "paddingTop": "24px",
                }
              }
            >
              <form
                className="ant-form ant-form-horizontal"
                id="create-space"
                onSubmit={[Function]}
                style={
                  Object {
                    "paddingTop": "24px",
                  }
                }
              >
                <Collapse
                  activeKey={null}
                  bordered={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "95%",
                    }
                  }
                >
                  <Collapse
                    accordion={false}
                    activeKey={null}
                    bordered={true}
                    className="ant-collapse-icon-position-left"
                    destroyInactivePanel={false}
                    expandIcon={[Function]}
                    onChange={[Function]}
                    openAnimation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    prefixCls="ant-collapse"
                    style={
                      Object {
                        "marginBottom": "15px",
                        "width": "95%",
                      }
                    }
                  >
                    <div
                      className="ant-collapse ant-collapse-icon-position-left"
                      role={null}
                      style={
                        Object {
                          "marginBottom": "15px",
                          "width": "95%",
                        }
                      }
                    >
                      <CollapsePanel
                        accordion={false}
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        header="Basic"
                        isActive={false}
                        key="1"
                        onItemClick={[Function]}
                        openAnimation={
                          Object {
                            "appear": [Function],
                            "enter": [Function],
                            "leave": [Function],
                          }
                        }
                        panelKey="1"
                        prefixCls="ant-collapse"
                      >
                        <CollapsePanel
                          accordion={false}
                          className=""
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          forceRender={false}
                          header="Basic"
                          headerClass=""
                          isActive={false}
                          onItemClick={[Function]}
                          openAnimation={
                            Object {
                              "appear": [Function],
                              "enter": [Function],
                              "leave": [Function],
                            }
                          }
                          panelKey="1"
                          prefixCls="ant-collapse"
                          showArrow={true}
                        >
                          <div
                            className="ant-collapse-item"
                          >
                            <div
                              aria-expanded="false"
                              className="ant-collapse-header"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <ForwardRef(RightOutlined)
                                className="ant-collapse-arrow"
                              >
                                <AntdIcon
                                  className="ant-collapse-arrow"
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "64 64 896 896",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <span
                                    aria-label="right"
                                    className="anticon anticon-right ant-collapse-arrow"
                                    role="img"
                                  >
                                    <IconReact
                                      className=""
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="right"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-right"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                          key="svg-right-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </span>
                                </AntdIcon>
                              </ForwardRef(RightOutlined)>
                              Basic
                            </div>
                            <Animate
                              animation={
                                Object {
                                  "appear": [Function],
                                  "enter": [Function],
                                  "leave": [Function],
                                }
                              }
                              component=""
                              componentProps={Object {}}
                              exclusive={true}
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              showProp="isActive"
                              transitionAppear={false}
                              transitionEnter={true}
                              transitionLeave={true}
                            >
                              <AnimateChild
                                animation={
                                  Object {
                                    "appear": [Function],
                                    "enter": [Function],
                                    "leave": [Function],
                                  }
                                }
                                key="rc_animate_1626439460119"
                                transitionAppear={false}
                                transitionEnter={true}
                                transitionLeave={true}
                              >
                                <PanelContent
                                  destroyInactivePanel={false}
                                  forceRender={false}
                                  isActive={false}
                                  key="rc_animate_1626439460119"
                                  prefixCls="ant-collapse"
                                  role={null}
                                />
                              </AnimateChild>
                            </Animate>
                          </div>
                        </CollapsePanel>
                      </CollapsePanel>
                    </div>
                  </Collapse>
                </Collapse>
                <Collapse
                  bordered={true}
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "95%",
                    }
                  }
                >
                  <Collapse
                    accordion={false}
                    bordered={true}
                    className="ant-collapse-icon-position-left"
                    destroyInactivePanel={false}
                    expandIcon={[Function]}
                    onChange={[Function]}
                    openAnimation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    prefixCls="ant-collapse"
                    style={
                      Object {
                        "marginBottom": "15px",
                        "width": "95%",
                      }
                    }
                  >
                    <div
                      className="ant-collapse ant-collapse-icon-position-left"
                      role={null}
                      style={
                        Object {
                          "marginBottom": "15px",
                          "width": "95%",
                        }
                      }
                    >
                      <CollapsePanel
                        accordion={false}
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        header="Media"
                        isActive={false}
                        key="2"
                        onItemClick={[Function]}
                        openAnimation={
                          Object {
                            "appear": [Function],
                            "enter": [Function],
                            "leave": [Function],
                          }
                        }
                        panelKey="2"
                        prefixCls="ant-collapse"
                      >
                        <CollapsePanel
                          accordion={false}
                          className=""
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          forceRender={false}
                          header="Media"
                          headerClass=""
                          isActive={false}
                          onItemClick={[Function]}
                          openAnimation={
                            Object {
                              "appear": [Function],
                              "enter": [Function],
                              "leave": [Function],
                            }
                          }
                          panelKey="2"
                          prefixCls="ant-collapse"
                          showArrow={true}
                        >
                          <div
                            className="ant-collapse-item"
                          >
                            <div
                              aria-expanded="false"
                              className="ant-collapse-header"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <ForwardRef(RightOutlined)
                                className="ant-collapse-arrow"
                              >
                                <AntdIcon
                                  className="ant-collapse-arrow"
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "64 64 896 896",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <span
                                    aria-label="right"
                                    className="anticon anticon-right ant-collapse-arrow"
                                    role="img"
                                  >
                                    <IconReact
                                      className=""
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="right"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-right"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                          key="svg-right-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </span>
                                </AntdIcon>
                              </ForwardRef(RightOutlined)>
                              Media
                            </div>
                            <Animate
                              animation={
                                Object {
                                  "appear": [Function],
                                  "enter": [Function],
                                  "leave": [Function],
                                }
                              }
                              component=""
                              componentProps={Object {}}
                              exclusive={true}
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              showProp="isActive"
                              transitionAppear={false}
                              transitionEnter={true}
                              transitionLeave={true}
                            >
                              <AnimateChild
                                animation={
                                  Object {
                                    "appear": [Function],
                                    "enter": [Function],
                                    "leave": [Function],
                                  }
                                }
                                key="rc_animate_1626439460119"
                                transitionAppear={false}
                                transitionEnter={true}
                                transitionLeave={true}
                              >
                                <PanelContent
                                  destroyInactivePanel={false}
                                  forceRender={false}
                                  isActive={false}
                                  key="rc_animate_1626439460119"
                                  prefixCls="ant-collapse"
                                  role={null}
                                />
                              </AnimateChild>
                            </Animate>
                          </div>
                        </CollapsePanel>
                      </CollapsePanel>
                    </div>
                  </Collapse>
                </Collapse>
                <Collapse
                  bordered={true}
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "95%",
                    }
                  }
                >
                  <Collapse
                    accordion={false}
                    bordered={true}
                    className="ant-collapse-icon-position-left"
                    destroyInactivePanel={false}
                    expandIcon={[Function]}
                    onChange={[Function]}
                    openAnimation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    prefixCls="ant-collapse"
                    style={
                      Object {
                        "marginBottom": "15px",
                        "width": "95%",
                      }
                    }
                  >
                    <div
                      className="ant-collapse ant-collapse-icon-position-left"
                      role={null}
                      style={
                        Object {
                          "marginBottom": "15px",
                          "width": "95%",
                        }
                      }
                    >
                      <CollapsePanel
                        accordion={false}
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        header="Contact"
                        isActive={false}
                        key="3"
                        onItemClick={[Function]}
                        openAnimation={
                          Object {
                            "appear": [Function],
                            "enter": [Function],
                            "leave": [Function],
                          }
                        }
                        panelKey="3"
                        prefixCls="ant-collapse"
                      >
                        <CollapsePanel
                          accordion={false}
                          className=""
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          forceRender={false}
                          header="Contact"
                          headerClass=""
                          isActive={false}
                          onItemClick={[Function]}
                          openAnimation={
                            Object {
                              "appear": [Function],
                              "enter": [Function],
                              "leave": [Function],
                            }
                          }
                          panelKey="3"
                          prefixCls="ant-collapse"
                          showArrow={true}
                        >
                          <div
                            className="ant-collapse-item"
                          >
                            <div
                              aria-expanded="false"
                              className="ant-collapse-header"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <ForwardRef(RightOutlined)
                                className="ant-collapse-arrow"
                              >
                                <AntdIcon
                                  className="ant-collapse-arrow"
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "64 64 896 896",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <span
                                    aria-label="right"
                                    className="anticon anticon-right ant-collapse-arrow"
                                    role="img"
                                  >
                                    <IconReact
                                      className=""
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="right"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-right"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                          key="svg-right-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </span>
                                </AntdIcon>
                              </ForwardRef(RightOutlined)>
                              Contact
                            </div>
                            <Animate
                              animation={
                                Object {
                                  "appear": [Function],
                                  "enter": [Function],
                                  "leave": [Function],
                                }
                              }
                              component=""
                              componentProps={Object {}}
                              exclusive={true}
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              showProp="isActive"
                              transitionAppear={false}
                              transitionEnter={true}
                              transitionLeave={true}
                            >
                              <AnimateChild
                                animation={
                                  Object {
                                    "appear": [Function],
                                    "enter": [Function],
                                    "leave": [Function],
                                  }
                                }
                                key="rc_animate_1626439460119"
                                transitionAppear={false}
                                transitionEnter={true}
                                transitionLeave={true}
                              >
                                <PanelContent
                                  destroyInactivePanel={false}
                                  forceRender={false}
                                  isActive={false}
                                  key="rc_animate_1626439460119"
                                  prefixCls="ant-collapse"
                                  role={null}
                                />
                              </AnimateChild>
                            </Animate>
                          </div>
                        </CollapsePanel>
                      </CollapsePanel>
                    </div>
                  </Collapse>
                </Collapse>
                <Collapse
                  bordered={true}
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "95%",
                    }
                  }
                >
                  <Collapse
                    accordion={false}
                    bordered={true}
                    className="ant-collapse-icon-position-left"
                    destroyInactivePanel={false}
                    expandIcon={[Function]}
                    onChange={[Function]}
                    openAnimation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    prefixCls="ant-collapse"
                    style={
                      Object {
                        "marginBottom": "15px",
                        "width": "95%",
                      }
                    }
                  >
                    <div
                      className="ant-collapse ant-collapse-icon-position-left"
                      role={null}
                      style={
                        Object {
                          "marginBottom": "15px",
                          "width": "95%",
                        }
                      }
                    >
                      <CollapsePanel
                        accordion={false}
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        header="Analytics"
                        isActive={false}
                        key="4"
                        onItemClick={[Function]}
                        openAnimation={
                          Object {
                            "appear": [Function],
                            "enter": [Function],
                            "leave": [Function],
                          }
                        }
                        panelKey="4"
                        prefixCls="ant-collapse"
                      >
                        <CollapsePanel
                          accordion={false}
                          className=""
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          forceRender={false}
                          header="Analytics"
                          headerClass=""
                          isActive={false}
                          onItemClick={[Function]}
                          openAnimation={
                            Object {
                              "appear": [Function],
                              "enter": [Function],
                              "leave": [Function],
                            }
                          }
                          panelKey="4"
                          prefixCls="ant-collapse"
                          showArrow={true}
                        >
                          <div
                            className="ant-collapse-item"
                          >
                            <div
                              aria-expanded="false"
                              className="ant-collapse-header"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <ForwardRef(RightOutlined)
                                className="ant-collapse-arrow"
                              >
                                <AntdIcon
                                  className="ant-collapse-arrow"
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "64 64 896 896",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <span
                                    aria-label="right"
                                    className="anticon anticon-right ant-collapse-arrow"
                                    role="img"
                                  >
                                    <IconReact
                                      className=""
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="right"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-right"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                          key="svg-right-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </span>
                                </AntdIcon>
                              </ForwardRef(RightOutlined)>
                              Analytics
                            </div>
                            <Animate
                              animation={
                                Object {
                                  "appear": [Function],
                                  "enter": [Function],
                                  "leave": [Function],
                                }
                              }
                              component=""
                              componentProps={Object {}}
                              exclusive={true}
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              showProp="isActive"
                              transitionAppear={false}
                              transitionEnter={true}
                              transitionLeave={true}
                            >
                              <AnimateChild
                                animation={
                                  Object {
                                    "appear": [Function],
                                    "enter": [Function],
                                    "leave": [Function],
                                  }
                                }
                                key="rc_animate_1626439460119"
                                transitionAppear={false}
                                transitionEnter={true}
                                transitionLeave={true}
                              >
                                <PanelContent
                                  destroyInactivePanel={false}
                                  forceRender={false}
                                  isActive={false}
                                  key="rc_animate_1626439460119"
                                  prefixCls="ant-collapse"
                                  role={null}
                                />
                              </AnimateChild>
                            </Animate>
                          </div>
                        </CollapsePanel>
                      </CollapsePanel>
                    </div>
                  </Collapse>
                </Collapse>
                <Collapse
                  bordered={true}
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "95%",
                    }
                  }
                >
                  <Collapse
                    accordion={false}
                    bordered={true}
                    className="ant-collapse-icon-position-left"
                    destroyInactivePanel={false}
                    expandIcon={[Function]}
                    onChange={[Function]}
                    openAnimation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    prefixCls="ant-collapse"
                    style={
                      Object {
                        "marginBottom": "15px",
                        "width": "95%",
                      }
                    }
                  >
                    <div
                      className="ant-collapse ant-collapse-icon-position-left"
                      role={null}
                      style={
                        Object {
                          "marginBottom": "15px",
                          "width": "95%",
                        }
                      }
                    >
                      <CollapsePanel
                        accordion={false}
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        header="Code Injection"
                        isActive={false}
                        key="5"
                        onItemClick={[Function]}
                        openAnimation={
                          Object {
                            "appear": [Function],
                            "enter": [Function],
                            "leave": [Function],
                          }
                        }
                        panelKey="5"
                        prefixCls="ant-collapse"
                      >
                        <CollapsePanel
                          accordion={false}
                          className=""
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          forceRender={false}
                          header="Code Injection"
                          headerClass=""
                          isActive={false}
                          onItemClick={[Function]}
                          openAnimation={
                            Object {
                              "appear": [Function],
                              "enter": [Function],
                              "leave": [Function],
                            }
                          }
                          panelKey="5"
                          prefixCls="ant-collapse"
                          showArrow={true}
                        >
                          <div
                            className="ant-collapse-item"
                          >
                            <div
                              aria-expanded="false"
                              className="ant-collapse-header"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <ForwardRef(RightOutlined)
                                className="ant-collapse-arrow"
                              >
                                <AntdIcon
                                  className="ant-collapse-arrow"
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "64 64 896 896",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <span
                                    aria-label="right"
                                    className="anticon anticon-right ant-collapse-arrow"
                                    role="img"
                                  >
                                    <IconReact
                                      className=""
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="right"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-right"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                          key="svg-right-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </span>
                                </AntdIcon>
                              </ForwardRef(RightOutlined)>
                              Code Injection
                            </div>
                            <Animate
                              animation={
                                Object {
                                  "appear": [Function],
                                  "enter": [Function],
                                  "leave": [Function],
                                }
                              }
                              component=""
                              componentProps={Object {}}
                              exclusive={true}
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              showProp="isActive"
                              transitionAppear={false}
                              transitionEnter={true}
                              transitionLeave={true}
                            >
                              <AnimateChild
                                animation={
                                  Object {
                                    "appear": [Function],
                                    "enter": [Function],
                                    "leave": [Function],
                                  }
                                }
                                key="rc_animate_1626439460119"
                                transitionAppear={false}
                                transitionEnter={true}
                                transitionLeave={true}
                              >
                                <PanelContent
                                  destroyInactivePanel={false}
                                  forceRender={false}
                                  isActive={false}
                                  key="rc_animate_1626439460119"
                                  prefixCls="ant-collapse"
                                  role={null}
                                />
                              </AnimateChild>
                            </Animate>
                          </div>
                        </CollapsePanel>
                      </CollapsePanel>
                    </div>
                  </Collapse>
                </Collapse>
                <FormItem>
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        prefixCls="ant-form"
                        requiredMark={true}
                      />
                      <FormItemInput
                        errors={Array []}
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        status=""
                        validateStatus=""
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Button
                                  block={false}
                                  disabled={true}
                                  ghost={false}
                                  htmlType="submit"
                                  loading={false}
                                  type="primary"
                                >
                                  <Wave>
                                    <button
                                      className="ant-btn ant-btn-primary"
                                      disabled={true}
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      <LoadingIcon
                                        existIcon={false}
                                        loading={false}
                                        prefixCls="ant-btn"
                                      >
                                        <CSSMotion
                                          motionName="ant-btn-loading-icon-motion"
                                          onAppearActive={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </LoadingIcon>
                                      <span
                                        key=".0"
                                      >
                                        Update
                                      </span>
                                    </button>
                                  </Wave>
                                </Button>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </FormItem>
              </form>
            </ForwardRef(Form)>
          </SizeContextProvider>
        </ForwardRef(InternalForm)>
      </div>
    </SpaceEditForm>
  </EditSpace>
</Provider>
`;
