// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Analytics Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <AnalyticsForm>
    <div>
      <ForwardRef(InternalForm)
        form={
          Object {
            "__INTERNAL__": Object {
              "itemRef": [Function],
              "name": "create-space",
            },
            "getFieldError": [Function],
            "getFieldInstance": [Function],
            "getFieldValue": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        initialValues={
          Object {
            "analytics": Object {
              "plausible": Object {
                "domain": "domain",
                "embed_code": "embed-code",
                "server_url": "url",
              },
            },
            "description": "description",
            "id": 11,
            "name": "name",
            "organisation_id": 1,
            "site_address": "site_address",
            "site_title": "site_title",
            "slug": "slug",
            "tag_line": "tag_line",
          }
        }
        layout="vertical"
        name="create-space"
        onFinish={[Function]}
        onFinishFailed={[Function]}
        onValuesChange={[Function]}
        scrollToFirstError={true}
        style={
          Object {
            "paddingTop": "24px",
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-vertical"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "create-space",
                },
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="create-space"
            initialValues={
              Object {
                "analytics": Object {
                  "plausible": Object {
                    "domain": "domain",
                    "embed_code": "embed-code",
                    "server_url": "url",
                  },
                },
                "description": "description",
                "id": 11,
                "name": "name",
                "organisation_id": 1,
                "site_address": "site_address",
                "site_title": "site_title",
                "slug": "slug",
                "tag_line": "tag_line",
              }
            }
            name="create-space"
            onFinish={[Function]}
            onFinishFailed={[Function]}
            onValuesChange={[Function]}
            style={
              Object {
                "paddingTop": "24px",
              }
            }
          >
            <form
              className="ant-form ant-form-vertical"
              id="create-space"
              onReset={[Function]}
              onSubmit={[Function]}
              style={
                Object {
                  "paddingTop": "24px",
                }
              }
            >
              <Row
                justify="end"
              >
                <div
                  className="ant-row ant-row-end"
                  style={Object {}}
                >
                  <FormItem>
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          prefixCls="ant-form"
                          requiredMark={true}
                        />
                        <FormItemInput
                          errors={Array []}
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          status=""
                          validateStatus=""
                        >
                          <Col
                            className="ant-form-item-control"
                          >
                            <div
                              className="ant-col ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Button
                                    disabled={true}
                                    htmlType="submit"
                                    type="primary"
                                  >
                                    <Wave>
                                      <button
                                        className="ant-btn ant-btn-primary"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="submit"
                                      >
                                        <LoadingIcon
                                          existIcon={false}
                                          loading={false}
                                          prefixCls="ant-btn"
                                        >
                                          <CSSMotion
                                            motionName="ant-btn-loading-icon-motion"
                                            onAppearActive={[Function]}
                                            onAppearStart={[Function]}
                                            onEnterActive={[Function]}
                                            onEnterStart={[Function]}
                                            onLeaveActive={[Function]}
                                            onLeaveStart={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </LoadingIcon>
                                        <span
                                          key=".0"
                                        >
                                          Update
                                        </span>
                                      </button>
                                    </Wave>
                                  </Button>
                                </div>
                              </div>
                              <ErrorList
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                              >
                                <CSSMotion
                                  motionAppear={true}
                                  motionDeadline={500}
                                  motionName="ant-show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </FormItem>
                </div>
              </Row>
              <FormItem
                label="Server URL"
                name={
                  Array [
                    "analytics",
                    "plausible",
                    "server_url",
                  ]
                }
              >
                <WrapperField
                  label="Server URL"
                  messageVariables={
                    Object {
                      "label": "Server URL",
                    }
                  }
                  name={
                    Array [
                      "analytics",
                      "plausible",
                      "server_url",
                    ]
                  }
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-space",
                        },
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_analytics_plausible_server_url"
                    label="Server URL"
                    messageVariables={
                      Object {
                        "label": "Server URL",
                      }
                    }
                    name={
                      Array [
                        "analytics",
                        "plausible",
                        "server_url",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-space_analytics_plausible_server_url"
                          label="Server URL"
                          name={
                            Array [
                              "analytics",
                              "plausible",
                              "server_url",
                            ]
                          }
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                          >
                            <div
                              className="ant-col ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="create-space_analytics_plausible_server_url"
                                title="Server URL"
                              >
                                Server URL
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Server URL"
                          name={
                            Array [
                              "analytics",
                              "plausible",
                              "server_url",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          status=""
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                          >
                            <div
                              className="ant-col ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="url"
                                  >
                                    <Input
                                      id="create-space_analytics_plausible_server_url"
                                      onChange={[Function]}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      type="text"
                                      value="url"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="create-space_analytics_plausible_server_url"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                            type="text"
                                            value="url"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="create-space_analytics_plausible_server_url"
                                        inputType="input"
                                        onChange={[Function]}
                                        prefixCls="ant-input"
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                        triggerFocus={[Function]}
                                        type="text"
                                        value="url"
                                      >
                                        <input
                                          className="ant-input"
                                          id="create-space_analytics_plausible_server_url"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          style={
                                            Object {
                                              "width": "100%",
                                            }
                                          }
                                          type="text"
                                          value="url"
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                              >
                                <CSSMotion
                                  motionAppear={true}
                                  motionDeadline={500}
                                  motionName="ant-show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Domain"
                name={
                  Array [
                    "analytics",
                    "plausible",
                    "domain",
                  ]
                }
              >
                <WrapperField
                  label="Domain"
                  messageVariables={
                    Object {
                      "label": "Domain",
                    }
                  }
                  name={
                    Array [
                      "analytics",
                      "plausible",
                      "domain",
                    ]
                  }
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-space",
                        },
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_analytics_plausible_domain"
                    label="Domain"
                    messageVariables={
                      Object {
                        "label": "Domain",
                      }
                    }
                    name={
                      Array [
                        "analytics",
                        "plausible",
                        "domain",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-space_analytics_plausible_domain"
                          label="Domain"
                          name={
                            Array [
                              "analytics",
                              "plausible",
                              "domain",
                            ]
                          }
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                          >
                            <div
                              className="ant-col ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="create-space_analytics_plausible_domain"
                                title="Domain"
                              >
                                Domain
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Domain"
                          name={
                            Array [
                              "analytics",
                              "plausible",
                              "domain",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          status=""
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                          >
                            <div
                              className="ant-col ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="domain"
                                  >
                                    <Input
                                      id="create-space_analytics_plausible_domain"
                                      onChange={[Function]}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      type="text"
                                      value="domain"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <input
                                            className="ant-input"
                                            id="create-space_analytics_plausible_domain"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                            type="text"
                                            value="domain"
                                          />
                                        }
                                        focused={false}
                                        handleReset={[Function]}
                                        id="create-space_analytics_plausible_domain"
                                        inputType="input"
                                        onChange={[Function]}
                                        prefixCls="ant-input"
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                        triggerFocus={[Function]}
                                        type="text"
                                        value="domain"
                                      >
                                        <input
                                          className="ant-input"
                                          id="create-space_analytics_plausible_domain"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          style={
                                            Object {
                                              "width": "100%",
                                            }
                                          }
                                          type="text"
                                          value="domain"
                                        />
                                      </ClearableLabeledInput>
                                    </Input>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                              >
                                <CSSMotion
                                  motionAppear={true}
                                  motionDeadline={500}
                                  motionName="ant-show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Embed Code"
                name={
                  Array [
                    "analytics",
                    "plausible",
                    "embed_code",
                  ]
                }
              >
                <WrapperField
                  label="Embed Code"
                  messageVariables={
                    Object {
                      "label": "Embed Code",
                    }
                  }
                  name={
                    Array [
                      "analytics",
                      "plausible",
                      "embed_code",
                    ]
                  }
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-space",
                        },
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_analytics_plausible_embed_code"
                    label="Embed Code"
                    messageVariables={
                      Object {
                        "label": "Embed Code",
                      }
                    }
                    name={
                      Array [
                        "analytics",
                        "plausible",
                        "embed_code",
                      ]
                    }
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-space_analytics_plausible_embed_code"
                          label="Embed Code"
                          name={
                            Array [
                              "analytics",
                              "plausible",
                              "embed_code",
                            ]
                          }
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                          >
                            <div
                              className="ant-col ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="create-space_analytics_plausible_embed_code"
                                title="Embed Code"
                              >
                                Embed Code
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Embed Code"
                          name={
                            Array [
                              "analytics",
                              "plausible",
                              "embed_code",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          status=""
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                          >
                            <div
                              className="ant-col ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={2}
                                    value="embed-code"
                                  >
                                    <ForwardRef
                                      id="create-space_analytics_plausible_embed_code"
                                      onChange={[Function]}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      value="embed-code"
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <TextArea
                                            className=""
                                            id="create-space_analytics_plausible_embed_code"
                                            onChange={[Function]}
                                            onCompositionEnd={[Function]}
                                            onCompositionStart={[Function]}
                                            prefixCls="ant-input"
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                            value="embed-code"
                                          />
                                        }
                                        handleReset={[Function]}
                                        id="create-space_analytics_plausible_embed_code"
                                        inputType="text"
                                        prefixCls="ant-input"
                                        value="embed-code"
                                      >
                                        <TextArea
                                          className=""
                                          id="create-space_analytics_plausible_embed_code"
                                          onChange={[Function]}
                                          onCompositionEnd={[Function]}
                                          onCompositionStart={[Function]}
                                          prefixCls="ant-input"
                                          style={
                                            Object {
                                              "width": "100%",
                                            }
                                          }
                                          value="embed-code"
                                        >
                                          <ResizableTextArea
                                            className=""
                                            id="create-space_analytics_plausible_embed_code"
                                            onChange={[Function]}
                                            onCompositionEnd={[Function]}
                                            onCompositionStart={[Function]}
                                            onKeyDown={[Function]}
                                            prefixCls="ant-input"
                                            style={
                                              Object {
                                                "width": "100%",
                                              }
                                            }
                                            value="embed-code"
                                          >
                                            <ResizeObserver
                                              disabled={true}
                                              onResize={[Function]}
                                            >
                                              <textarea
                                                className="ant-input"
                                                id="create-space_analytics_plausible_embed_code"
                                                onChange={[Function]}
                                                onCompositionEnd={[Function]}
                                                onCompositionStart={[Function]}
                                                onKeyDown={[Function]}
                                                style={
                                                  Object {
                                                    "width": "100%",
                                                  }
                                                }
                                                value="embed-code"
                                              />
                                            </ResizeObserver>
                                          </ResizableTextArea>
                                        </TextArea>
                                      </ClearableLabeledInput>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                              >
                                <CSSMotion
                                  motionAppear={true}
                                  motionDeadline={500}
                                  motionName="ant-show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </div>
  </AnalyticsForm>
</Provider>
`;
