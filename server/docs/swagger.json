{
    "swagger": "2.0",
    "info": {
        "description": "Dega server API",
        "title": "Dega API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:7789",
    "basePath": "/",
    "paths": {
        "/core/authors": {
            "get": {
                "description": "Get all authors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "Show all authors",
                "operationId": "get-all-authors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/author.paging"
                        }
                    }
                }
            }
        },
        "/core/categories": {
            "get": {
                "description": "Get all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Show all categories",
                "operationId": "get-all-categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create category",
                "operationId": "add-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Category Object",
                        "name": "Category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/categories/{category_id}": {
            "get": {
                "description": "Get category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Show a category by id",
                "operationId": "get-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    }
                }
            },
            "put": {
                "description": "Update category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update a category by id",
                "operationId": "update-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "Category",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/category.category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete category by ID",
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "operationId": "delete-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/events": {
            "get": {
                "description": "Get all events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Show all events",
                "operationId": "get-all-events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create Event",
                "operationId": "add-event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Event Object",
                        "name": "Event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.event"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/events/default": {
            "post": {
                "description": "Create default Events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create default Events",
                "operationId": "add-default-events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/events/{event_id}": {
            "get": {
                "description": "Get event by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Show a event by id",
                "operationId": "get-event-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            },
            "put": {
                "description": "Update event by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update a event by id",
                "operationId": "update-event-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Object",
                        "name": "Event",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/event.event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Event by id",
                "tags": [
                    "Events"
                ],
                "summary": "Delete Event by id",
                "operationId": "delete-event-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/formats": {
            "get": {
                "description": "Get all formats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Show all formats",
                "operationId": "get-all-formats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/format.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Create format",
                "operationId": "add-format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Format Object",
                        "name": "Format",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/format.format"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/formats/default": {
            "post": {
                "description": "Create Default Formats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Create Default Formats",
                "operationId": "add-default-formats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/format.paging"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/formats/{format_id}": {
            "get": {
                "description": "Get format by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Show a format by id",
                "operationId": "get-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    }
                }
            },
            "put": {
                "description": "Update format by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Update a format by id",
                "operationId": "update-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Format",
                        "name": "Format",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/format.format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete format by ID",
                "tags": [
                    "Format"
                ],
                "summary": "Delete a format",
                "operationId": "delete-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/core/info": {
            "get": {
                "description": "Get info by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Show a info by id",
                "operationId": "get-info-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Info ID",
                        "name": "info_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Info"
                        }
                    }
                }
            }
        },
        "/core/media": {
            "get": {
                "description": "Get all media",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Show all media",
                "operationId": "get-all-media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Medium"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create medium",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Create medium",
                "operationId": "add-medium",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Medium Object",
                        "name": "Medium",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/medium.medium"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Medium"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/media/{medium_id}": {
            "get": {
                "description": "Get medium by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Show a medium by id",
                "operationId": "get-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    }
                }
            },
            "put": {
                "description": "Update medium by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Update a medium by id",
                "operationId": "update-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Medium",
                        "name": "Medium",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/medium.medium"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete medium by ID",
                "tags": [
                    "Medium"
                ],
                "summary": "Delete a medium",
                "operationId": "delete-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/core/menus": {
            "get": {
                "description": "Get all menus",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Show all menus",
                "operationId": "get-all-menus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create menu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Create menu",
                "operationId": "add-menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Menu Object",
                        "name": "Menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menu.menu"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/menus/{menu_id}": {
            "get": {
                "description": "Get menu by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Show a menu by id",
                "operationId": "get-menu-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "menu_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Menu"
                        }
                    }
                }
            },
            "put": {
                "description": "Update menu by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Update a menu by id",
                "operationId": "update-menu-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "menu_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Menu",
                        "name": "Menu",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/menu.menu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Menu"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete menu by ID",
                "tags": [
                    "Menu"
                ],
                "summary": "Delete a menu",
                "operationId": "delete-menu-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "menu_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/pages": {
            "get": {
                "description": "Get all pages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Show all pages",
                "operationId": "get-all-pages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/page.pageData"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create page",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Create page",
                "operationId": "add-page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Page Object",
                        "name": "Page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/page.page"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/page.pageData"
                        }
                    }
                }
            }
        },
        "/core/pages/{page_id}": {
            "get": {
                "description": "Get page by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Show a page by id",
                "operationId": "get-page-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/page.pageData"
                        }
                    }
                }
            },
            "put": {
                "description": "Update page by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Update a page by id",
                "operationId": "update-page-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Page",
                        "name": "Page",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/page.page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/page.pageData"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete page by ID",
                "tags": [
                    "Page"
                ],
                "summary": "Delete a page",
                "operationId": "delete-page-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/core/permissions/organisations": {
            "get": {
                "description": "Get all organisation permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions"
                ],
                "summary": "Show all organisation permissions",
                "operationId": "get-all-org-permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_permissions_organisation.paging"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create organisation permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions"
                ],
                "summary": "Create organisation permission",
                "operationId": "add-org-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission Object",
                        "name": "Permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organisation.organisationPermission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.OrganisationPermission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/permissions/organisations/my": {
            "get": {
                "description": "Get my organisation permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions"
                ],
                "summary": "Show a my organisation permissions",
                "operationId": "get-org-permission-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organisation.orgPermissionRes"
                        }
                    }
                }
            }
        },
        "/core/permissions/organisations/{permission_id}": {
            "put": {
                "description": "Update Organisation permission by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions"
                ],
                "summary": "Update a Organisation permission by id",
                "operationId": "update-org-permission-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission Body",
                        "name": "Permission",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/organisation.organisationPermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrganisationPermission"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Organisation permission by ID",
                "tags": [
                    "Organisation_Permissions"
                ],
                "summary": "Delete a Organisation permission",
                "operationId": "delete-org-permission-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/permissions/spaces": {
            "get": {
                "description": "Get all Space permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions"
                ],
                "summary": "Show all Space permissions",
                "operationId": "get-all-space-permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_permissions_space.paging"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create Space permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions"
                ],
                "summary": "Create Space permission",
                "operationId": "add-space-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission Object",
                        "name": "Permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.spacePermission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/permissions/spaces/my": {
            "get": {
                "description": "Get my Space permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions"
                ],
                "summary": "Show a my Space permissions",
                "operationId": "get-my-space-permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermission"
                        }
                    }
                }
            }
        },
        "/core/permissions/spaces/{permission_id}": {
            "get": {
                "description": "Get Space permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions"
                ],
                "summary": "Show a Space permissions",
                "operationId": "get-space-permission-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermission"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Space permission by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions"
                ],
                "summary": "Update a Space permission by id",
                "operationId": "update-space-permission-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission Body",
                        "name": "Permission",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/space.spacePermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermission"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Space permission by ID",
                "tags": [
                    "Space_Permissions"
                ],
                "summary": "Delete a Space permission",
                "operationId": "delete-space-permission-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/policies": {
            "get": {
                "description": "Get all policies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policy"
                ],
                "summary": "Get all policies",
                "operationId": "get-all-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/policy.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create policy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policy"
                ],
                "summary": "Create policy",
                "operationId": "add-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Policy Object",
                        "name": "Policy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/policy.policyReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Policy"
                        }
                    }
                }
            }
        },
        "/core/policies/default": {
            "post": {
                "description": "Create Default Policies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policy"
                ],
                "summary": "Create Default Policies",
                "operationId": "add-default-policies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/policy.paging"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/policies/{policy_id}": {
            "get": {
                "description": "Get policy by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policy"
                ],
                "summary": "Get policy by ID",
                "operationId": "get-policy-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Policy ID",
                        "name": "policy_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Policy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update policy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policy"
                ],
                "summary": "Update policy",
                "operationId": "update-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Policy Object",
                        "name": "Policy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/policy.policyReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Policy ID",
                        "name": "policy_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Policy"
                        }
                    }
                }
            },
            "delete": {
                "description": "GeDeletet policy by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policy"
                ],
                "summary": "Delete policy by ID",
                "operationId": "delete-policy-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Policy ID",
                        "name": "policy_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Policy"
                        }
                    }
                }
            }
        },
        "/core/posts": {
            "get": {
                "description": "Get all posts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Show all posts",
                "operationId": "get-all-posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tags",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Format",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author",
                        "name": "author",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/post.postData"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create post",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Create post",
                "operationId": "add-post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Post Object",
                        "name": "Post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.post"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/post.postData"
                        }
                    }
                }
            }
        },
        "/core/posts/templates": {
            "post": {
                "description": "Create template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "create template",
                "operationId": "create-template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "TemplateData",
                        "name": "TemplateData",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/post.templateData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    }
                }
            }
        },
        "/core/posts/{post_id}": {
            "get": {
                "description": "Get post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Show a post by id",
                "operationId": "get-post-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.postData"
                        }
                    }
                }
            },
            "put": {
                "description": "Update post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Update a post by id",
                "operationId": "update-post-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post",
                        "name": "Post",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/post.post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.postData"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete post by ID",
                "tags": [
                    "Post"
                ],
                "summary": "Delete a post",
                "operationId": "delete-post-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/core/requests/organisations": {
            "get": {
                "description": "Get all organisation permissions requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "Show all organisation permissions requests",
                "operationId": "get-all-org-permissions-requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_request_organisation.paging"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create organisation permission request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "Create organisation permission request",
                "operationId": "add-org-permission-request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Object",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organisation.organisationPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.OrganisationPermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/organisations/my": {
            "get": {
                "description": "Get all my organisation permissions requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "Show all my organisation permissions requests",
                "operationId": "get-all-my-org-permissions-requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_request_organisation.paging"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/organisations/{request_id}": {
            "get": {
                "description": "Get organisation permissions requests detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "Show a organisation permissions requests detail",
                "operationId": "get-org-permission-request-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrganisationPermissionRequest"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Organisation permission request by ID",
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "Delete a Organisation permission request",
                "operationId": "delete-org-permission-request-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/organisations/{request_id}/approve": {
            "post": {
                "description": "approve organisation permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "approve organisation permission",
                "operationId": "approve-org-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.OrganisationPermission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/organisations/{request_id}/reject": {
            "post": {
                "description": "reject organisation permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation_Permissions_Request"
                ],
                "summary": "reject organisation permission",
                "operationId": "reject-org-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/spaces": {
            "get": {
                "description": "Get all space permissions requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "Show all space permissions requests",
                "operationId": "get-all-space-permissions-requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_request_space.paging"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create space permission request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "Create space permission request",
                "operationId": "add-space-permission-request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Object",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.spacePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/spaces/my": {
            "get": {
                "description": "Get all my space permissions requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "Show all my space permissions requests",
                "operationId": "get-all-my-space-permissions-requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_request_space.paging"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/spaces/{request_id}": {
            "get": {
                "description": "Get space permissions requests detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "Show a space permissions requests detail",
                "operationId": "get-space-permission-request-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermissionRequest"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Space permission request by ID",
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "Delete a Space permission request",
                "operationId": "delete-space-permission-request-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/spaces/{request_id}/approve": {
            "post": {
                "description": "approve space permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "approve space permission",
                "operationId": "approve-space-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.SpacePermission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/requests/spaces/{request_id}/reject": {
            "post": {
                "description": "reject space permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space_Permissions_Request"
                ],
                "summary": "reject space permission",
                "operationId": "reject-space-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/search": {
            "post": {
                "description": "Global search for all entities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Global search for all entities",
                "operationId": "search-entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Search",
                        "name": "Search",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/search.searchQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/core/spaces": {
            "get": {
                "description": "Get all spaces",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Show all spaces",
                "operationId": "get-all-spaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/space.orgWithSpace"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create space",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Create space",
                "operationId": "add-space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Space Object",
                        "name": "Space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.space"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Space"
                        }
                    }
                }
            }
        },
        "/core/spaces/{space_id}": {
            "put": {
                "description": "Update space",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Update space",
                "operationId": "update-space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Space Object",
                        "name": "Space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.space"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Space"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete space",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Delete space",
                "operationId": "delete-space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/core/tags": {
            "get": {
                "description": "Get all tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Show all tags",
                "operationId": "get-all-tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tag.paging"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Create tag",
                "operationId": "add-tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Tag Object",
                        "name": "Tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tag.tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/tags/{tag_id}": {
            "get": {
                "description": "Get tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Show a tag by id",
                "operationId": "get-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    }
                }
            },
            "put": {
                "description": "Update tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Update a tag by id",
                "operationId": "update-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Tag",
                        "name": "Tag",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/tag.tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tag by ID",
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a tag",
                "operationId": "delete-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/users": {
            "get": {
                "description": "Get users with space access",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get users with space access",
                "operationId": "get-space-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.paging"
                        }
                    }
                }
            }
        },
        "/core/users/{user_id}/permissions": {
            "get": {
                "description": "Get user's permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user's permission",
                "operationId": "get-users-permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Permission"
                            }
                        }
                    }
                }
            }
        },
        "/core/webhooks": {
            "get": {
                "description": "Get all webhooks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Show all webhooks",
                "operationId": "get-all-webhooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhook.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Webhook",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Create Webhook",
                "operationId": "add-webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Webhook Object",
                        "name": "Webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhook.webhook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/webhooks/logs": {
            "get": {
                "description": "Get all webhooks logs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Show all webhooks logs",
                "operationId": "get-all-webhooks-logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhook.paging"
                        }
                    }
                }
            }
        },
        "/core/webhooks/{webhook_id}": {
            "get": {
                "description": "Get webhook by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Show a webhook by id",
                "operationId": "get-webhook-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "webhook_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Webhook"
                        }
                    }
                }
            },
            "put": {
                "description": "Update webhook by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Update a webhook by id",
                "operationId": "update-webhook-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "webhook_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Webhook Object",
                        "name": "Webhook",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/webhook.webhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Webhook"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete webhook by id",
                "tags": [
                    "Webhooks"
                ],
                "summary": "Delete webhook by id",
                "operationId": "delete-webhook-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "webhook_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/fact-check/claimants": {
            "get": {
                "description": "Get all claimants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Show all claimants",
                "operationId": "get-all-claimants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/claimant.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create claimant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Create claimant",
                "operationId": "add-claimant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Claimant Object",
                        "name": "Claimant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/claimant.claimant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/fact-check/claimants/{claimant_id}": {
            "get": {
                "description": "Get claimant by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Show a claimant by id",
                "operationId": "get-claimant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "claimant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    }
                }
            },
            "put": {
                "description": "Update claimant by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Update a claimant by id",
                "operationId": "update-claimant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "claimant_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Claimant",
                        "name": "Claimant",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/claimant.claimant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete claimant by ID",
                "tags": [
                    "Claimant"
                ],
                "summary": "Delete a claimant",
                "operationId": "delete-claimant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "claimant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/fact-check/claims": {
            "get": {
                "description": "Get all claims",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claim"
                ],
                "summary": "Show all claims",
                "operationId": "get-all-claims",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ratings",
                        "name": "rating",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Claimants",
                        "name": "claimant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Object"
                        }
                    }
                }
            },
            "post": {
                "description": "Create claim",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claim"
                ],
                "summary": "Create claim",
                "operationId": "add-claim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Claim Object",
                        "name": "Claim",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/claim.claim"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Claim"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/fact-check/claims/{claim_id}": {
            "put": {
                "description": "Update claim by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claim"
                ],
                "summary": "Update a claim by id",
                "operationId": "update-claim-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claim ID",
                        "name": "claim_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Claim",
                        "name": "Claim",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/claim.claim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claim"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete claim by ID",
                "tags": [
                    "Claim"
                ],
                "summary": "Delete a claim",
                "operationId": "delete-claim-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claim ID",
                        "name": "claim_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/fact-check/google": {
            "get": {
                "description": "Get all google fact checks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Show all google fact checks",
                "operationId": "get-all-google-fact-checks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page Token",
                        "name": "pageToken",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "language code",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/google.paging"
                        }
                    }
                }
            }
        },
        "/fact-check/ratings": {
            "get": {
                "description": "Get all ratings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Show all ratings",
                "operationId": "get-all-ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "all",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rating.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create rating",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Create rating",
                "operationId": "add-rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Rating Object",
                        "name": "Rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rating.rating"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Rating"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/fact-check/ratings/default": {
            "post": {
                "description": "Create Default Ratings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Create Default Ratings",
                "operationId": "add-default-ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rating.paging"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/fact-check/ratings/{rating_id}": {
            "get": {
                "description": "Get rating by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Show a rating by id",
                "operationId": "get-rating-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    }
                }
            },
            "put": {
                "description": "Update rating by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Update a rating by id",
                "operationId": "update-rating-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating",
                        "name": "Rating",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/rating.rating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Rating"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete rating by ID",
                "tags": [
                    "Rating"
                ],
                "summary": "Delete a rating",
                "operationId": "delete-rating-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/meta": {
            "get": {
                "description": "Get meta info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meta"
                ],
                "summary": "Get meta info",
                "operationId": "get-meta-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.metadata"
                        }
                    }
                }
            }
        },
        "/podcast": {
            "get": {
                "description": "Get all podcasts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Show all podcasts",
                "operationId": "get-all-podcasts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Primary Category",
                        "name": "primary_category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Language",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/podcast.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create podcast",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Create podcast",
                "operationId": "add-podcast",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Podcast Object",
                        "name": "Podcast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/podcast.podcast"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Podcast"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/podcast/episodes": {
            "get": {
                "description": "Get all episodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Episode"
                ],
                "summary": "Show all episodes",
                "operationId": "get-all-episodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Podcast",
                        "name": "podcast",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episode.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create episode",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Episode"
                ],
                "summary": "Create episode",
                "operationId": "add-episode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Episode Object",
                        "name": "Episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/episode.episode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/episode.episodeData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/podcast/episodes/{episode_id}": {
            "get": {
                "description": "Get episode by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Episode"
                ],
                "summary": "Show a episode by id",
                "operationId": "get-episode-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Episode ID",
                        "name": "episode_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episode.episodeData"
                        }
                    }
                }
            },
            "put": {
                "description": "Update episode by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Episode"
                ],
                "summary": "Update a episode by id",
                "operationId": "update-episode-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Episode ID",
                        "name": "episode_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Episode",
                        "name": "Episode",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/episode.episode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episode.episodeData"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete episode by ID",
                "tags": [
                    "Episode"
                ],
                "summary": "Delete a episode",
                "operationId": "delete-episode-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Episode ID",
                        "name": "episode_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/podcast/{podcast_id}": {
            "get": {
                "description": "Get podcast by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Show a podcast by id",
                "operationId": "get-podcast-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Podcast ID",
                        "name": "podcast_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Podcast"
                        }
                    }
                }
            },
            "put": {
                "description": "Update podcast by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Podcast"
                ],
                "summary": "Update a podcast by id",
                "operationId": "update-podcast-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Podcast ID",
                        "name": "podcast_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Podcast",
                        "name": "Podcast",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/podcast.podcast"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Podcast"
                        }
                    }
                }
            }
        },
        "/podcasts/{podcast_id}": {
            "delete": {
                "description": "Delete podcast by ID",
                "tags": [
                    "Podcast"
                ],
                "summary": "Delete a podcast",
                "operationId": "delete-podcast-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Podcast ID",
                        "name": "podcast_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "author.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Author"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "category.category": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "category.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "claim.claim": {
            "type": "object",
            "required": [
                "claim",
                "claimant_id",
                "rating_id"
            ],
            "properties": {
                "checked_date": {
                    "type": "string"
                },
                "claim": {
                    "type": "string"
                },
                "claim_date": {
                    "type": "string"
                },
                "claim_sources": {
                    "type": "string"
                },
                "claimant_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "fact": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "rating_id": {
                    "type": "integer"
                },
                "review_sources": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "claimant.claimant": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                }
            }
        },
        "claimant.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Claimant"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "episode.episode": {
            "type": "object",
            "required": [
                "audio_url",
                "episode",
                "season",
                "title"
            ],
            "properties": {
                "audio_url": {
                    "type": "string"
                },
                "author_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "episode": {
                    "type": "integer"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "podcast_id": {
                    "type": "integer"
                },
                "published_date": {
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "episode.episodeData": {
            "type": "object",
            "properties": {
                "audio_url": {
                    "type": "string"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Author"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "episode": {
                    "type": "integer"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "podcast": {
                    "$ref": "#/definitions/model.Podcast"
                },
                "podcast_id": {
                    "type": "integer"
                },
                "published_date": {
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "episode.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episode.episodeData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "event.event": {
            "type": "object",
            "required": [
                "event",
                "name"
            ],
            "properties": {
                "event": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                }
            }
        },
        "event.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Event"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "format.format": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "format.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Format"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_factly_dega-server_service_core_action_permissions_organisation.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/organisation.orgWithPermissions"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_factly_dega-server_service_core_action_permissions_space.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_permissions_space.spaceWithPermissions"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_factly_dega-server_service_core_action_permissions_space.spaceWithPermissions": {
            "type": "object",
            "properties": {
                "analytics": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fav_icon": {
                    "$ref": "#/definitions/model.Medium"
                },
                "fav_icon_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "header_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_id": {
                    "type": "integer"
                },
                "logo_mobile": {
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_mobile_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "mobile_icon": {
                    "$ref": "#/definitions/model.Medium"
                },
                "mobile_icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "permission": {
                    "$ref": "#/definitions/model.SpacePermission"
                },
                "site_address": {
                    "type": "string"
                },
                "site_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "verification_codes": {
                    "type": "string"
                }
            }
        },
        "github.com_factly_dega-server_service_core_action_request_organisation.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrganisationPermissionRequest"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_factly_dega-server_service_core_action_request_space.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SpacePermissionRequest"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_factly_dega-server_service_core_action_space.spaceWithPermissions": {
            "type": "object",
            "properties": {
                "analytics": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fav_icon": {
                    "$ref": "#/definitions/model.Medium"
                },
                "fav_icon_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "header_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_id": {
                    "type": "integer"
                },
                "logo_mobile": {
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_mobile_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "mobile_icon": {
                    "$ref": "#/definitions/model.Medium"
                },
                "mobile_icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "site_address": {
                    "type": "string"
                },
                "site_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "verification_codes": {
                    "type": "string"
                }
            }
        },
        "google.paging": {
            "type": "object",
            "properties": {
                "nextPage": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "medium.medium": {
            "type": "object",
            "required": [
                "dimensions",
                "file_size",
                "name",
                "type"
            ],
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "menu.menu": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "menu": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "menu.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Menu"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "meta.meta": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "object",
                    "additionalProperties": true
                },
                "site_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "meta.metadata": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta.meta"
                },
                "success": {
                    "type": "integer"
                }
            }
        },
        "model.Author": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "kid": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Post"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Claim": {
            "type": "object",
            "properties": {
                "checked_date": {
                    "type": "string"
                },
                "claim": {
                    "type": "string"
                },
                "claim_date": {
                    "type": "string"
                },
                "claim_sources": {
                    "type": "string"
                },
                "claimant": {
                    "$ref": "#/definitions/model.Claimant"
                },
                "claimant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fact": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "rating": {
                    "$ref": "#/definitions/model.Rating"
                },
                "rating_id": {
                    "type": "integer"
                },
                "review_sources": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Claimant": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "tag_line": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Event": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Format": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Info": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "integer"
                },
                "episodes": {
                    "type": "integer"
                },
                "podcasts": {
                    "type": "integer"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PostCount"
                    }
                },
                "tags": {
                    "type": "integer"
                }
            }
        },
        "model.Medium": {
            "type": "object",
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Menu": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "menu": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.OrganisationPermission": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "spaces": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.OrganisationPermissionRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "spaces": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Permission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resource": {
                    "type": "string"
                }
            }
        },
        "model.Podcast": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "footer_code": {
                    "type": "string"
                },
                "header_code": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "primary_category": {
                    "$ref": "#/definitions/model.Category"
                },
                "primary_category_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Policy": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Author"
                    }
                }
            }
        },
        "model.Post": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/model.Format"
                },
                "format_id": {
                    "type": "integer"
                },
                "header_code": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_highlighted": {
                    "type": "boolean"
                },
                "is_page": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "meta": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "published_date": {
                    "type": "string"
                },
                "schemas": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.PostCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Rating": {
            "type": "object",
            "properties": {
                "background_colour": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numeric_value": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "text_colour": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Space": {
            "type": "object",
            "properties": {
                "analytics": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fav_icon": {
                    "$ref": "#/definitions/model.Medium"
                },
                "fav_icon_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "header_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_id": {
                    "type": "integer"
                },
                "logo_mobile": {
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_mobile_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "mobile_icon": {
                    "$ref": "#/definitions/model.Medium"
                },
                "mobile_icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "site_address": {
                    "type": "string"
                },
                "site_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "verification_codes": {
                    "type": "string"
                }
            }
        },
        "model.SpacePermission": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "episodes": {
                    "type": "integer"
                },
                "fact_check": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "media": {
                    "type": "integer"
                },
                "podcast": {
                    "type": "boolean"
                },
                "posts": {
                    "type": "integer"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.SpacePermissionRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "episodes": {
                    "type": "integer"
                },
                "fact_check": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "media": {
                    "type": "integer"
                },
                "podcast": {
                    "type": "boolean"
                },
                "posts": {
                    "type": "integer"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Post"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Webhook": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Event"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "organisation.orgPermissionRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "space_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SpacePermission"
                    }
                },
                "spaces": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "organisation.orgWithPermissions": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "permission": {
                    "$ref": "#/definitions/model.OrganisationPermission"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "organisation.organisationPermission": {
            "type": "object",
            "required": [
                "organisation_id"
            ],
            "properties": {
                "organisation_id": {
                    "type": "integer"
                },
                "spaces": {
                    "type": "integer"
                }
            }
        },
        "organisation.organisationPermissionRequest": {
            "type": "object",
            "required": [
                "organisation_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "spaces": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "page.page": {
            "type": "object",
            "required": [
                "format_id",
                "title"
            ],
            "properties": {
                "author_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "format_id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_highlighted": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "published_date": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "page.pageData": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Author"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/model.Format"
                },
                "format_id": {
                    "type": "integer"
                },
                "header_code": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_highlighted": {
                    "type": "boolean"
                },
                "is_page": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "meta": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "published_date": {
                    "type": "string"
                },
                "schemas": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "podcast.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Podcast"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "podcast.podcast": {
            "type": "object",
            "required": [
                "language",
                "title"
            ],
            "properties": {
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "footer_code": {
                    "type": "string"
                },
                "header_code": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "primary_category_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "policy.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Policy"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "policy.policyReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "post.post": {
            "type": "object",
            "required": [
                "format_id",
                "title"
            ],
            "properties": {
                "author_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "claim_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "format_id": {
                    "type": "integer"
                },
                "header_code": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_highlighted": {
                    "type": "boolean"
                },
                "is_page": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "meta": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "published_date": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "post.postData": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Author"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "claim_order": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Claim"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/model.Format"
                },
                "format_id": {
                    "type": "integer"
                },
                "header_code": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_highlighted": {
                    "type": "boolean"
                },
                "is_page": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "meta": {
                    "type": "string"
                },
                "meta_fields": {
                    "type": "string"
                },
                "published_date": {
                    "type": "string"
                },
                "schemas": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space": {
                    "$ref": "#/definitions/model.Space"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "post.templateData": {
            "type": "object",
            "required": [
                "post_id"
            ],
            "properties": {
                "post_id": {
                    "type": "integer"
                }
            }
        },
        "rating.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Rating"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "rating.rating": {
            "type": "object",
            "required": [
                "background_colour",
                "name",
                "numeric_value",
                "text_colour"
            ],
            "properties": {
                "background_colour": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "medium_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numeric_value": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "text_colour": {
                    "type": "string"
                }
            }
        },
        "search.searchQuery": {
            "type": "object",
            "required": [
                "q"
            ],
            "properties": {
                "facetFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "q": {
                    "type": "string"
                }
            }
        },
        "space.application": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "space.orgWithSpace": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/space.application"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "permission": {
                    "$ref": "#/definitions/space.organisationUser"
                },
                "slug": {
                    "type": "string"
                },
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_factly_dega-server_service_core_action_space.spaceWithPermissions"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "space.organisationUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "space.space": {
            "type": "object",
            "required": [
                "name",
                "organisation_id"
            ],
            "properties": {
                "analytics": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fav_icon_id": {
                    "type": "integer"
                },
                "footer_code": {
                    "type": "string"
                },
                "header_code": {
                    "type": "string"
                },
                "logo_id": {
                    "type": "integer"
                },
                "logo_mobile_id": {
                    "type": "integer"
                },
                "meta_fields": {
                    "type": "string"
                },
                "mobile_icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "site_address": {
                    "type": "string"
                },
                "site_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                },
                "verification_codes": {
                    "type": "string"
                }
            }
        },
        "space.spacePermission": {
            "type": "object",
            "required": [
                "space_id"
            ],
            "properties": {
                "episodes": {
                    "type": "integer"
                },
                "fact_check": {
                    "type": "boolean"
                },
                "media": {
                    "type": "integer"
                },
                "podcast": {
                    "type": "boolean"
                },
                "posts": {
                    "type": "integer"
                },
                "space_id": {
                    "type": "integer"
                }
            }
        },
        "space.spacePermissionRequest": {
            "type": "object",
            "required": [
                "space_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "episodes": {
                    "type": "integer"
                },
                "fact_check": {
                    "type": "boolean"
                },
                "media": {
                    "type": "integer"
                },
                "podcast": {
                    "type": "boolean"
                },
                "posts": {
                    "type": "integer"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "tag.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "tag.tag": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "meta_fields": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "user.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.userPolicy"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "user.policyRes": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.userPolicy": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "kid": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "medium": {
                    "$ref": "#/definitions/model.Medium"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.policyRes"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "webhook.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Webhook"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "webhook.webhook": {
            "type": "object",
            "required": [
                "event_ids",
                "url"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "event_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}