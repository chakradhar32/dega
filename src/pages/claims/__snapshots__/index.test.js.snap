// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Claims List component should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Claims
        permission={
          Object {
            "actions": Array [
              "create",
            ],
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Link
                  to="/claims/create"
                >
                  <LinkAnchor
                    href="/claims/create"
                    navigate={[Function]}
                  >
                    <a
                      href="/claims/create"
                      onClick={[Function]}
                    >
                      <Button
                        block={false}
                        disabled={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                      >
                        <Wave>
                          <button
                            className="ant-btn"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <LoadingIcon
                              existIcon={false}
                              loading={false}
                              prefixCls="ant-btn"
                            >
                              <CSSMotion
                                motionName="ant-btn-loading-icon-motion"
                                onAppearActive={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveStart={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </LoadingIcon>
                            <span
                              key=".0"
                            >
                              Create New
                            </span>
                          </button>
                        </Wave>
                      </Button>
                    </a>
                  </LinkAnchor>
                </Link>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <ClaimList
                  actions={
                    Array [
                      "create",
                    ]
                  }
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        size="small"
                      >
                        <div
                          className="ant-space-item"
                          style={
                            Object {
                              "marginBottom": 8,
                            }
                          }
                        >
                          <ForwardRef(InternalForm)
                            form={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "filters",
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                              }
                            }
                            initialValues={
                              Object {
                                "limit": 5,
                                "page": 1,
                              }
                            }
                            layout="inline"
                            name="filters"
                            onFinish={[Function]}
                            style={
                              Object {
                                "maxWidth": "100%",
                              }
                            }
                          >
                            <SizeContextProvider>
                              <ForwardRef(Form)
                                className="ant-form ant-form-inline"
                                form={
                                  Object {
                                    "__INTERNAL__": Object {
                                      "itemRef": [Function],
                                      "name": "filters",
                                    },
                                    "getFieldError": [Function],
                                    "getFieldInstance": [Function],
                                    "getFieldValue": [Function],
                                    "getFieldsError": [Function],
                                    "getFieldsValue": [Function],
                                    "getInternalHooks": [Function],
                                    "isFieldTouched": [Function],
                                    "isFieldValidating": [Function],
                                    "isFieldsTouched": [Function],
                                    "isFieldsValidating": [Function],
                                    "resetFields": [Function],
                                    "scrollToField": [Function],
                                    "setFields": [Function],
                                    "setFieldsValue": [Function],
                                    "submit": [Function],
                                    "validateFields": [Function],
                                  }
                                }
                                id="filters"
                                initialValues={
                                  Object {
                                    "limit": 5,
                                    "page": 1,
                                  }
                                }
                                name="filters"
                                onFinish={[Function]}
                                onFinishFailed={[Function]}
                                style={
                                  Object {
                                    "maxWidth": "100%",
                                  }
                                }
                              >
                                <form
                                  className="ant-form ant-form-inline"
                                  id="filters"
                                  onSubmit={[Function]}
                                  style={
                                    Object {
                                      "maxWidth": "100%",
                                    }
                                  }
                                >
                                  <FormItem
                                    label="Search"
                                    name="q"
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Search"
                                      messageVariables={
                                        Object {
                                          "label": "Search",
                                        }
                                      }
                                      name="q"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "25%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_q"
                                        label="Search"
                                        messageVariables={
                                          Object {
                                            "label": "Search",
                                          }
                                        }
                                        name={
                                          Array [
                                            "q",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "25%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "25%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "25%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_q"
                                              label="Search"
                                              name="q"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "25%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_q"
                                                    title="Search"
                                                  >
                                                    Search
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Search"
                                              name={
                                                Array [
                                                  "q",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "25%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={2}
                                                      >
                                                        <Input
                                                          id="filters_q"
                                                          onChange={[Function]}
                                                          placeholder="search post"
                                                          type="text"
                                                        >
                                                          <ClearableLabeledInput
                                                            bordered={true}
                                                            element={
                                                              <input
                                                                className="ant-input"
                                                                id="filters_q"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                placeholder="search post"
                                                                type="text"
                                                              />
                                                            }
                                                            focused={false}
                                                            handleReset={[Function]}
                                                            id="filters_q"
                                                            inputType="input"
                                                            onChange={[Function]}
                                                            placeholder="search post"
                                                            prefixCls="ant-input"
                                                            triggerFocus={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <input
                                                              className="ant-input"
                                                              id="filters_q"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="search post"
                                                              type="text"
                                                              value=""
                                                            />
                                                          </ClearableLabeledInput>
                                                        </Input>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem
                                    label="Sort"
                                    name="sort"
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Sort"
                                      messageVariables={
                                        Object {
                                          "label": "Sort",
                                        }
                                      }
                                      name="sort"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_sort"
                                        label="Sort"
                                        messageVariables={
                                          Object {
                                            "label": "Sort",
                                          }
                                        }
                                        name={
                                          Array [
                                            "sort",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "15%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "15%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "15%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_sort"
                                              label="Sort"
                                              name="sort"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_sort"
                                                    title="Sort"
                                                  >
                                                    Sort
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Sort"
                                              name={
                                                Array [
                                                  "sort",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={2}
                                                      >
                                                        <ForwardRef(InternalSelect)
                                                          id="filters_sort"
                                                          onChange={[Function]}
                                                        >
                                                          <Select
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            transitionName="slide-up"
                                                          >
                                                            <ForwardRef(Select)
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              dropdownClassName=""
                                                              id="filters_sort"
                                                              inputIcon={[Function]}
                                                              listHeight={256}
                                                              listItemHeight={24}
                                                              menuItemSelectedIcon={null}
                                                              notFoundContent={
                                                                <Context.Consumer>
                                                                  [Function]
                                                                </Context.Consumer>
                                                              }
                                                              onChange={[Function]}
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              transitionName="slide-up"
                                                            >
                                                              <div
                                                                className="ant-select ant-select-single ant-select-show-arrow"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectTrigger
                                                                  containerWidth={null}
                                                                  dropdownClassName=""
                                                                  empty={false}
                                                                  getTriggerDOMNode={[Function]}
                                                                  popupElement={
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Latest",
                                                                              "key": null,
                                                                              "value": "desc",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "desc",
                                                                          },
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Old",
                                                                              "key": null,
                                                                              "value": "asc",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "asc",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="filters_sort"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Latest",
                                                                            "key": null,
                                                                            "value": "desc",
                                                                          },
                                                                          Object {
                                                                            "children": "Old",
                                                                            "key": null,
                                                                            "value": "asc",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={Set {}}
                                                                      virtual={true}
                                                                    />
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  transitionName="slide-up"
                                                                >
                                                                  <Trigger
                                                                    action={Array []}
                                                                    afterPopupVisibleChange={[Function]}
                                                                    autoDestroy={false}
                                                                    blurDelay={0.15}
                                                                    builtinPlacements={
                                                                      Object {
                                                                        "bottomLeft": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tl",
                                                                            "bl",
                                                                          ],
                                                                        },
                                                                        "bottomRight": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tr",
                                                                            "br",
                                                                          ],
                                                                        },
                                                                        "topLeft": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "bl",
                                                                            "tl",
                                                                          ],
                                                                        },
                                                                        "topRight": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "br",
                                                                            "tr",
                                                                          ],
                                                                        },
                                                                      }
                                                                    }
                                                                    defaultPopupVisible={false}
                                                                    destroyPopupOnHide={false}
                                                                    focusDelay={0}
                                                                    getDocument={[Function]}
                                                                    getPopupClassNameFromAlign={[Function]}
                                                                    getTriggerDOMNode={[Function]}
                                                                    hideAction={Array []}
                                                                    mask={false}
                                                                    maskClosable={true}
                                                                    mouseEnterDelay={0}
                                                                    mouseLeaveDelay={0.1}
                                                                    onPopupAlign={[Function]}
                                                                    onPopupVisibleChange={[Function]}
                                                                    popup={
                                                                      <div>
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={
                                                                            Array [
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "Latest",
                                                                                  "key": null,
                                                                                  "value": "desc",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "desc",
                                                                              },
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "Old",
                                                                                  "key": null,
                                                                                  "value": "asc",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "asc",
                                                                              },
                                                                            ]
                                                                          }
                                                                          height={256}
                                                                          id="filters_sort"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={
                                                                            <Context.Consumer>
                                                                              [Function]
                                                                            </Context.Consumer>
                                                                          }
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "children": "Latest",
                                                                                "key": null,
                                                                                "value": "desc",
                                                                              },
                                                                              Object {
                                                                                "children": "Old",
                                                                                "key": null,
                                                                                "value": "asc",
                                                                              },
                                                                            ]
                                                                          }
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={Set {}}
                                                                          virtual={true}
                                                                        />
                                                                      </div>
                                                                    }
                                                                    popupAlign={Object {}}
                                                                    popupClassName=""
                                                                    popupPlacement="bottomLeft"
                                                                    popupStyle={
                                                                      Object {
                                                                        "minWidth": null,
                                                                        "width": null,
                                                                      }
                                                                    }
                                                                    popupTransitionName="slide-up"
                                                                    prefixCls="ant-select-dropdown"
                                                                    showAction={Array []}
                                                                  >
                                                                    <Selector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-placeholder"
                                                                            />
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="filters_sort"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      key="trigger"
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      values={Array []}
                                                                    >
                                                                      <div
                                                                        className="ant-select-selector"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                      >
                                                                        <SingleSelector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          className=""
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="filters_sort_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="filters_sort_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="filters_sort_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="filters_sort"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-placeholder"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          id="filters_sort"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          inputRef={
                                                                            Object {
                                                                              "current": <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />,
                                                                            }
                                                                          }
                                                                          listHeight={256}
                                                                          listItemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={
                                                                            <Context.Consumer>
                                                                              [Function]
                                                                            </Context.Consumer>
                                                                          }
                                                                          onChange={[Function]}
                                                                          onInputChange={[Function]}
                                                                          onInputCompositionEnd={[Function]}
                                                                          onInputCompositionStart={[Function]}
                                                                          onInputKeyDown={[Function]}
                                                                          onInputMouseDown={[Function]}
                                                                          onInputPaste={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          prefixCls="ant-select"
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={false}
                                                                          tokenWithEnter={false}
                                                                          transitionName="slide-up"
                                                                          values={Array []}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-search"
                                                                          >
                                                                            <Input
                                                                              accessibilityIndex={0}
                                                                              attrs={Object {}}
                                                                              editable={false}
                                                                              id="filters_sort"
                                                                              inputElement={null}
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              prefixCls="ant-select"
                                                                              value=""
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autoComplete="off"
                                                                                className="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                onChange={[Function]}
                                                                                onCompositionEnd={[Function]}
                                                                                onCompositionStart={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onPaste={[Function]}
                                                                                readOnly={true}
                                                                                role="combobox"
                                                                                style={
                                                                                  Object {
                                                                                    "opacity": 0,
                                                                                  }
                                                                                }
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </Input>
                                                                          </span>
                                                                          <span
                                                                            className="ant-select-selection-placeholder"
                                                                          />
                                                                        </SingleSelector>
                                                                      </div>
                                                                    </Selector>
                                                                  </Trigger>
                                                                </SelectTrigger>
                                                                <TransBtn
                                                                  className="ant-select-arrow"
                                                                  customizeIcon={[Function]}
                                                                  customizeIconProps={
                                                                    Object {
                                                                      "focused": false,
                                                                      "loading": undefined,
                                                                      "open": undefined,
                                                                      "searchValue": "",
                                                                      "showSearch": false,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="ant-select-arrow"
                                                                    onMouseDown={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "WebkitUserSelect": "none",
                                                                        "userSelect": "none",
                                                                      }
                                                                    }
                                                                    unselectable="on"
                                                                  >
                                                                    <ForwardRef(DownOutlined)
                                                                      className="ant-select-suffix"
                                                                    >
                                                                      <AntdIcon
                                                                        className="ant-select-suffix"
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          aria-label="down"
                                                                          className="anticon anticon-down ant-select-suffix"
                                                                          role="img"
                                                                        >
                                                                          <IconReact
                                                                            className=""
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className=""
                                                                              data-icon="down"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              key="svg-down"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                key="svg-down-svg-0"
                                                                              />
                                                                            </svg>
                                                                          </IconReact>
                                                                        </span>
                                                                      </AntdIcon>
                                                                    </ForwardRef(DownOutlined)>
                                                                  </span>
                                                                </TransBtn>
                                                              </div>
                                                            </ForwardRef(Select)>
                                                          </Select>
                                                        </ForwardRef(InternalSelect)>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem
                                    label="Claimants"
                                    name="claimants"
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Claimants"
                                      messageVariables={
                                        Object {
                                          "label": "Claimants",
                                        }
                                      }
                                      name="claimants"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_claimants"
                                        label="Claimants"
                                        messageVariables={
                                          Object {
                                            "label": "Claimants",
                                          }
                                        }
                                        name={
                                          Array [
                                            "claimants",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "15%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "15%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "15%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_claimants"
                                              label="Claimants"
                                              name="claimants"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_claimants"
                                                    title="Claimants"
                                                  >
                                                    Claimants
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Claimants"
                                              name={
                                                Array [
                                                  "claimants",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={2}
                                                      >
                                                        <Selector
                                                          action="Claimants"
                                                          id="filters_claimants"
                                                          mode="multiple"
                                                          onChange={[Function]}
                                                        >
                                                          <ForwardRef(InternalSelect)
                                                            allowClear={true}
                                                            bordered={true}
                                                            defaultValue={Array []}
                                                            filterOption={[Function]}
                                                            listHeight={128}
                                                            loading={false}
                                                            mode="multiple"
                                                            notFoundContent={null}
                                                            onChange={[Function]}
                                                            onPopupScroll={[Function]}
                                                            onSearch={[Function]}
                                                            placeholder="Select claimants"
                                                          >
                                                            <Select
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              inputIcon={[Function]}
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              placeholder="Select claimants"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              transitionName="slide-up"
                                                            >
                                                              <ForwardRef(Select)
                                                                allowClear={true}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={Array []}
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputIcon={[Function]}
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                notFoundContent={null}
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                placeholder="Select claimants"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                transitionName="slide-up"
                                                              >
                                                                <div
                                                                  className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectTrigger
                                                                    containerWidth={null}
                                                                    dropdownClassName=""
                                                                    empty={true}
                                                                    getTriggerDOMNode={[Function]}
                                                                    popupElement={
                                                                      <ForwardRef(OptionList)
                                                                        childrenAsData={true}
                                                                        defaultActiveFirstOption={true}
                                                                        flattenOptions={Array []}
                                                                        height={128}
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        itemHeight={24}
                                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                        multiple={true}
                                                                        notFoundContent={null}
                                                                        onActiveValue={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onScroll={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        options={Array []}
                                                                        prefixCls="ant-select"
                                                                        searchValue=""
                                                                        values={Set {}}
                                                                        virtual={true}
                                                                      />
                                                                    }
                                                                    prefixCls="ant-select"
                                                                    transitionName="slide-up"
                                                                    visible={false}
                                                                  >
                                                                    <Trigger
                                                                      action={Array []}
                                                                      afterPopupVisibleChange={[Function]}
                                                                      autoDestroy={false}
                                                                      blurDelay={0.15}
                                                                      builtinPlacements={
                                                                        Object {
                                                                          "bottomLeft": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tl",
                                                                              "bl",
                                                                            ],
                                                                          },
                                                                          "bottomRight": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tr",
                                                                              "br",
                                                                            ],
                                                                          },
                                                                          "topLeft": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "bl",
                                                                              "tl",
                                                                            ],
                                                                          },
                                                                          "topRight": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "br",
                                                                              "tr",
                                                                            ],
                                                                          },
                                                                        }
                                                                      }
                                                                      defaultPopupVisible={false}
                                                                      destroyPopupOnHide={false}
                                                                      focusDelay={0}
                                                                      getDocument={[Function]}
                                                                      getPopupClassNameFromAlign={[Function]}
                                                                      getTriggerDOMNode={[Function]}
                                                                      hideAction={Array []}
                                                                      mask={false}
                                                                      maskClosable={true}
                                                                      mouseEnterDelay={0}
                                                                      mouseLeaveDelay={0.1}
                                                                      onPopupAlign={[Function]}
                                                                      onPopupVisibleChange={[Function]}
                                                                      popup={
                                                                        <div>
                                                                          <ForwardRef(OptionList)
                                                                            childrenAsData={true}
                                                                            defaultActiveFirstOption={true}
                                                                            flattenOptions={Array []}
                                                                            height={128}
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            itemHeight={24}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            multiple={true}
                                                                            notFoundContent={null}
                                                                            onActiveValue={[Function]}
                                                                            onMouseEnter={[Function]}
                                                                            onScroll={[Function]}
                                                                            onSelect={[Function]}
                                                                            onToggleOpen={[Function]}
                                                                            options={Array []}
                                                                            prefixCls="ant-select"
                                                                            searchValue=""
                                                                            values={Set {}}
                                                                            virtual={true}
                                                                          />
                                                                        </div>
                                                                      }
                                                                      popupAlign={Object {}}
                                                                      popupClassName="ant-select-dropdown-empty"
                                                                      popupPlacement="bottomLeft"
                                                                      popupStyle={
                                                                        Object {
                                                                          "minWidth": null,
                                                                          "width": null,
                                                                        }
                                                                      }
                                                                      popupTransitionName="slide-up"
                                                                      popupVisible={false}
                                                                      prefixCls="ant-select-dropdown"
                                                                      showAction={Array []}
                                                                    >
                                                                      <Selector
                                                                        accessibilityIndex={0}
                                                                        activeValue={null}
                                                                        allowClear={true}
                                                                        className=""
                                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                        defaultValue={Array []}
                                                                        domRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="ant-select-selector"
                                                                            >
                                                                              <span
                                                                                class="ant-select-selection-search"
                                                                                style="width: 0px;"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                                <span
                                                                                  aria-hidden="true"
                                                                                  class="ant-select-selection-search-mirror"
                                                                                >
                                                                                  
                                                                                   
                                                                                </span>
                                                                              </span>
                                                                              <span
                                                                                class="ant-select-selection-placeholder"
                                                                              >
                                                                                Select claimants
                                                                              </span>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                        dropdownClassName=""
                                                                        filterOption={[Function]}
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        inputElement={null}
                                                                        inputIcon={[Function]}
                                                                        key="trigger"
                                                                        listHeight={128}
                                                                        listItemHeight={24}
                                                                        loading={false}
                                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                        mode="multiple"
                                                                        multiple={true}
                                                                        notFoundContent={null}
                                                                        onChange={[Function]}
                                                                        onPopupScroll={[Function]}
                                                                        onSearch={[Function]}
                                                                        onSearchSubmit={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        placeholder="Select claimants"
                                                                        prefixCls="ant-select"
                                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                                        searchValue=""
                                                                        showSearch={true}
                                                                        tokenWithEnter={false}
                                                                        transitionName="slide-up"
                                                                        values={Array []}
                                                                      >
                                                                        <div
                                                                          className="ant-select-selector"
                                                                          onClick={[Function]}
                                                                          onMouseDown={[Function]}
                                                                        >
                                                                          <SelectSelector
                                                                            accessibilityIndex={0}
                                                                            activeValue={null}
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={Array []}
                                                                            domRef={
                                                                              Object {
                                                                                "current": <div
                                                                                  class="ant-select-selector"
                                                                                >
                                                                                  <span
                                                                                    class="ant-select-selection-search"
                                                                                    style="width: 0px;"
                                                                                  >
                                                                                    <input
                                                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                      aria-autocomplete="list"
                                                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                      aria-haspopup="listbox"
                                                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                      autocomplete="off"
                                                                                      class="ant-select-selection-search-input"
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      readonly=""
                                                                                      role="combobox"
                                                                                      style="opacity: 0;"
                                                                                      type="search"
                                                                                      unselectable="on"
                                                                                      value=""
                                                                                    />
                                                                                    <span
                                                                                      aria-hidden="true"
                                                                                      class="ant-select-selection-search-mirror"
                                                                                    >
                                                                                      
                                                                                       
                                                                                    </span>
                                                                                  </span>
                                                                                  <span
                                                                                    class="ant-select-selection-placeholder"
                                                                                  >
                                                                                    Select claimants
                                                                                  </span>
                                                                                </div>,
                                                                              }
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            inputElement={null}
                                                                            inputIcon={[Function]}
                                                                            inputRef={
                                                                              Object {
                                                                                "current": <input
                                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />,
                                                                              }
                                                                            }
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            multiple={true}
                                                                            notFoundContent={null}
                                                                            onChange={[Function]}
                                                                            onInputChange={[Function]}
                                                                            onInputCompositionEnd={[Function]}
                                                                            onInputCompositionStart={[Function]}
                                                                            onInputKeyDown={[Function]}
                                                                            onInputMouseDown={[Function]}
                                                                            onInputPaste={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            onSearchSubmit={[Function]}
                                                                            onSelect={[Function]}
                                                                            onToggleOpen={[Function]}
                                                                            placeholder="Select claimants"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            searchValue=""
                                                                            showSearch={true}
                                                                            tokenWithEnter={false}
                                                                            transitionName="slide-up"
                                                                            values={Array []}
                                                                          >
                                                                            <CSSMotionList
                                                                              component={false}
                                                                              keys={Array []}
                                                                              motionAppear={true}
                                                                            />
                                                                            <span
                                                                              className="ant-select-selection-search"
                                                                              style={
                                                                                Object {
                                                                                  "width": 0,
                                                                                }
                                                                              }
                                                                            >
                                                                              <Input
                                                                                accessibilityIndex={0}
                                                                                attrs={Object {}}
                                                                                id="rc_select_TEST_OR_SSR"
                                                                                inputElement={null}
                                                                                onChange={[Function]}
                                                                                onCompositionEnd={[Function]}
                                                                                onCompositionStart={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onPaste={[Function]}
                                                                                prefixCls="ant-select"
                                                                                value=""
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                  autoComplete="off"
                                                                                  className="ant-select-selection-search-input"
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  readOnly={true}
                                                                                  role="combobox"
                                                                                  style={
                                                                                    Object {
                                                                                      "opacity": 0,
                                                                                    }
                                                                                  }
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                              </Input>
                                                                              <span
                                                                                aria-hidden={true}
                                                                                className="ant-select-selection-search-mirror"
                                                                              >
                                                                                 
                                                                              </span>
                                                                            </span>
                                                                            <span
                                                                              className="ant-select-selection-placeholder"
                                                                            >
                                                                              Select claimants
                                                                            </span>
                                                                          </SelectSelector>
                                                                        </div>
                                                                      </Selector>
                                                                    </Trigger>
                                                                  </SelectTrigger>
                                                                </div>
                                                              </ForwardRef(Select)>
                                                            </Select>
                                                          </ForwardRef(InternalSelect)>
                                                        </Selector>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem
                                    label="Ratings"
                                    name="ratings"
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Ratings"
                                      messageVariables={
                                        Object {
                                          "label": "Ratings",
                                        }
                                      }
                                      name="ratings"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_ratings"
                                        label="Ratings"
                                        messageVariables={
                                          Object {
                                            "label": "Ratings",
                                          }
                                        }
                                        name={
                                          Array [
                                            "ratings",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "15%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "15%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "15%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_ratings"
                                              label="Ratings"
                                              name="ratings"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_ratings"
                                                    title="Ratings"
                                                  >
                                                    Ratings
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Ratings"
                                              name={
                                                Array [
                                                  "ratings",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={2}
                                                      >
                                                        <Selector
                                                          action="Ratings"
                                                          id="filters_ratings"
                                                          mode="multiple"
                                                          onChange={[Function]}
                                                        >
                                                          <ForwardRef(InternalSelect)
                                                            allowClear={true}
                                                            bordered={true}
                                                            defaultValue={Array []}
                                                            filterOption={[Function]}
                                                            listHeight={128}
                                                            loading={true}
                                                            mode="multiple"
                                                            notFoundContent={null}
                                                            onChange={[Function]}
                                                            onPopupScroll={[Function]}
                                                            onSearch={[Function]}
                                                            placeholder="Select ratings"
                                                          >
                                                            <Select
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              inputIcon={
                                                                <ForwardRef(LoadingOutlined)
                                                                  spin={true}
                                                                />
                                                              }
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={true}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              placeholder="Select ratings"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              transitionName="slide-up"
                                                            >
                                                              <ForwardRef(Select)
                                                                allowClear={true}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={Array []}
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputIcon={
                                                                  <ForwardRef(LoadingOutlined)
                                                                    spin={true}
                                                                  />
                                                                }
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={true}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                notFoundContent={null}
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                placeholder="Select ratings"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                transitionName="slide-up"
                                                              >
                                                                <div
                                                                  className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-arrow ant-select-loading ant-select-show-search"
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectTrigger
                                                                    containerWidth={null}
                                                                    dropdownClassName=""
                                                                    empty={true}
                                                                    getTriggerDOMNode={[Function]}
                                                                    popupElement={
                                                                      <ForwardRef(OptionList)
                                                                        childrenAsData={true}
                                                                        defaultActiveFirstOption={true}
                                                                        flattenOptions={Array []}
                                                                        height={128}
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        itemHeight={24}
                                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                        multiple={true}
                                                                        notFoundContent={null}
                                                                        onActiveValue={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onScroll={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        options={Array []}
                                                                        prefixCls="ant-select"
                                                                        searchValue=""
                                                                        values={Set {}}
                                                                        virtual={true}
                                                                      />
                                                                    }
                                                                    prefixCls="ant-select"
                                                                    transitionName="slide-up"
                                                                    visible={false}
                                                                  >
                                                                    <Trigger
                                                                      action={Array []}
                                                                      afterPopupVisibleChange={[Function]}
                                                                      autoDestroy={false}
                                                                      blurDelay={0.15}
                                                                      builtinPlacements={
                                                                        Object {
                                                                          "bottomLeft": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tl",
                                                                              "bl",
                                                                            ],
                                                                          },
                                                                          "bottomRight": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tr",
                                                                              "br",
                                                                            ],
                                                                          },
                                                                          "topLeft": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "bl",
                                                                              "tl",
                                                                            ],
                                                                          },
                                                                          "topRight": Object {
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 0,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "br",
                                                                              "tr",
                                                                            ],
                                                                          },
                                                                        }
                                                                      }
                                                                      defaultPopupVisible={false}
                                                                      destroyPopupOnHide={false}
                                                                      focusDelay={0}
                                                                      getDocument={[Function]}
                                                                      getPopupClassNameFromAlign={[Function]}
                                                                      getTriggerDOMNode={[Function]}
                                                                      hideAction={Array []}
                                                                      mask={false}
                                                                      maskClosable={true}
                                                                      mouseEnterDelay={0}
                                                                      mouseLeaveDelay={0.1}
                                                                      onPopupAlign={[Function]}
                                                                      onPopupVisibleChange={[Function]}
                                                                      popup={
                                                                        <div>
                                                                          <ForwardRef(OptionList)
                                                                            childrenAsData={true}
                                                                            defaultActiveFirstOption={true}
                                                                            flattenOptions={Array []}
                                                                            height={128}
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            itemHeight={24}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            multiple={true}
                                                                            notFoundContent={null}
                                                                            onActiveValue={[Function]}
                                                                            onMouseEnter={[Function]}
                                                                            onScroll={[Function]}
                                                                            onSelect={[Function]}
                                                                            onToggleOpen={[Function]}
                                                                            options={Array []}
                                                                            prefixCls="ant-select"
                                                                            searchValue=""
                                                                            values={Set {}}
                                                                            virtual={true}
                                                                          />
                                                                        </div>
                                                                      }
                                                                      popupAlign={Object {}}
                                                                      popupClassName="ant-select-dropdown-empty"
                                                                      popupPlacement="bottomLeft"
                                                                      popupStyle={
                                                                        Object {
                                                                          "minWidth": null,
                                                                          "width": null,
                                                                        }
                                                                      }
                                                                      popupTransitionName="slide-up"
                                                                      popupVisible={false}
                                                                      prefixCls="ant-select-dropdown"
                                                                      showAction={Array []}
                                                                    >
                                                                      <Selector
                                                                        accessibilityIndex={0}
                                                                        activeValue={null}
                                                                        allowClear={true}
                                                                        className=""
                                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                        defaultValue={Array []}
                                                                        domRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="ant-select-selector"
                                                                            >
                                                                              <span
                                                                                class="ant-select-selection-search"
                                                                                style="width: 0px;"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                                <span
                                                                                  aria-hidden="true"
                                                                                  class="ant-select-selection-search-mirror"
                                                                                >
                                                                                  
                                                                                   
                                                                                </span>
                                                                              </span>
                                                                              <span
                                                                                class="ant-select-selection-placeholder"
                                                                              >
                                                                                Select ratings
                                                                              </span>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                        dropdownClassName=""
                                                                        filterOption={[Function]}
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        inputElement={null}
                                                                        inputIcon={
                                                                          <ForwardRef(LoadingOutlined)
                                                                            spin={true}
                                                                          />
                                                                        }
                                                                        key="trigger"
                                                                        listHeight={128}
                                                                        listItemHeight={24}
                                                                        loading={true}
                                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                        mode="multiple"
                                                                        multiple={true}
                                                                        notFoundContent={null}
                                                                        onChange={[Function]}
                                                                        onPopupScroll={[Function]}
                                                                        onSearch={[Function]}
                                                                        onSearchSubmit={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        placeholder="Select ratings"
                                                                        prefixCls="ant-select"
                                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                                        searchValue=""
                                                                        showSearch={true}
                                                                        tokenWithEnter={false}
                                                                        transitionName="slide-up"
                                                                        values={Array []}
                                                                      >
                                                                        <div
                                                                          className="ant-select-selector"
                                                                          onClick={[Function]}
                                                                          onMouseDown={[Function]}
                                                                        >
                                                                          <SelectSelector
                                                                            accessibilityIndex={0}
                                                                            activeValue={null}
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={Array []}
                                                                            domRef={
                                                                              Object {
                                                                                "current": <div
                                                                                  class="ant-select-selector"
                                                                                >
                                                                                  <span
                                                                                    class="ant-select-selection-search"
                                                                                    style="width: 0px;"
                                                                                  >
                                                                                    <input
                                                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                      aria-autocomplete="list"
                                                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                      aria-haspopup="listbox"
                                                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                      autocomplete="off"
                                                                                      class="ant-select-selection-search-input"
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      readonly=""
                                                                                      role="combobox"
                                                                                      style="opacity: 0;"
                                                                                      type="search"
                                                                                      unselectable="on"
                                                                                      value=""
                                                                                    />
                                                                                    <span
                                                                                      aria-hidden="true"
                                                                                      class="ant-select-selection-search-mirror"
                                                                                    >
                                                                                      
                                                                                       
                                                                                    </span>
                                                                                  </span>
                                                                                  <span
                                                                                    class="ant-select-selection-placeholder"
                                                                                  >
                                                                                    Select ratings
                                                                                  </span>
                                                                                </div>,
                                                                              }
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            inputElement={null}
                                                                            inputIcon={
                                                                              <ForwardRef(LoadingOutlined)
                                                                                spin={true}
                                                                              />
                                                                            }
                                                                            inputRef={
                                                                              Object {
                                                                                "current": <input
                                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />,
                                                                              }
                                                                            }
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={true}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            multiple={true}
                                                                            notFoundContent={null}
                                                                            onChange={[Function]}
                                                                            onInputChange={[Function]}
                                                                            onInputCompositionEnd={[Function]}
                                                                            onInputCompositionStart={[Function]}
                                                                            onInputKeyDown={[Function]}
                                                                            onInputMouseDown={[Function]}
                                                                            onInputPaste={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            onSearchSubmit={[Function]}
                                                                            onSelect={[Function]}
                                                                            onToggleOpen={[Function]}
                                                                            placeholder="Select ratings"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            searchValue=""
                                                                            showSearch={true}
                                                                            tokenWithEnter={false}
                                                                            transitionName="slide-up"
                                                                            values={Array []}
                                                                          >
                                                                            <CSSMotionList
                                                                              component={false}
                                                                              keys={Array []}
                                                                              motionAppear={true}
                                                                            />
                                                                            <span
                                                                              className="ant-select-selection-search"
                                                                              style={
                                                                                Object {
                                                                                  "width": 0,
                                                                                }
                                                                              }
                                                                            >
                                                                              <Input
                                                                                accessibilityIndex={0}
                                                                                attrs={Object {}}
                                                                                id="rc_select_TEST_OR_SSR"
                                                                                inputElement={null}
                                                                                onChange={[Function]}
                                                                                onCompositionEnd={[Function]}
                                                                                onCompositionStart={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onPaste={[Function]}
                                                                                prefixCls="ant-select"
                                                                                value=""
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                  autoComplete="off"
                                                                                  className="ant-select-selection-search-input"
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  readOnly={true}
                                                                                  role="combobox"
                                                                                  style={
                                                                                    Object {
                                                                                      "opacity": 0,
                                                                                    }
                                                                                  }
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                              </Input>
                                                                              <span
                                                                                aria-hidden={true}
                                                                                className="ant-select-selection-search-mirror"
                                                                              >
                                                                                 
                                                                              </span>
                                                                            </span>
                                                                            <span
                                                                              className="ant-select-selection-placeholder"
                                                                            >
                                                                              Select ratings
                                                                            </span>
                                                                          </SelectSelector>
                                                                        </div>
                                                                      </Selector>
                                                                    </Trigger>
                                                                  </SelectTrigger>
                                                                  <TransBtn
                                                                    className="ant-select-arrow ant-select-arrow-loading"
                                                                    customizeIcon={
                                                                      <ForwardRef(LoadingOutlined)
                                                                        spin={true}
                                                                      />
                                                                    }
                                                                    customizeIconProps={
                                                                      Object {
                                                                        "focused": false,
                                                                        "loading": true,
                                                                        "open": undefined,
                                                                        "searchValue": "",
                                                                        "showSearch": true,
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-arrow ant-select-arrow-loading"
                                                                      onMouseDown={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "WebkitUserSelect": "none",
                                                                          "userSelect": "none",
                                                                        }
                                                                      }
                                                                      unselectable="on"
                                                                    >
                                                                      <ForwardRef(LoadingOutlined)
                                                                        spin={true}
                                                                      >
                                                                        <AntdIcon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "0 0 1024 1024",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "loading",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                          spin={true}
                                                                        >
                                                                          <span
                                                                            aria-label="loading"
                                                                            className="anticon anticon-loading"
                                                                            role="img"
                                                                          >
                                                                            <IconReact
                                                                              className="anticon-spin"
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Object {
                                                                                    "attrs": Object {
                                                                                      "focusable": "false",
                                                                                      "viewBox": "0 0 1024 1024",
                                                                                    },
                                                                                    "children": Array [
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                    ],
                                                                                    "tag": "svg",
                                                                                  },
                                                                                  "name": "loading",
                                                                                  "theme": "outlined",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                className="anticon-spin"
                                                                                data-icon="loading"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="1em"
                                                                                key="svg-loading"
                                                                                viewBox="0 0 1024 1024"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
                                                                                  key="svg-loading-svg-0"
                                                                                />
                                                                              </svg>
                                                                            </IconReact>
                                                                          </span>
                                                                        </AntdIcon>
                                                                      </ForwardRef(LoadingOutlined)>
                                                                    </span>
                                                                  </TransBtn>
                                                                </div>
                                                              </ForwardRef(Select)>
                                                            </Select>
                                                          </ForwardRef(InternalSelect)>
                                                        </Selector>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem>
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          prefixCls="ant-form"
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          validateStatus=""
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Button
                                                    block={false}
                                                    ghost={false}
                                                    htmlType="submit"
                                                    loading={false}
                                                    type="primary"
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-primary"
                                                        onClick={[Function]}
                                                        type="submit"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <CSSMotion
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Submit
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </FormItem>
                                </form>
                              </ForwardRef(Form)>
                            </SizeContextProvider>
                          </ForwardRef(InternalForm)>
                        </div>
                      </Item>
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        size="small"
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Table
                            bordered={true}
                            columns={
                              Array [
                                Object {
                                  "dataIndex": "title",
                                  "key": "title",
                                  "title": "Claim",
                                  "width": "20%",
                                },
                                Object {
                                  "dataIndex": "claimant",
                                  "key": "claimant",
                                  "title": "Claimant",
                                  "width": "20%",
                                },
                                Object {
                                  "dataIndex": "rating",
                                  "key": "rating",
                                  "title": "Rating",
                                  "width": "20%",
                                },
                                Object {
                                  "dataIndex": "claim_date",
                                  "render": [Function],
                                  "title": "Claim Date",
                                  "width": "20%",
                                },
                                Object {
                                  "dataIndex": "operation",
                                  "render": [Function],
                                  "title": "Action",
                                  "width": "20%",
                                },
                              ]
                            }
                            dataSource={Array []}
                            loading={false}
                            pagination={
                              Object {
                                "current": 1,
                                "onChange": [Function],
                                "pageSize": 5,
                                "total": 0,
                              }
                            }
                            rowKey="id"
                          >
                            <div
                              className="ant-table-wrapper"
                            >
                              <Spin
                                size="default"
                                spinning={false}
                                wrapperClassName=""
                              >
                                <div
                                  className="ant-spin-nested-loading"
                                >
                                  <div
                                    className="ant-spin-container"
                                    key="container"
                                  >
                                    <Table
                                      bordered={true}
                                      className="ant-table-bordered ant-table-empty"
                                      columns={
                                        Array [
                                          Object {
                                            "dataIndex": "title",
                                            "key": "title",
                                            "title": "Claim",
                                            "width": "20%",
                                          },
                                          Object {
                                            "dataIndex": "claimant",
                                            "key": "claimant",
                                            "title": "Claimant",
                                            "width": "20%",
                                          },
                                          Object {
                                            "dataIndex": "rating",
                                            "key": "rating",
                                            "title": "Rating",
                                            "width": "20%",
                                          },
                                          Object {
                                            "dataIndex": "claim_date",
                                            "render": [Function],
                                            "title": "Claim Date",
                                            "width": "20%",
                                          },
                                          Object {
                                            "dataIndex": "operation",
                                            "render": [Function],
                                            "title": "Action",
                                            "width": "20%",
                                          },
                                        ]
                                      }
                                      data={Array []}
                                      dataSource={Array []}
                                      emptyText={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      expandable={
                                        Object {
                                          "__PARENT_RENDER_ICON__": undefined,
                                          "childrenColumnName": undefined,
                                          "expandIcon": [Function],
                                          "expandIconColumnIndex": undefined,
                                          "indentSize": 15,
                                        }
                                      }
                                      internalHooks="rc-table-internal-hook"
                                      internalRefs={
                                        Object {
                                          "body": Object {
                                            "current": <div
                                              class="ant-table-content"
                                            >
                                              <table
                                                style="table-layout: auto;"
                                              >
                                                <colgroup>
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                </colgroup>
                                                <thead
                                                  class="ant-table-thead"
                                                >
                                                  <tr>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Claim
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Claimant
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Rating
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Claim Date
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Action
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  class="ant-table-tbody"
                                                >
                                                  <tr
                                                    class="ant-table-placeholder"
                                                  >
                                                    <td
                                                      class="ant-table-cell"
                                                      colspan="5"
                                                    >
                                                      <div
                                                        class="ant-empty ant-empty-normal"
                                                      >
                                                        <div
                                                          class="ant-empty-image"
                                                        >
                                                          <svg
                                                            class="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fill-rule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                class="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                class="ant-empty-img-simple-g"
                                                                fill-rule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  class="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </div>
                                                        <p
                                                          class="ant-empty-description"
                                                        >
                                                          No Data
                                                        </p>
                                                      </div>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>,
                                          },
                                        }
                                      }
                                      loading={false}
                                      pagination={
                                        Object {
                                          "current": 1,
                                          "onChange": [Function],
                                          "pageSize": 5,
                                          "total": 0,
                                        }
                                      }
                                      prefixCls="ant-table"
                                      rowClassName={[Function]}
                                      rowKey={[Function]}
                                      transformColumns={[Function]}
                                    >
                                      <div
                                        className="ant-table ant-table-bordered ant-table-empty"
                                      >
                                        <Component
                                          pingLeft={false}
                                          pingRight={false}
                                          props={
                                            Object {
                                              "bordered": true,
                                              "className": "ant-table-bordered ant-table-empty",
                                              "columns": Array [
                                                Object {
                                                  "dataIndex": "title",
                                                  "key": "title",
                                                  "title": "Claim",
                                                  "width": "20%",
                                                },
                                                Object {
                                                  "dataIndex": "claimant",
                                                  "key": "claimant",
                                                  "title": "Claimant",
                                                  "width": "20%",
                                                },
                                                Object {
                                                  "dataIndex": "rating",
                                                  "key": "rating",
                                                  "title": "Rating",
                                                  "width": "20%",
                                                },
                                                Object {
                                                  "dataIndex": "claim_date",
                                                  "render": [Function],
                                                  "title": "Claim Date",
                                                  "width": "20%",
                                                },
                                                Object {
                                                  "dataIndex": "operation",
                                                  "render": [Function],
                                                  "title": "Action",
                                                  "width": "20%",
                                                },
                                              ],
                                              "data": Array [],
                                              "dataSource": Array [],
                                              "direction": undefined,
                                              "emptyText": <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>,
                                              "expandable": Object {
                                                "__PARENT_RENDER_ICON__": undefined,
                                                "childrenColumnName": undefined,
                                                "expandIcon": [Function],
                                                "expandIconColumnIndex": undefined,
                                                "indentSize": 15,
                                              },
                                              "internalHooks": "rc-table-internal-hook",
                                              "internalRefs": Object {
                                                "body": Object {
                                                  "current": <div
                                                    class="ant-table-content"
                                                  >
                                                    <table
                                                      style="table-layout: auto;"
                                                    >
                                                      <colgroup>
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                      </colgroup>
                                                      <thead
                                                        class="ant-table-thead"
                                                      >
                                                        <tr>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Claim
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Claimant
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Rating
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Claim Date
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Action
                                                          </th>
                                                        </tr>
                                                      </thead>
                                                      <tbody
                                                        class="ant-table-tbody"
                                                      >
                                                        <tr
                                                          class="ant-table-placeholder"
                                                        >
                                                          <td
                                                            class="ant-table-cell"
                                                            colspan="5"
                                                          >
                                                            <div
                                                              class="ant-empty ant-empty-normal"
                                                            >
                                                              <div
                                                                class="ant-empty-image"
                                                              >
                                                                <svg
                                                                  class="ant-empty-img-simple"
                                                                  height="41"
                                                                  viewBox="0 0 64 41"
                                                                  width="64"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <g
                                                                    fill="none"
                                                                    fill-rule="evenodd"
                                                                    transform="translate(0 1)"
                                                                  >
                                                                    <ellipse
                                                                      class="ant-empty-img-simple-ellipse"
                                                                      cx="32"
                                                                      cy="33"
                                                                      rx="32"
                                                                      ry="7"
                                                                    />
                                                                    <g
                                                                      class="ant-empty-img-simple-g"
                                                                      fill-rule="nonzero"
                                                                    >
                                                                      <path
                                                                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                      />
                                                                      <path
                                                                        class="ant-empty-img-simple-path"
                                                                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                      />
                                                                    </g>
                                                                  </g>
                                                                </svg>
                                                              </div>
                                                              <p
                                                                class="ant-empty-description"
                                                              >
                                                                No Data
                                                              </p>
                                                            </div>
                                                          </td>
                                                        </tr>
                                                      </tbody>
                                                    </table>
                                                  </div>,
                                                },
                                              },
                                              "loading": false,
                                              "mergedExpandedKeys": Set {},
                                              "pagination": Object {
                                                "current": 1,
                                                "onChange": [Function],
                                                "pageSize": 5,
                                                "total": 0,
                                              },
                                              "prefixCls": "ant-table",
                                              "rowClassName": [Function],
                                              "rowKey": [Function],
                                              "stickyOffsets": Object {
                                                "left": Array [
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                                "right": Array [
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "transformColumns": [Function],
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-table-container"
                                          >
                                            <div
                                              className="ant-table-content"
                                              onScroll={[Function]}
                                              style={Object {}}
                                            >
                                              <table
                                                style={
                                                  Object {
                                                    "tableLayout": "auto",
                                                  }
                                                }
                                              >
                                                <ColGroup
                                                  colWidths={
                                                    Array [
                                                      "20%",
                                                      "20%",
                                                      "20%",
                                                      "20%",
                                                      "20%",
                                                    ]
                                                  }
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "fixed": undefined,
                                                        "key": "title",
                                                        "title": "Claim",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "claimant",
                                                        "fixed": undefined,
                                                        "key": "claimant",
                                                        "title": "Claimant",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "rating",
                                                        "fixed": undefined,
                                                        "key": "rating",
                                                        "title": "Rating",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "claim_date",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Claim Date",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <colgroup>
                                                    <col
                                                      key="0"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="1"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="2"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="3"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="4"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                  </colgroup>
                                                </ColGroup>
                                                <Header
                                                  colWidths={
                                                    Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ]
                                                  }
                                                  columCount={5}
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "key": "title",
                                                        "title": "Claim",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "claimant",
                                                        "key": "claimant",
                                                        "title": "Claimant",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "rating",
                                                        "key": "rating",
                                                        "title": "Rating",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "claim_date",
                                                        "render": [Function],
                                                        "title": "Claim Date",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                  flattenColumns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "fixed": undefined,
                                                        "key": "title",
                                                        "title": "Claim",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "claimant",
                                                        "fixed": undefined,
                                                        "key": "claimant",
                                                        "title": "Claimant",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "rating",
                                                        "fixed": undefined,
                                                        "key": "rating",
                                                        "title": "Rating",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "claim_date",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Claim Date",
                                                        "width": "20%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                  stickyOffsets={
                                                    Object {
                                                      "left": Array [
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                      "right": Array [
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="ant-table-thead"
                                                  >
                                                    <HeaderRow
                                                      cellComponent="th"
                                                      cells={
                                                        Array [
                                                          Object {
                                                            "children": "Claim",
                                                            "className": "",
                                                            "colEnd": 0,
                                                            "colSpan": 1,
                                                            "colStart": 0,
                                                            "column": Object {
                                                              "dataIndex": "title",
                                                              "key": "title",
                                                              "title": "Claim",
                                                              "width": "20%",
                                                            },
                                                            "key": "title",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Claimant",
                                                            "className": "",
                                                            "colEnd": 1,
                                                            "colSpan": 1,
                                                            "colStart": 1,
                                                            "column": Object {
                                                              "dataIndex": "claimant",
                                                              "key": "claimant",
                                                              "title": "Claimant",
                                                              "width": "20%",
                                                            },
                                                            "key": "claimant",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Rating",
                                                            "className": "",
                                                            "colEnd": 2,
                                                            "colSpan": 1,
                                                            "colStart": 2,
                                                            "column": Object {
                                                              "dataIndex": "rating",
                                                              "key": "rating",
                                                              "title": "Rating",
                                                              "width": "20%",
                                                            },
                                                            "key": "rating",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Claim Date",
                                                            "className": "",
                                                            "colEnd": 3,
                                                            "colSpan": 1,
                                                            "colStart": 3,
                                                            "column": Object {
                                                              "dataIndex": "claim_date",
                                                              "render": [Function],
                                                              "title": "Claim Date",
                                                              "width": "20%",
                                                            },
                                                            "key": undefined,
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Action",
                                                            "className": "",
                                                            "colEnd": 4,
                                                            "colSpan": 1,
                                                            "colStart": 4,
                                                            "column": Object {
                                                              "dataIndex": "operation",
                                                              "render": [Function],
                                                              "title": "Action",
                                                              "width": "20%",
                                                            },
                                                            "key": undefined,
                                                            "rowSpan": 1,
                                                          },
                                                        ]
                                                      }
                                                      flattenColumns={
                                                        Array [
                                                          Object {
                                                            "dataIndex": "title",
                                                            "fixed": undefined,
                                                            "key": "title",
                                                            "title": "Claim",
                                                            "width": "20%",
                                                          },
                                                          Object {
                                                            "dataIndex": "claimant",
                                                            "fixed": undefined,
                                                            "key": "claimant",
                                                            "title": "Claimant",
                                                            "width": "20%",
                                                          },
                                                          Object {
                                                            "dataIndex": "rating",
                                                            "fixed": undefined,
                                                            "key": "rating",
                                                            "title": "Rating",
                                                            "width": "20%",
                                                          },
                                                          Object {
                                                            "dataIndex": "claim_date",
                                                            "fixed": undefined,
                                                            "render": [Function],
                                                            "title": "Claim Date",
                                                            "width": "20%",
                                                          },
                                                          Object {
                                                            "dataIndex": "operation",
                                                            "fixed": undefined,
                                                            "render": [Function],
                                                            "title": "Action",
                                                            "width": "20%",
                                                          },
                                                        ]
                                                      }
                                                      index={0}
                                                      key="0"
                                                      rowComponent="tr"
                                                      stickyOffsets={
                                                        Object {
                                                          "left": Array [
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                          "right": Array [
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <tr>
                                                        <Cell
                                                          className=""
                                                          colEnd={0}
                                                          colSpan={1}
                                                          colStart={0}
                                                          column={
                                                            Object {
                                                              "dataIndex": "title",
                                                              "key": "title",
                                                              "title": "Claim",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="title"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Claim
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={1}
                                                          colSpan={1}
                                                          colStart={1}
                                                          column={
                                                            Object {
                                                              "dataIndex": "claimant",
                                                              "key": "claimant",
                                                              "title": "Claimant",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="claimant"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Claimant
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={2}
                                                          colSpan={1}
                                                          colStart={2}
                                                          column={
                                                            Object {
                                                              "dataIndex": "rating",
                                                              "key": "rating",
                                                              "title": "Rating",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="rating"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Rating
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={3}
                                                          colSpan={1}
                                                          colStart={3}
                                                          column={
                                                            Object {
                                                              "dataIndex": "claim_date",
                                                              "render": [Function],
                                                              "title": "Claim Date",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="claim_date"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Claim Date
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={4}
                                                          colSpan={1}
                                                          colStart={4}
                                                          column={
                                                            Object {
                                                              "dataIndex": "operation",
                                                              "render": [Function],
                                                              "title": "Action",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="operation"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Action
                                                          </th>
                                                        </Cell>
                                                      </tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </Header>
                                                <Body
                                                  childrenColumnName="children"
                                                  data={Array []}
                                                  emptyNode={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  expandedKeys={Set {}}
                                                  getRowKey={[Function]}
                                                  measureColumnWidth={false}
                                                >
                                                  <tbody
                                                    className="ant-table-tbody"
                                                  >
                                                    <ExpandedRow
                                                      cellComponent="td"
                                                      className="ant-table-placeholder"
                                                      colSpan={5}
                                                      component="tr"
                                                      componentWidth={0}
                                                      expanded={true}
                                                      prefixCls="ant-table"
                                                    >
                                                      <tr
                                                        className="ant-table-placeholder"
                                                        style={
                                                          Object {
                                                            "display": null,
                                                          }
                                                        }
                                                      >
                                                        <Cell
                                                          colSpan={5}
                                                          component="td"
                                                          prefixCls="ant-table"
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={5}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            <Empty
                                                              image={<Simple />}
                                                            >
                                                              <LocaleReceiver
                                                                componentName="Empty"
                                                              >
                                                                <div
                                                                  className="ant-empty ant-empty-normal"
                                                                >
                                                                  <div
                                                                    className="ant-empty-image"
                                                                  >
                                                                    <Simple>
                                                                      <svg
                                                                        className="ant-empty-img-simple"
                                                                        height="41"
                                                                        viewBox="0 0 64 41"
                                                                        width="64"
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <g
                                                                          fill="none"
                                                                          fillRule="evenodd"
                                                                          transform="translate(0 1)"
                                                                        >
                                                                          <ellipse
                                                                            className="ant-empty-img-simple-ellipse"
                                                                            cx="32"
                                                                            cy="33"
                                                                            rx="32"
                                                                            ry="7"
                                                                          />
                                                                          <g
                                                                            className="ant-empty-img-simple-g"
                                                                            fillRule="nonzero"
                                                                          >
                                                                            <path
                                                                              d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                            />
                                                                            <path
                                                                              className="ant-empty-img-simple-path"
                                                                              d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                            />
                                                                          </g>
                                                                        </g>
                                                                      </svg>
                                                                    </Simple>
                                                                  </div>
                                                                  <p
                                                                    className="ant-empty-description"
                                                                  >
                                                                    No Data
                                                                  </p>
                                                                </div>
                                                              </LocaleReceiver>
                                                            </Empty>
                                                          </td>
                                                        </Cell>
                                                      </tr>
                                                    </ExpandedRow>
                                                  </tbody>
                                                </Body>
                                              </table>
                                            </div>
                                          </div>
                                        </Component>
                                      </div>
                                    </Table>
                                  </div>
                                </div>
                              </Spin>
                            </div>
                          </Table>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </ClaimList>
              </div>
            </Item>
          </div>
        </Space>
      </Claims>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Claims List component should render the component with data 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [MockFunction],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [MockFunction],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <BrowserRouter>
    <Claims
      permission={
        Object {
          "actions": Array [
            "create",
          ],
        }
      }
    />
  </BrowserRouter>
</ContextProvider>
`;
