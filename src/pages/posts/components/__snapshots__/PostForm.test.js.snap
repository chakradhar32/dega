// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Posts Create Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostForm
    actions={
      Array [
        "publish",
      ]
    }
    data={
      Object {
        "authors": Array [
          1,
        ],
        "categories": Array [
          1,
        ],
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "level": 2,
                "text": "Editor.js",
              },
              "type": "header",
            },
            Object {
              "data": Object {
                "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
              },
              "type": "paragraph",
            },
          ],
          "time": 1595747741807,
          "version": "2.18.0",
        },
        "excerpt": "excerpt of post",
        "featured_medium_id": 1,
        "format": 1,
        "id": 1,
        "slug": "post-1",
        "status": "draft",
        "tags": Array [
          1,
        ],
        "title": "Post-1",
      }
    }
    format={
      Object {
        "id": 1,
        "name": "article",
        "slug": "article",
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": undefined,
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "authors": Array [
            1,
          ],
          "categories": Array [
            1,
          ],
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "level": 2,
                  "text": "Editor.js",
                },
                "type": "header",
              },
              Object {
                "data": Object {
                  "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                },
                "type": "paragraph",
              },
            ],
            "time": 1595747741807,
            "version": "2.18.0",
          },
          "excerpt": "excerpt of post",
          "featured_medium_id": 1,
          "format": 1,
          "id": 1,
          "slug": "post-1",
          "status": "draft",
          "tags": Array [
            1,
          ],
          "title": "Post-1",
        }
      }
      layout="vertical"
      onFinish={[Function]}
      style={
        Object {
          "maxWidth": "100%",
          "width": "100%",
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "authors": Array [
                1,
              ],
              "categories": Array [
                1,
              ],
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "level": 2,
                      "text": "Editor.js",
                    },
                    "type": "header",
                  },
                  Object {
                    "data": Object {
                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1595747741807,
                "version": "2.18.0",
              },
              "excerpt": "excerpt of post",
              "featured_medium_id": 1,
              "format": 1,
              "id": 1,
              "slug": "post-1",
              "status": "draft",
              "tags": Array [
                1,
              ],
              "title": "Post-1",
            }
          }
          onFinish={[Function]}
          onFinishFailed={[Function]}
          style={
            Object {
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        >
          <form
            className="ant-form ant-form-vertical"
            onSubmit={[Function]}
            style={
              Object {
                "maxWidth": "100%",
                "width": "100%",
              }
            }
          >
            <Space
              direction="vertical"
            >
              <div
                className="ant-space ant-space-vertical"
              >
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={0}
                  key="ant-space-item-0"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={
                      Object {
                        "marginBottom": 8,
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "float": "right",
                        }
                      }
                    >
                      <Space
                        direction="horizontal"
                      >
                        <div
                          className="ant-space ant-space-horizontal ant-space-align-center"
                        >
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={0}
                            key="ant-space-item-0"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="template"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="template"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_template"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "template",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="template"
                                          name="template"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "template",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="template"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="template"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Create Template
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={1}
                            key="ant-space-item-1"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="status"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="status"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_status"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "status",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="status"
                                          name="status"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "status",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                    value="draft"
                                                  >
                                                    <ForwardRef(InternalSelect)
                                                      id="status"
                                                      onChange={[Function]}
                                                      value="draft"
                                                    >
                                                      <Select
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        dropdownClassName=""
                                                        id="status"
                                                        inputIcon={[Function]}
                                                        listHeight={256}
                                                        listItemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                        value="draft"
                                                      >
                                                        <ForwardRef(Select)
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          dropdownClassName=""
                                                          id="status"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          transitionName="slide-up"
                                                          value="draft"
                                                        >
                                                          <div
                                                            className="ant-select ant-select-single ant-select-show-arrow"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectTrigger
                                                              containerWidth={null}
                                                              dropdownClassName=""
                                                              empty={false}
                                                              getTriggerDOMNode={[Function]}
                                                              popupElement={
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Draft",
                                                                          "key": "draft",
                                                                          "value": "draft",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "draft",
                                                                      },
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Publish",
                                                                          "key": "publish",
                                                                          "value": "publish",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "publish",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={256}
                                                                  id="status"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Draft",
                                                                        "key": "draft",
                                                                        "value": "draft",
                                                                      },
                                                                      Object {
                                                                        "children": "Publish",
                                                                        "key": "publish",
                                                                        "value": "publish",
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={
                                                                    Set {
                                                                      "draft",
                                                                    }
                                                                  }
                                                                  virtual={true}
                                                                />
                                                              }
                                                              prefixCls="ant-select"
                                                              transitionName="slide-up"
                                                            >
                                                              <Trigger
                                                                action={Array []}
                                                                afterPopupVisibleChange={[Function]}
                                                                autoDestroy={false}
                                                                blurDelay={0.15}
                                                                builtinPlacements={
                                                                  Object {
                                                                    "bottomLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tl",
                                                                        "bl",
                                                                      ],
                                                                    },
                                                                    "bottomRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tr",
                                                                        "br",
                                                                      ],
                                                                    },
                                                                    "topLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "bl",
                                                                        "tl",
                                                                      ],
                                                                    },
                                                                    "topRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "br",
                                                                        "tr",
                                                                      ],
                                                                    },
                                                                  }
                                                                }
                                                                defaultPopupVisible={false}
                                                                destroyPopupOnHide={false}
                                                                focusDelay={0}
                                                                getDocument={[Function]}
                                                                getPopupClassNameFromAlign={[Function]}
                                                                getTriggerDOMNode={[Function]}
                                                                hideAction={Array []}
                                                                mask={false}
                                                                maskClosable={true}
                                                                mouseEnterDelay={0}
                                                                mouseLeaveDelay={0.1}
                                                                onPopupAlign={[Function]}
                                                                onPopupVisibleChange={[Function]}
                                                                popup={
                                                                  <div>
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Draft",
                                                                              "key": "draft",
                                                                              "value": "draft",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "draft",
                                                                          },
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Publish",
                                                                              "key": "publish",
                                                                              "value": "publish",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "publish",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="status"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Draft",
                                                                            "key": "draft",
                                                                            "value": "draft",
                                                                          },
                                                                          Object {
                                                                            "children": "Publish",
                                                                            "key": "publish",
                                                                            "value": "publish",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={
                                                                        Set {
                                                                          "draft",
                                                                        }
                                                                      }
                                                                      virtual={true}
                                                                    />
                                                                  </div>
                                                                }
                                                                popupAlign={Object {}}
                                                                popupClassName=""
                                                                popupPlacement="bottomLeft"
                                                                popupStyle={
                                                                  Object {
                                                                    "minWidth": null,
                                                                    "width": null,
                                                                  }
                                                                }
                                                                popupTransitionName="slide-up"
                                                                prefixCls="ant-select-dropdown"
                                                                showAction={Array []}
                                                              >
                                                                <Selector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-item"
                                                                          title="Draft"
                                                                        >
                                                                          Draft
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  id="status"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  key="trigger"
                                                                  listHeight={256}
                                                                  listItemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onChange={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={false}
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  value="draft"
                                                                  values={
                                                                    Array [
                                                                      Object {
                                                                        "disabled": undefined,
                                                                        "key": "draft",
                                                                        "label": "Draft",
                                                                        "value": "draft",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selector"
                                                                    onClick={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SingleSelector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="status_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="status_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="status_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="status"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-item"
                                                                              title="Draft"
                                                                            >
                                                                              Draft
                                                                            </span>
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="status"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />,
                                                                        }
                                                                      }
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onInputChange={[Function]}
                                                                      onInputCompositionEnd={[Function]}
                                                                      onInputCompositionStart={[Function]}
                                                                      onInputKeyDown={[Function]}
                                                                      onInputMouseDown={[Function]}
                                                                      onInputPaste={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      value="draft"
                                                                      values={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "draft",
                                                                            "label": "Draft",
                                                                            "value": "draft",
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="ant-select-selection-search"
                                                                      >
                                                                        <Input
                                                                          accessibilityIndex={0}
                                                                          attrs={Object {}}
                                                                          editable={false}
                                                                          id="status"
                                                                          inputElement={null}
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          prefixCls="ant-select"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autoComplete="off"
                                                                            className="ant-select-selection-search-input"
                                                                            id="status"
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            readOnly={true}
                                                                            role="combobox"
                                                                            style={
                                                                              Object {
                                                                                "opacity": 0,
                                                                              }
                                                                            }
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </Input>
                                                                      </span>
                                                                      <span
                                                                        className="ant-select-selection-item"
                                                                        title="Draft"
                                                                      >
                                                                        Draft
                                                                      </span>
                                                                    </SingleSelector>
                                                                  </div>
                                                                </Selector>
                                                              </Trigger>
                                                            </SelectTrigger>
                                                            <TransBtn
                                                              className="ant-select-arrow"
                                                              customizeIcon={[Function]}
                                                              customizeIconProps={
                                                                Object {
                                                                  "focused": false,
                                                                  "loading": undefined,
                                                                  "open": undefined,
                                                                  "searchValue": "",
                                                                  "showSearch": false,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-hidden={true}
                                                                className="ant-select-arrow"
                                                                onMouseDown={[Function]}
                                                                style={
                                                                  Object {
                                                                    "WebkitUserSelect": "none",
                                                                    "userSelect": "none",
                                                                  }
                                                                }
                                                                unselectable="on"
                                                              >
                                                                <ForwardRef(DownOutlined)
                                                                  className="ant-select-suffix"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-select-suffix"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "down",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="down"
                                                                      className="anticon anticon-down ant-select-suffix"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        className=""
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className=""
                                                                          data-icon="down"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-down"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                            key="svg-down-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(DownOutlined)>
                                                              </span>
                                                            </TransBtn>
                                                          </div>
                                                        </ForwardRef(Select)>
                                                      </Select>
                                                    </ForwardRef(InternalSelect)>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={2}
                            key="ant-space-item-2"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="submit"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="submit"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_submit"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "submit",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="submit"
                                          name="submit"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "submit",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="submit"
                                                      id="submit"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="submit"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="submit"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Submit
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={3}
                            key="ant-space-item-3"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={Object {}}
                            >
                              <FormItem
                                name="drawerOpen"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="drawerOpen"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_drawerOpen"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "drawerOpen",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="drawerOpen"
                                          name="drawerOpen"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "drawerOpen",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="drawerOpen"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="drawerOpen"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <ForwardRef(SettingFilled)
                                                            key=".0"
                                                          >
                                                            <AntdIcon
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "setting",
                                                                  "theme": "filled",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="setting"
                                                                className="anticon anticon-setting"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "setting",
                                                                      "theme": "filled",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="setting"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-setting"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z"
                                                                      key="svg-setting-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(SettingFilled)>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                        </div>
                      </Space>
                    </div>
                  </div>
                </Item>
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={1}
                  key="ant-space-item-1"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={Object {}}
                  >
                    <Row
                      gutter={16}
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "marginLeft": -8,
                            "marginRight": -8,
                          }
                        }
                      >
                        <Col
                          offset={6}
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12 ant-col-offset-6"
                            style={
                              Object {
                                "paddingLeft": 8,
                                "paddingRight": 8,
                              }
                            }
                          >
                            <FormItem
                              name="title"
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the title!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 150,
                                    "message": "Title must be maximum 150 characters.",
                                  },
                                ]
                              }
                            >
                              <WrapperField
                                messageVariables={Object {}}
                                name="title"
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the title!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 150,
                                      "message": "Title must be maximum 150 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_title"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "title",
                                    ]
                                  }
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the title!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Title must be minimum 3 characters.",
                                        "min": 3,
                                      },
                                      Object {
                                        "max": 150,
                                        "message": "Title must be maximum 150 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="title"
                                        name="title"
                                        prefixCls="ant-form"
                                        required={true}
                                        requiredMark={true}
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        name={
                                          Array [
                                            "title",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value="Post-1"
                                                >
                                                  <TextArea
                                                    bordered={false}
                                                    id="title"
                                                    onChange={[Function]}
                                                    placeholder="Add title for the post"
                                                    style={
                                                      Object {
                                                        "fontSize": "2rem",
                                                        "fontWeight": "bold",
                                                        "textAlign": "center",
                                                      }
                                                    }
                                                    value="Post-1"
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={false}
                                                      element={
                                                        <TextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value="Post-1"
                                                        />
                                                      }
                                                      handleReset={[Function]}
                                                      id="title"
                                                      inputType="text"
                                                      onChange={[Function]}
                                                      placeholder="Add title for the post"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "fontSize": "2rem",
                                                          "fontWeight": "bold",
                                                          "textAlign": "center",
                                                        }
                                                      }
                                                      triggerFocus={[Function]}
                                                      value="Post-1"
                                                    >
                                                      <TextArea
                                                        className="ant-input-borderless"
                                                        id="title"
                                                        onChange={[Function]}
                                                        placeholder="Add title for the post"
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "fontSize": "2rem",
                                                            "fontWeight": "bold",
                                                            "textAlign": "center",
                                                          }
                                                        }
                                                        value="Post-1"
                                                      >
                                                        <ResizableTextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value="Post-1"
                                                        >
                                                          <ResizeObserver
                                                            disabled={true}
                                                            onResize={[Function]}
                                                          >
                                                            <textarea
                                                              className="ant-input ant-input-borderless"
                                                              id="title"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="Add title for the post"
                                                              style={
                                                                Object {
                                                                  "fontSize": "2rem",
                                                                  "fontWeight": "bold",
                                                                  "textAlign": "center",
                                                                }
                                                              }
                                                              value="Post-1"
                                                            />
                                                          </ResizeObserver>
                                                        </ResizableTextArea>
                                                      </TextArea>
                                                    </ClearableLabeledInput>
                                                  </TextArea>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              className="post-description"
                              name="description"
                            >
                              <WrapperField
                                className="post-description"
                                messageVariables={Object {}}
                                name="description"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  className="post-description"
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_description"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "description",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item post-description"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item post-description"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        className="post-description"
                                        htmlFor="description"
                                        name="description"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      />
                                      <FormItemInput
                                        className="post-description"
                                        errors={Array []}
                                        name={
                                          Array [
                                            "description",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value={
                                                    Object {
                                                      "blocks": Array [
                                                        Object {
                                                          "data": Object {
                                                            "level": 2,
                                                            "text": "Editor.js",
                                                          },
                                                          "type": "header",
                                                        },
                                                        Object {
                                                          "data": Object {
                                                            "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                          },
                                                          "type": "paragraph",
                                                        },
                                                      ],
                                                      "time": 1595747741807,
                                                      "version": "2.18.0",
                                                    }
                                                  }
                                                >
                                                  <Editor
                                                    id="description"
                                                    onChange={[Function]}
                                                    value={
                                                      Object {
                                                        "blocks": Array [
                                                          Object {
                                                            "data": Object {
                                                              "level": 2,
                                                              "text": "Editor.js",
                                                            },
                                                            "type": "header",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                            },
                                                            "type": "paragraph",
                                                          },
                                                        ],
                                                        "time": 1595747741807,
                                                        "version": "2.18.0",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      style={null}
                                                    />
                                                  </Editor>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <DrawerWrapper
                              closable={true}
                              getContainer={false}
                              headerStyle={
                                Object {
                                  "fontWeight": "bold",
                                }
                              }
                              onClose={[Function]}
                              placement="right"
                              title={
                                <h4
                                  style={
                                    Object {
                                      "fontWeight": "bold",
                                    }
                                  }
                                >
                                  Post Settings
                                </h4>
                              }
                              visible={false}
                              width={366}
                            >
                              <Drawer
                                closable={true}
                                getContainer={false}
                                headerStyle={
                                  Object {
                                    "fontWeight": "bold",
                                  }
                                }
                                height={256}
                                keyboard={true}
                                level={null}
                                mask={true}
                                maskClosable={true}
                                onClose={[Function]}
                                placement="right"
                                prefixCls="ant-drawer"
                                push={
                                  Object {
                                    "distance": 180,
                                  }
                                }
                                title={
                                  <h4
                                    style={
                                      Object {
                                        "fontWeight": "bold",
                                      }
                                    }
                                  >
                                    Post Settings
                                  </h4>
                                }
                                visible={false}
                                width={366}
                              >
                                <DrawerWrapper
                                  afterVisibleChange={[Function]}
                                  className=""
                                  defaultOpen={false}
                                  duration=".3s"
                                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                  forceRender={false}
                                  getContainer={false}
                                  handler={false}
                                  keyboard={true}
                                  level={null}
                                  maskClosable={true}
                                  maskStyle={Object {}}
                                  onChange={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  placement="right"
                                  prefixCls="ant-drawer"
                                  showMask={true}
                                  style={
                                    Object {
                                      "transform": undefined,
                                      "zIndex": undefined,
                                    }
                                  }
                                  width={366}
                                  wrapperClassName=""
                                >
                                  <div
                                    className=""
                                  >
                                    <DrawerChild
                                      afterVisibleChange={[Function]}
                                      className=""
                                      duration=".3s"
                                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                      getContainer={[Function]}
                                      handler={false}
                                      keyboard={true}
                                      level={null}
                                      maskClosable={true}
                                      maskStyle={Object {}}
                                      onChange={[Function]}
                                      onClose={[Function]}
                                      onHandleClick={[Function]}
                                      open={false}
                                      placement="right"
                                      prefixCls="ant-drawer"
                                      showMask={true}
                                      style={
                                        Object {
                                          "transform": undefined,
                                          "zIndex": undefined,
                                        }
                                      }
                                      switchScrollingEffect={[Function]}
                                      width={366}
                                    >
                                      <div
                                        className="ant-drawer ant-drawer-right"
                                        onTransitionEnd={[Function]}
                                        style={
                                          Object {
                                            "transform": undefined,
                                            "zIndex": undefined,
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <div
                                          className="ant-drawer-mask"
                                          onClick={[Function]}
                                          style={Object {}}
                                        />
                                        <div
                                          className="ant-drawer-content-wrapper"
                                          style={
                                            Object {
                                              "height": undefined,
                                              "msTransform": "translateX(100%)",
                                              "transform": "translateX(100%)",
                                              "width": "366px",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-drawer-content"
                                          >
                                            <div
                                              className="ant-drawer-wrapper-body"
                                              onTransitionEnd={[Function]}
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-drawer-header"
                                                style={
                                                  Object {
                                                    "fontWeight": "bold",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="ant-drawer-title"
                                                >
                                                  <h4
                                                    style={
                                                      Object {
                                                        "fontWeight": "bold",
                                                      }
                                                    }
                                                  >
                                                    Post Settings
                                                  </h4>
                                                </div>
                                                <button
                                                  aria-label="Close"
                                                  className="ant-drawer-close"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "--scroll-bar": "0px",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <ForwardRef(CloseOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "close",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="close"
                                                        className="anticon anticon-close"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "close",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="close"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-close"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                              key="svg-close-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(CloseOutlined)>
                                                </button>
                                              </div>
                                              <div
                                                className="ant-drawer-body"
                                              >
                                                <FormItem
                                                  label="Featured Image"
                                                  name="featured_medium_id"
                                                >
                                                  <WrapperField
                                                    label="Featured Image"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Featured Image",
                                                      }
                                                    }
                                                    name="featured_medium_id"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_featured_medium_id"
                                                      label="Featured Image"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Featured Image",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "featured_medium_id",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="featured_medium_id"
                                                            label="Featured Image"
                                                            name="featured_medium_id"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="featured_medium_id"
                                                                  title="Featured Image"
                                                                >
                                                                  Featured Image
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Featured Image"
                                                            name={
                                                              Array [
                                                                "featured_medium_id",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={1}
                                                                    >
                                                                      <MediaSelector
                                                                        id="featured_medium_id"
                                                                        onChange={[Function]}
                                                                        value={1}
                                                                      >
                                                                        <Modal
                                                                          closable={false}
                                                                          confirmLoading={false}
                                                                          footer={
                                                                            Array [
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                              >
                                                                                Return
                                                                              </ForwardRef(InternalButton)>,
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                                type="primary"
                                                                              >
                                                                                Ok
                                                                              </ForwardRef(InternalButton)>,
                                                                            ]
                                                                          }
                                                                          maskTransitionName="fade"
                                                                          okType="primary"
                                                                          onCancel={[Function]}
                                                                          transitionName="zoom"
                                                                          visible={false}
                                                                          width="800px"
                                                                        >
                                                                          <Dialog
                                                                            closable={false}
                                                                            closeIcon={
                                                                              <span
                                                                                className="ant-modal-close-x"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)
                                                                                  className="ant-modal-close-icon"
                                                                                />
                                                                              </span>
                                                                            }
                                                                            confirmLoading={false}
                                                                            footer={
                                                                              Array [
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  Return
                                                                                </ForwardRef(InternalButton)>,
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                  type="primary"
                                                                                >
                                                                                  Ok
                                                                                </ForwardRef(InternalButton)>,
                                                                              ]
                                                                            }
                                                                            maskTransitionName="fade"
                                                                            okType="primary"
                                                                            onCancel={[Function]}
                                                                            onClose={[Function]}
                                                                            prefixCls="ant-modal"
                                                                            transitionName="zoom"
                                                                            visible={false}
                                                                            width="800px"
                                                                            wrapClassName=""
                                                                          >
                                                                            <PortalWrapper
                                                                              visible={false}
                                                                            />
                                                                          </Dialog>
                                                                        </Modal>
                                                                        <Space
                                                                          direction="vertical"
                                                                        >
                                                                          <div
                                                                            className="ant-space ant-space-vertical"
                                                                          >
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={0}
                                                                              key="ant-space-item-0"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={
                                                                                  Object {
                                                                                    "marginBottom": 8,
                                                                                  }
                                                                                }
                                                                              >
                                                                                <img
                                                                                  width="100%"
                                                                                />
                                                                              </div>
                                                                            </Item>
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={1}
                                                                              key="ant-space-item-1"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={Object {}}
                                                                              >
                                                                                <Button
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <Wave>
                                                                                    <button
                                                                                      className="ant-btn"
                                                                                      onClick={[Function]}
                                                                                      type="button"
                                                                                    >
                                                                                      <LoadingIcon
                                                                                        existIcon={false}
                                                                                        loading={false}
                                                                                        prefixCls="ant-btn"
                                                                                      >
                                                                                        <CSSMotion
                                                                                          motionName="ant-btn-loading-icon-motion"
                                                                                          onAppearActive={[Function]}
                                                                                          onAppearStart={[Function]}
                                                                                          onEnterActive={[Function]}
                                                                                          onEnterStart={[Function]}
                                                                                          onLeaveActive={[Function]}
                                                                                          onLeaveStart={[Function]}
                                                                                          removeOnLeave={true}
                                                                                          visible={false}
                                                                                        >
                                                                                          <DomWrapper />
                                                                                        </CSSMotion>
                                                                                      </LoadingIcon>
                                                                                      <span
                                                                                        key=".0"
                                                                                      >
                                                                                        Select
                                                                                      </span>
                                                                                    </button>
                                                                                  </Wave>
                                                                                </Button>
                                                                              </div>
                                                                            </Item>
                                                                          </div>
                                                                        </Space>
                                                                      </MediaSelector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Excerpt"
                                                  name="excerpt"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Title must be minimum 3 characters.",
                                                        "min": 3,
                                                      },
                                                      Object {
                                                        "max": 5000,
                                                        "message": "Excerpt must be a maximum of 5000 characters.",
                                                      },
                                                      Object {
                                                        "message": "Add Excerpt",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Excerpt"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Excerpt",
                                                      }
                                                    }
                                                    name="excerpt"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Title must be minimum 3 characters.",
                                                          "min": 3,
                                                        },
                                                        Object {
                                                          "max": 5000,
                                                          "message": "Excerpt must be a maximum of 5000 characters.",
                                                        },
                                                        Object {
                                                          "message": "Add Excerpt",
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_excerpt"
                                                      label="Excerpt"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Excerpt",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "excerpt",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Title must be minimum 3 characters.",
                                                            "min": 3,
                                                          },
                                                          Object {
                                                            "max": 5000,
                                                            "message": "Excerpt must be a maximum of 5000 characters.",
                                                          },
                                                          Object {
                                                            "message": "Add Excerpt",
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="excerpt"
                                                            label="Excerpt"
                                                            name="excerpt"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="excerpt"
                                                                  title="Excerpt"
                                                                >
                                                                  Excerpt
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Excerpt"
                                                            name={
                                                              Array [
                                                                "excerpt",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value="excerpt of post"
                                                                    >
                                                                      <TextArea
                                                                        id="excerpt"
                                                                        onChange={[Function]}
                                                                        placeholder="Excerpt"
                                                                        rows={4}
                                                                        style={
                                                                          Object {
                                                                            "fontSize": "medium",
                                                                          }
                                                                        }
                                                                        value="excerpt of post"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <TextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value="excerpt of post"
                                                                            />
                                                                          }
                                                                          handleReset={[Function]}
                                                                          id="excerpt"
                                                                          inputType="text"
                                                                          onChange={[Function]}
                                                                          placeholder="Excerpt"
                                                                          prefixCls="ant-input"
                                                                          rows={4}
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "medium",
                                                                            }
                                                                          }
                                                                          triggerFocus={[Function]}
                                                                          value="excerpt of post"
                                                                        >
                                                                          <TextArea
                                                                            className=""
                                                                            id="excerpt"
                                                                            onChange={[Function]}
                                                                            placeholder="Excerpt"
                                                                            prefixCls="ant-input"
                                                                            rows={4}
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "medium",
                                                                              }
                                                                            }
                                                                            value="excerpt of post"
                                                                          >
                                                                            <ResizableTextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value="excerpt of post"
                                                                            >
                                                                              <ResizeObserver
                                                                                disabled={true}
                                                                                onResize={[Function]}
                                                                              >
                                                                                <textarea
                                                                                  className="ant-input"
                                                                                  id="excerpt"
                                                                                  onChange={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="Excerpt"
                                                                                  rows={4}
                                                                                  style={
                                                                                    Object {
                                                                                      "fontSize": "medium",
                                                                                    }
                                                                                  }
                                                                                  value="excerpt of post"
                                                                                />
                                                                              </ResizeObserver>
                                                                            </ResizableTextArea>
                                                                          </TextArea>
                                                                        </ClearableLabeledInput>
                                                                      </TextArea>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Slug"
                                                  name="slug"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Please input the slug!",
                                                        "required": true,
                                                      },
                                                      Object {
                                                        "message": "Please enter valid slug!",
                                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Slug"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Slug",
                                                      }
                                                    }
                                                    name="slug"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the slug!",
                                                          "required": true,
                                                        },
                                                        Object {
                                                          "message": "Please enter valid slug!",
                                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_slug"
                                                      label="Slug"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Slug",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "slug",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Please input the slug!",
                                                            "required": true,
                                                          },
                                                          Object {
                                                            "message": "Please enter valid slug!",
                                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="slug"
                                                            label="Slug"
                                                            name="slug"
                                                            prefixCls="ant-form"
                                                            required={true}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className="ant-form-item-required"
                                                                  htmlFor="slug"
                                                                  title="Slug"
                                                                >
                                                                  Slug
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Slug"
                                                            name={
                                                              Array [
                                                                "slug",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value="post-1"
                                                                    >
                                                                      <Input
                                                                        id="slug"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value="post-1"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <input
                                                                              className="ant-input"
                                                                              id="slug"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              type="text"
                                                                              value="post-1"
                                                                            />
                                                                          }
                                                                          focused={false}
                                                                          handleReset={[Function]}
                                                                          id="slug"
                                                                          inputType="input"
                                                                          onChange={[Function]}
                                                                          prefixCls="ant-input"
                                                                          triggerFocus={[Function]}
                                                                          type="text"
                                                                          value="post-1"
                                                                        >
                                                                          <input
                                                                            className="ant-input"
                                                                            id="slug"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="text"
                                                                            value="post-1"
                                                                          />
                                                                        </ClearableLabeledInput>
                                                                      </Input>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Categories"
                                                  name="categories"
                                                >
                                                  <WrapperField
                                                    label="Categories"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Categories",
                                                      }
                                                    }
                                                    name="categories"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_categories"
                                                      label="Categories"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Categories",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "categories",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="categories"
                                                            label="Categories"
                                                            name="categories"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="categories"
                                                                  title="Categories"
                                                                >
                                                                  Categories
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Categories"
                                                            name={
                                                              Array [
                                                                "categories",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Categories"
                                                                        createEntity="Category"
                                                                        id="categories"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No categories available. Type something to create new Category"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select categories"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No categories available. Type something to create new Category"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select categories"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No categories available. Type something to create new Category"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select categories"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select categories"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={false}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={false}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Tags"
                                                  name="tags"
                                                >
                                                  <WrapperField
                                                    label="Tags"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Tags",
                                                      }
                                                    }
                                                    name="tags"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_tags"
                                                      label="Tags"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Tags",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "tags",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="tags"
                                                            label="Tags"
                                                            name="tags"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="tags"
                                                                  title="Tags"
                                                                >
                                                                  Tags
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Tags"
                                                            name={
                                                              Array [
                                                                "tags",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Tags"
                                                                        createEntity="Tag"
                                                                        id="tags"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No tags available. Type something to create new Tag"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select tags"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No tags available. Type something to create new Tag"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select tags"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No tags available. Type something to create new Tag"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select tags"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select tags"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select tags"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={false}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={false}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Authors"
                                                  name="authors"
                                                >
                                                  <WrapperField
                                                    label="Authors"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Authors",
                                                      }
                                                    }
                                                    name="authors"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_authors"
                                                      label="Authors"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Authors",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "authors",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="authors"
                                                            label="Authors"
                                                            name="authors"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="authors"
                                                                  title="Authors"
                                                                >
                                                                  Authors
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Authors"
                                                            name={
                                                              Array [
                                                                "authors",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Authors"
                                                                        display="email"
                                                                        id="authors"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select authors"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={null}
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select authors"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select authors"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                  visible={false}
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    popupVisible={false}
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select authors"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select authors"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={false}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={false}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </DrawerChild>
                                  </div>
                                </DrawerWrapper>
                              </Drawer>
                            </DrawerWrapper>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Item>
              </div>
            </Space>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PostForm>
</Provider>
`;

exports[`Posts Create Form component snapshot testing should match component with open drawer 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostForm
    actions={
      Array [
        "publish",
      ]
    }
    data={
      Object {
        "authors": Array [
          1,
        ],
        "categories": Array [
          1,
        ],
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "level": 2,
                "text": "Editor.js",
              },
              "type": "header",
            },
            Object {
              "data": Object {
                "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
              },
              "type": "paragraph",
            },
          ],
          "time": 1595747741807,
          "version": "2.18.0",
        },
        "excerpt": "excerpt of post",
        "featured_medium_id": 1,
        "format": 1,
        "id": 1,
        "slug": "post-1",
        "status": "draft",
        "tags": Array [
          1,
        ],
        "title": "Post-1",
      }
    }
    format={
      Object {
        "id": 1,
        "name": "article",
        "slug": "article",
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": undefined,
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "authors": Array [
            1,
          ],
          "categories": Array [
            1,
          ],
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "level": 2,
                  "text": "Editor.js",
                },
                "type": "header",
              },
              Object {
                "data": Object {
                  "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                },
                "type": "paragraph",
              },
            ],
            "time": 1595747741807,
            "version": "2.18.0",
          },
          "excerpt": "excerpt of post",
          "featured_medium_id": 1,
          "format": 1,
          "id": 1,
          "slug": "post-1",
          "status": "draft",
          "tags": Array [
            1,
          ],
          "title": "Post-1",
        }
      }
      layout="vertical"
      onFinish={[Function]}
      style={
        Object {
          "maxWidth": "100%",
          "width": "100%",
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "authors": Array [
                1,
              ],
              "categories": Array [
                1,
              ],
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "level": 2,
                      "text": "Editor.js",
                    },
                    "type": "header",
                  },
                  Object {
                    "data": Object {
                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1595747741807,
                "version": "2.18.0",
              },
              "excerpt": "excerpt of post",
              "featured_medium_id": 1,
              "format": 1,
              "id": 1,
              "slug": "post-1",
              "status": "draft",
              "tags": Array [
                1,
              ],
              "title": "Post-1",
            }
          }
          onFinish={[Function]}
          onFinishFailed={[Function]}
          style={
            Object {
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        >
          <form
            className="ant-form ant-form-vertical"
            onSubmit={[Function]}
            style={
              Object {
                "maxWidth": "100%",
                "width": "100%",
              }
            }
          >
            <Space
              direction="vertical"
            >
              <div
                className="ant-space ant-space-vertical"
              >
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={0}
                  key="ant-space-item-0"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={
                      Object {
                        "marginBottom": 8,
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "float": "right",
                        }
                      }
                    >
                      <Space
                        direction="horizontal"
                      >
                        <div
                          className="ant-space ant-space-horizontal ant-space-align-center"
                        >
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={0}
                            key="ant-space-item-0"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="template"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="template"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_template"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "template",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="template"
                                          name="template"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "template",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="template"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="template"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Create Template
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={1}
                            key="ant-space-item-1"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="status"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="status"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_status"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "status",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="status"
                                          name="status"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "status",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                    value="draft"
                                                  >
                                                    <ForwardRef(InternalSelect)
                                                      id="status"
                                                      onChange={[Function]}
                                                      value="draft"
                                                    >
                                                      <Select
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        dropdownClassName=""
                                                        id="status"
                                                        inputIcon={[Function]}
                                                        listHeight={256}
                                                        listItemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                        value="draft"
                                                      >
                                                        <ForwardRef(Select)
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          dropdownClassName=""
                                                          id="status"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          transitionName="slide-up"
                                                          value="draft"
                                                        >
                                                          <div
                                                            className="ant-select ant-select-single ant-select-show-arrow"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectTrigger
                                                              containerWidth={null}
                                                              dropdownClassName=""
                                                              empty={false}
                                                              getTriggerDOMNode={[Function]}
                                                              popupElement={
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Draft",
                                                                          "key": "draft",
                                                                          "value": "draft",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "draft",
                                                                      },
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Publish",
                                                                          "key": "publish",
                                                                          "value": "publish",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "publish",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={256}
                                                                  id="status"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Draft",
                                                                        "key": "draft",
                                                                        "value": "draft",
                                                                      },
                                                                      Object {
                                                                        "children": "Publish",
                                                                        "key": "publish",
                                                                        "value": "publish",
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={
                                                                    Set {
                                                                      "draft",
                                                                    }
                                                                  }
                                                                  virtual={true}
                                                                />
                                                              }
                                                              prefixCls="ant-select"
                                                              transitionName="slide-up"
                                                            >
                                                              <Trigger
                                                                action={Array []}
                                                                afterPopupVisibleChange={[Function]}
                                                                autoDestroy={false}
                                                                blurDelay={0.15}
                                                                builtinPlacements={
                                                                  Object {
                                                                    "bottomLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tl",
                                                                        "bl",
                                                                      ],
                                                                    },
                                                                    "bottomRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tr",
                                                                        "br",
                                                                      ],
                                                                    },
                                                                    "topLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "bl",
                                                                        "tl",
                                                                      ],
                                                                    },
                                                                    "topRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "br",
                                                                        "tr",
                                                                      ],
                                                                    },
                                                                  }
                                                                }
                                                                defaultPopupVisible={false}
                                                                destroyPopupOnHide={false}
                                                                focusDelay={0}
                                                                getDocument={[Function]}
                                                                getPopupClassNameFromAlign={[Function]}
                                                                getTriggerDOMNode={[Function]}
                                                                hideAction={Array []}
                                                                mask={false}
                                                                maskClosable={true}
                                                                mouseEnterDelay={0}
                                                                mouseLeaveDelay={0.1}
                                                                onPopupAlign={[Function]}
                                                                onPopupVisibleChange={[Function]}
                                                                popup={
                                                                  <div>
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Draft",
                                                                              "key": "draft",
                                                                              "value": "draft",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "draft",
                                                                          },
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Publish",
                                                                              "key": "publish",
                                                                              "value": "publish",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "publish",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="status"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Draft",
                                                                            "key": "draft",
                                                                            "value": "draft",
                                                                          },
                                                                          Object {
                                                                            "children": "Publish",
                                                                            "key": "publish",
                                                                            "value": "publish",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={
                                                                        Set {
                                                                          "draft",
                                                                        }
                                                                      }
                                                                      virtual={true}
                                                                    />
                                                                  </div>
                                                                }
                                                                popupAlign={Object {}}
                                                                popupClassName=""
                                                                popupPlacement="bottomLeft"
                                                                popupStyle={
                                                                  Object {
                                                                    "minWidth": null,
                                                                    "width": null,
                                                                  }
                                                                }
                                                                popupTransitionName="slide-up"
                                                                prefixCls="ant-select-dropdown"
                                                                showAction={Array []}
                                                              >
                                                                <Selector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-item"
                                                                          title="Draft"
                                                                        >
                                                                          Draft
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  id="status"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  key="trigger"
                                                                  listHeight={256}
                                                                  listItemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onChange={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={false}
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  value="draft"
                                                                  values={
                                                                    Array [
                                                                      Object {
                                                                        "disabled": undefined,
                                                                        "key": "draft",
                                                                        "label": "Draft",
                                                                        "value": "draft",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selector"
                                                                    onClick={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SingleSelector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="status_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="status_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="status_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="status"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-item"
                                                                              title="Draft"
                                                                            >
                                                                              Draft
                                                                            </span>
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="status"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />,
                                                                        }
                                                                      }
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onInputChange={[Function]}
                                                                      onInputCompositionEnd={[Function]}
                                                                      onInputCompositionStart={[Function]}
                                                                      onInputKeyDown={[Function]}
                                                                      onInputMouseDown={[Function]}
                                                                      onInputPaste={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      value="draft"
                                                                      values={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "draft",
                                                                            "label": "Draft",
                                                                            "value": "draft",
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="ant-select-selection-search"
                                                                      >
                                                                        <Input
                                                                          accessibilityIndex={0}
                                                                          attrs={Object {}}
                                                                          editable={false}
                                                                          id="status"
                                                                          inputElement={null}
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          prefixCls="ant-select"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autoComplete="off"
                                                                            className="ant-select-selection-search-input"
                                                                            id="status"
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            readOnly={true}
                                                                            role="combobox"
                                                                            style={
                                                                              Object {
                                                                                "opacity": 0,
                                                                              }
                                                                            }
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </Input>
                                                                      </span>
                                                                      <span
                                                                        className="ant-select-selection-item"
                                                                        title="Draft"
                                                                      >
                                                                        Draft
                                                                      </span>
                                                                    </SingleSelector>
                                                                  </div>
                                                                </Selector>
                                                              </Trigger>
                                                            </SelectTrigger>
                                                            <TransBtn
                                                              className="ant-select-arrow"
                                                              customizeIcon={[Function]}
                                                              customizeIconProps={
                                                                Object {
                                                                  "focused": false,
                                                                  "loading": undefined,
                                                                  "open": undefined,
                                                                  "searchValue": "",
                                                                  "showSearch": false,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-hidden={true}
                                                                className="ant-select-arrow"
                                                                onMouseDown={[Function]}
                                                                style={
                                                                  Object {
                                                                    "WebkitUserSelect": "none",
                                                                    "userSelect": "none",
                                                                  }
                                                                }
                                                                unselectable="on"
                                                              >
                                                                <ForwardRef(DownOutlined)
                                                                  className="ant-select-suffix"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-select-suffix"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "down",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="down"
                                                                      className="anticon anticon-down ant-select-suffix"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        className=""
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className=""
                                                                          data-icon="down"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-down"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                            key="svg-down-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(DownOutlined)>
                                                              </span>
                                                            </TransBtn>
                                                          </div>
                                                        </ForwardRef(Select)>
                                                      </Select>
                                                    </ForwardRef(InternalSelect)>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={2}
                            key="ant-space-item-2"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="submit"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="submit"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_submit"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "submit",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="submit"
                                          name="submit"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "submit",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="submit"
                                                      id="submit"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="submit"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="submit"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Submit
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={3}
                            key="ant-space-item-3"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={Object {}}
                            >
                              <FormItem
                                name="drawerOpen"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="drawerOpen"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_drawerOpen"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "drawerOpen",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="drawerOpen"
                                          name="drawerOpen"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "drawerOpen",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="drawerOpen"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="drawerOpen"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <ForwardRef(SettingFilled)
                                                            key=".0"
                                                          >
                                                            <AntdIcon
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "setting",
                                                                  "theme": "filled",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="setting"
                                                                className="anticon anticon-setting"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "setting",
                                                                      "theme": "filled",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="setting"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-setting"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z"
                                                                      key="svg-setting-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(SettingFilled)>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                        </div>
                      </Space>
                    </div>
                  </div>
                </Item>
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={1}
                  key="ant-space-item-1"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={Object {}}
                  >
                    <Row
                      gutter={16}
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "marginLeft": -8,
                            "marginRight": -8,
                          }
                        }
                      >
                        <Col
                          offset={6}
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12 ant-col-offset-6"
                            style={
                              Object {
                                "paddingLeft": 8,
                                "paddingRight": 8,
                              }
                            }
                          >
                            <FormItem
                              name="title"
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the title!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 150,
                                    "message": "Title must be maximum 150 characters.",
                                  },
                                ]
                              }
                            >
                              <WrapperField
                                messageVariables={Object {}}
                                name="title"
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the title!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 150,
                                      "message": "Title must be maximum 150 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_title"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "title",
                                    ]
                                  }
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the title!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Title must be minimum 3 characters.",
                                        "min": 3,
                                      },
                                      Object {
                                        "max": 150,
                                        "message": "Title must be maximum 150 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="title"
                                        name="title"
                                        prefixCls="ant-form"
                                        required={true}
                                        requiredMark={true}
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        name={
                                          Array [
                                            "title",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value="Post-1"
                                                >
                                                  <TextArea
                                                    bordered={false}
                                                    id="title"
                                                    onChange={[Function]}
                                                    placeholder="Add title for the post"
                                                    style={
                                                      Object {
                                                        "fontSize": "2rem",
                                                        "fontWeight": "bold",
                                                        "textAlign": "center",
                                                      }
                                                    }
                                                    value="Post-1"
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={false}
                                                      element={
                                                        <TextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value="Post-1"
                                                        />
                                                      }
                                                      handleReset={[Function]}
                                                      id="title"
                                                      inputType="text"
                                                      onChange={[Function]}
                                                      placeholder="Add title for the post"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "fontSize": "2rem",
                                                          "fontWeight": "bold",
                                                          "textAlign": "center",
                                                        }
                                                      }
                                                      triggerFocus={[Function]}
                                                      value="Post-1"
                                                    >
                                                      <TextArea
                                                        className="ant-input-borderless"
                                                        id="title"
                                                        onChange={[Function]}
                                                        placeholder="Add title for the post"
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "fontSize": "2rem",
                                                            "fontWeight": "bold",
                                                            "textAlign": "center",
                                                          }
                                                        }
                                                        value="Post-1"
                                                      >
                                                        <ResizableTextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value="Post-1"
                                                        >
                                                          <ResizeObserver
                                                            disabled={true}
                                                            onResize={[Function]}
                                                          >
                                                            <textarea
                                                              className="ant-input ant-input-borderless"
                                                              id="title"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="Add title for the post"
                                                              style={
                                                                Object {
                                                                  "fontSize": "2rem",
                                                                  "fontWeight": "bold",
                                                                  "textAlign": "center",
                                                                }
                                                              }
                                                              value="Post-1"
                                                            />
                                                          </ResizeObserver>
                                                        </ResizableTextArea>
                                                      </TextArea>
                                                    </ClearableLabeledInput>
                                                  </TextArea>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              className="post-description"
                              name="description"
                            >
                              <WrapperField
                                className="post-description"
                                messageVariables={Object {}}
                                name="description"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  className="post-description"
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_description"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "description",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item post-description"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item post-description"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        className="post-description"
                                        htmlFor="description"
                                        name="description"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      />
                                      <FormItemInput
                                        className="post-description"
                                        errors={Array []}
                                        name={
                                          Array [
                                            "description",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value={
                                                    Object {
                                                      "blocks": Array [
                                                        Object {
                                                          "data": Object {
                                                            "level": 2,
                                                            "text": "Editor.js",
                                                          },
                                                          "type": "header",
                                                        },
                                                        Object {
                                                          "data": Object {
                                                            "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                          },
                                                          "type": "paragraph",
                                                        },
                                                      ],
                                                      "time": 1595747741807,
                                                      "version": "2.18.0",
                                                    }
                                                  }
                                                >
                                                  <Editor
                                                    id="description"
                                                    onChange={[Function]}
                                                    value={
                                                      Object {
                                                        "blocks": Array [
                                                          Object {
                                                            "data": Object {
                                                              "level": 2,
                                                              "text": "Editor.js",
                                                            },
                                                            "type": "header",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                            },
                                                            "type": "paragraph",
                                                          },
                                                        ],
                                                        "time": 1595747741807,
                                                        "version": "2.18.0",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      style={null}
                                                    />
                                                  </Editor>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <DrawerWrapper
                              closable={true}
                              getContainer={false}
                              headerStyle={
                                Object {
                                  "fontWeight": "bold",
                                }
                              }
                              onClose={[Function]}
                              placement="right"
                              title={
                                <h4
                                  style={
                                    Object {
                                      "fontWeight": "bold",
                                    }
                                  }
                                >
                                  Post Settings
                                </h4>
                              }
                              visible={false}
                              width={366}
                            >
                              <Drawer
                                closable={true}
                                getContainer={false}
                                headerStyle={
                                  Object {
                                    "fontWeight": "bold",
                                  }
                                }
                                height={256}
                                keyboard={true}
                                level={null}
                                mask={true}
                                maskClosable={true}
                                onClose={[Function]}
                                placement="right"
                                prefixCls="ant-drawer"
                                push={
                                  Object {
                                    "distance": 180,
                                  }
                                }
                                title={
                                  <h4
                                    style={
                                      Object {
                                        "fontWeight": "bold",
                                      }
                                    }
                                  >
                                    Post Settings
                                  </h4>
                                }
                                visible={false}
                                width={366}
                              >
                                <DrawerWrapper
                                  afterVisibleChange={[Function]}
                                  className=""
                                  defaultOpen={false}
                                  duration=".3s"
                                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                  forceRender={false}
                                  getContainer={false}
                                  handler={false}
                                  keyboard={true}
                                  level={null}
                                  maskClosable={true}
                                  maskStyle={Object {}}
                                  onChange={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  placement="right"
                                  prefixCls="ant-drawer"
                                  showMask={true}
                                  style={
                                    Object {
                                      "transform": undefined,
                                      "zIndex": undefined,
                                    }
                                  }
                                  width={366}
                                  wrapperClassName=""
                                >
                                  <div
                                    className=""
                                  >
                                    <DrawerChild
                                      afterVisibleChange={[Function]}
                                      className=""
                                      duration=".3s"
                                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                      getContainer={[Function]}
                                      handler={false}
                                      keyboard={true}
                                      level={null}
                                      maskClosable={true}
                                      maskStyle={Object {}}
                                      onChange={[Function]}
                                      onClose={[Function]}
                                      onHandleClick={[Function]}
                                      open={false}
                                      placement="right"
                                      prefixCls="ant-drawer"
                                      showMask={true}
                                      style={
                                        Object {
                                          "transform": undefined,
                                          "zIndex": undefined,
                                        }
                                      }
                                      switchScrollingEffect={[Function]}
                                      width={366}
                                    >
                                      <div
                                        className="ant-drawer ant-drawer-right"
                                        onTransitionEnd={[Function]}
                                        style={
                                          Object {
                                            "transform": undefined,
                                            "zIndex": undefined,
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <div
                                          className="ant-drawer-mask"
                                          onClick={[Function]}
                                          style={Object {}}
                                        />
                                        <div
                                          className="ant-drawer-content-wrapper"
                                          style={
                                            Object {
                                              "height": undefined,
                                              "msTransform": "translateX(100%)",
                                              "transform": "translateX(100%)",
                                              "width": "366px",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-drawer-content"
                                          >
                                            <div
                                              className="ant-drawer-wrapper-body"
                                              onTransitionEnd={[Function]}
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-drawer-header"
                                                style={
                                                  Object {
                                                    "fontWeight": "bold",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="ant-drawer-title"
                                                >
                                                  <h4
                                                    style={
                                                      Object {
                                                        "fontWeight": "bold",
                                                      }
                                                    }
                                                  >
                                                    Post Settings
                                                  </h4>
                                                </div>
                                                <button
                                                  aria-label="Close"
                                                  className="ant-drawer-close"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "--scroll-bar": "0px",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <ForwardRef(CloseOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "close",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="close"
                                                        className="anticon anticon-close"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "close",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="close"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-close"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                              key="svg-close-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(CloseOutlined)>
                                                </button>
                                              </div>
                                              <div
                                                className="ant-drawer-body"
                                              >
                                                <FormItem
                                                  label="Featured Image"
                                                  name="featured_medium_id"
                                                >
                                                  <WrapperField
                                                    label="Featured Image"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Featured Image",
                                                      }
                                                    }
                                                    name="featured_medium_id"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_featured_medium_id"
                                                      label="Featured Image"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Featured Image",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "featured_medium_id",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="featured_medium_id"
                                                            label="Featured Image"
                                                            name="featured_medium_id"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="featured_medium_id"
                                                                  title="Featured Image"
                                                                >
                                                                  Featured Image
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Featured Image"
                                                            name={
                                                              Array [
                                                                "featured_medium_id",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={1}
                                                                    >
                                                                      <MediaSelector
                                                                        id="featured_medium_id"
                                                                        onChange={[Function]}
                                                                        value={1}
                                                                      >
                                                                        <Modal
                                                                          closable={false}
                                                                          confirmLoading={false}
                                                                          footer={
                                                                            Array [
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                              >
                                                                                Return
                                                                              </ForwardRef(InternalButton)>,
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                                type="primary"
                                                                              >
                                                                                Ok
                                                                              </ForwardRef(InternalButton)>,
                                                                            ]
                                                                          }
                                                                          maskTransitionName="fade"
                                                                          okType="primary"
                                                                          onCancel={[Function]}
                                                                          transitionName="zoom"
                                                                          visible={false}
                                                                          width="800px"
                                                                        >
                                                                          <Dialog
                                                                            closable={false}
                                                                            closeIcon={
                                                                              <span
                                                                                className="ant-modal-close-x"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)
                                                                                  className="ant-modal-close-icon"
                                                                                />
                                                                              </span>
                                                                            }
                                                                            confirmLoading={false}
                                                                            footer={
                                                                              Array [
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  Return
                                                                                </ForwardRef(InternalButton)>,
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                  type="primary"
                                                                                >
                                                                                  Ok
                                                                                </ForwardRef(InternalButton)>,
                                                                              ]
                                                                            }
                                                                            maskTransitionName="fade"
                                                                            okType="primary"
                                                                            onCancel={[Function]}
                                                                            onClose={[Function]}
                                                                            prefixCls="ant-modal"
                                                                            transitionName="zoom"
                                                                            visible={false}
                                                                            width="800px"
                                                                            wrapClassName=""
                                                                          >
                                                                            <PortalWrapper
                                                                              visible={false}
                                                                            />
                                                                          </Dialog>
                                                                        </Modal>
                                                                        <Space
                                                                          direction="vertical"
                                                                        >
                                                                          <div
                                                                            className="ant-space ant-space-vertical"
                                                                          >
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={0}
                                                                              key="ant-space-item-0"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={
                                                                                  Object {
                                                                                    "marginBottom": 8,
                                                                                  }
                                                                                }
                                                                              >
                                                                                <img
                                                                                  width="100%"
                                                                                />
                                                                              </div>
                                                                            </Item>
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={1}
                                                                              key="ant-space-item-1"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={Object {}}
                                                                              >
                                                                                <Button
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <Wave>
                                                                                    <button
                                                                                      className="ant-btn"
                                                                                      onClick={[Function]}
                                                                                      type="button"
                                                                                    >
                                                                                      <LoadingIcon
                                                                                        existIcon={false}
                                                                                        loading={false}
                                                                                        prefixCls="ant-btn"
                                                                                      >
                                                                                        <CSSMotion
                                                                                          motionName="ant-btn-loading-icon-motion"
                                                                                          onAppearActive={[Function]}
                                                                                          onAppearStart={[Function]}
                                                                                          onEnterActive={[Function]}
                                                                                          onEnterStart={[Function]}
                                                                                          onLeaveActive={[Function]}
                                                                                          onLeaveStart={[Function]}
                                                                                          removeOnLeave={true}
                                                                                          visible={false}
                                                                                        >
                                                                                          <DomWrapper />
                                                                                        </CSSMotion>
                                                                                      </LoadingIcon>
                                                                                      <span
                                                                                        key=".0"
                                                                                      >
                                                                                        Select
                                                                                      </span>
                                                                                    </button>
                                                                                  </Wave>
                                                                                </Button>
                                                                              </div>
                                                                            </Item>
                                                                          </div>
                                                                        </Space>
                                                                      </MediaSelector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Excerpt"
                                                  name="excerpt"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Title must be minimum 3 characters.",
                                                        "min": 3,
                                                      },
                                                      Object {
                                                        "max": 5000,
                                                        "message": "Excerpt must be a maximum of 5000 characters.",
                                                      },
                                                      Object {
                                                        "message": "Add Excerpt",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Excerpt"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Excerpt",
                                                      }
                                                    }
                                                    name="excerpt"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Title must be minimum 3 characters.",
                                                          "min": 3,
                                                        },
                                                        Object {
                                                          "max": 5000,
                                                          "message": "Excerpt must be a maximum of 5000 characters.",
                                                        },
                                                        Object {
                                                          "message": "Add Excerpt",
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_excerpt"
                                                      label="Excerpt"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Excerpt",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "excerpt",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Title must be minimum 3 characters.",
                                                            "min": 3,
                                                          },
                                                          Object {
                                                            "max": 5000,
                                                            "message": "Excerpt must be a maximum of 5000 characters.",
                                                          },
                                                          Object {
                                                            "message": "Add Excerpt",
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="excerpt"
                                                            label="Excerpt"
                                                            name="excerpt"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="excerpt"
                                                                  title="Excerpt"
                                                                >
                                                                  Excerpt
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Excerpt"
                                                            name={
                                                              Array [
                                                                "excerpt",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value="excerpt of post"
                                                                    >
                                                                      <TextArea
                                                                        id="excerpt"
                                                                        onChange={[Function]}
                                                                        placeholder="Excerpt"
                                                                        rows={4}
                                                                        style={
                                                                          Object {
                                                                            "fontSize": "medium",
                                                                          }
                                                                        }
                                                                        value="excerpt of post"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <TextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value="excerpt of post"
                                                                            />
                                                                          }
                                                                          handleReset={[Function]}
                                                                          id="excerpt"
                                                                          inputType="text"
                                                                          onChange={[Function]}
                                                                          placeholder="Excerpt"
                                                                          prefixCls="ant-input"
                                                                          rows={4}
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "medium",
                                                                            }
                                                                          }
                                                                          triggerFocus={[Function]}
                                                                          value="excerpt of post"
                                                                        >
                                                                          <TextArea
                                                                            className=""
                                                                            id="excerpt"
                                                                            onChange={[Function]}
                                                                            placeholder="Excerpt"
                                                                            prefixCls="ant-input"
                                                                            rows={4}
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "medium",
                                                                              }
                                                                            }
                                                                            value="excerpt of post"
                                                                          >
                                                                            <ResizableTextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value="excerpt of post"
                                                                            >
                                                                              <ResizeObserver
                                                                                disabled={true}
                                                                                onResize={[Function]}
                                                                              >
                                                                                <textarea
                                                                                  className="ant-input"
                                                                                  id="excerpt"
                                                                                  onChange={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="Excerpt"
                                                                                  rows={4}
                                                                                  style={
                                                                                    Object {
                                                                                      "fontSize": "medium",
                                                                                    }
                                                                                  }
                                                                                  value="excerpt of post"
                                                                                />
                                                                              </ResizeObserver>
                                                                            </ResizableTextArea>
                                                                          </TextArea>
                                                                        </ClearableLabeledInput>
                                                                      </TextArea>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Slug"
                                                  name="slug"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Please input the slug!",
                                                        "required": true,
                                                      },
                                                      Object {
                                                        "message": "Please enter valid slug!",
                                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Slug"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Slug",
                                                      }
                                                    }
                                                    name="slug"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the slug!",
                                                          "required": true,
                                                        },
                                                        Object {
                                                          "message": "Please enter valid slug!",
                                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_slug"
                                                      label="Slug"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Slug",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "slug",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Please input the slug!",
                                                            "required": true,
                                                          },
                                                          Object {
                                                            "message": "Please enter valid slug!",
                                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="slug"
                                                            label="Slug"
                                                            name="slug"
                                                            prefixCls="ant-form"
                                                            required={true}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className="ant-form-item-required"
                                                                  htmlFor="slug"
                                                                  title="Slug"
                                                                >
                                                                  Slug
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Slug"
                                                            name={
                                                              Array [
                                                                "slug",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value="post-1"
                                                                    >
                                                                      <Input
                                                                        id="slug"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value="post-1"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <input
                                                                              className="ant-input"
                                                                              id="slug"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              type="text"
                                                                              value="post-1"
                                                                            />
                                                                          }
                                                                          focused={false}
                                                                          handleReset={[Function]}
                                                                          id="slug"
                                                                          inputType="input"
                                                                          onChange={[Function]}
                                                                          prefixCls="ant-input"
                                                                          triggerFocus={[Function]}
                                                                          type="text"
                                                                          value="post-1"
                                                                        >
                                                                          <input
                                                                            className="ant-input"
                                                                            id="slug"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="text"
                                                                            value="post-1"
                                                                          />
                                                                        </ClearableLabeledInput>
                                                                      </Input>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Categories"
                                                  name="categories"
                                                >
                                                  <WrapperField
                                                    label="Categories"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Categories",
                                                      }
                                                    }
                                                    name="categories"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_categories"
                                                      label="Categories"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Categories",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "categories",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="categories"
                                                            label="Categories"
                                                            name="categories"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="categories"
                                                                  title="Categories"
                                                                >
                                                                  Categories
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Categories"
                                                            name={
                                                              Array [
                                                                "categories",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Categories"
                                                                        createEntity="Category"
                                                                        id="categories"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No categories available. Type something to create new Category"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select categories"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No categories available. Type something to create new Category"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select categories"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No categories available. Type something to create new Category"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          id="rc_select_TEST_OR_SSR"
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select categories"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          id="rc_select_TEST_OR_SSR"
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select categories"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={true}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={true}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              id="rc_select_TEST_OR_SSR"
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Tags"
                                                  name="tags"
                                                >
                                                  <WrapperField
                                                    label="Tags"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Tags",
                                                      }
                                                    }
                                                    name="tags"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_tags"
                                                      label="Tags"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Tags",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "tags",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="tags"
                                                            label="Tags"
                                                            name="tags"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="tags"
                                                                  title="Tags"
                                                                >
                                                                  Tags
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Tags"
                                                            name={
                                                              Array [
                                                                "tags",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Tags"
                                                                        createEntity="Tag"
                                                                        id="tags"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No tags available. Type something to create new Tag"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select tags"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No tags available. Type something to create new Tag"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select tags"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No tags available. Type something to create new Tag"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select tags"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          id="rc_select_TEST_OR_SSR"
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select tags"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          id="rc_select_TEST_OR_SSR"
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select tags"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={true}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={true}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              id="rc_select_TEST_OR_SSR"
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Authors"
                                                  name="authors"
                                                >
                                                  <WrapperField
                                                    label="Authors"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Authors",
                                                      }
                                                    }
                                                    name="authors"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_authors"
                                                      label="Authors"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Authors",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "authors",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="authors"
                                                            label="Authors"
                                                            name="authors"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="authors"
                                                                  title="Authors"
                                                                >
                                                                  Authors
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Authors"
                                                            name={
                                                              Array [
                                                                "authors",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Authors"
                                                                        display="email"
                                                                        id="authors"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select authors"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={null}
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select authors"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select authors"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                  visible={false}
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          id="rc_select_TEST_OR_SSR"
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    popupVisible={false}
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      id="rc_select_TEST_OR_SSR"
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select authors"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          id="rc_select_TEST_OR_SSR"
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select authors"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={true}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={true}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              id="rc_select_TEST_OR_SSR"
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </DrawerChild>
                                  </div>
                                </DrawerWrapper>
                              </Drawer>
                            </DrawerWrapper>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Item>
              </div>
            </Space>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PostForm>
</Provider>
`;

exports[`Posts Create Form component snapshot testing should match with different permission actions 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostForm
    actions={
      Array [
        "create",
      ]
    }
    data={
      Object {
        "authors": Array [
          1,
        ],
        "categories": Array [
          1,
        ],
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "level": 2,
                "text": "Editor.js",
              },
              "type": "header",
            },
            Object {
              "data": Object {
                "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
              },
              "type": "paragraph",
            },
          ],
          "time": 1595747741807,
          "version": "2.18.0",
        },
        "excerpt": "excerpt of post",
        "featured_medium_id": 1,
        "format": 1,
        "id": 1,
        "slug": "post-1",
        "status": "draft",
        "tags": Array [
          1,
        ],
        "title": "Post-1",
      }
    }
    format={
      Object {
        "id": 1,
        "name": "article",
        "slug": "article",
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": undefined,
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "authors": Array [
            1,
          ],
          "categories": Array [
            1,
          ],
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "level": 2,
                  "text": "Editor.js",
                },
                "type": "header",
              },
              Object {
                "data": Object {
                  "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                },
                "type": "paragraph",
              },
            ],
            "time": 1595747741807,
            "version": "2.18.0",
          },
          "excerpt": "excerpt of post",
          "featured_medium_id": 1,
          "format": 1,
          "id": 1,
          "slug": "post-1",
          "status": "draft",
          "tags": Array [
            1,
          ],
          "title": "Post-1",
        }
      }
      layout="vertical"
      onFinish={[Function]}
      style={
        Object {
          "maxWidth": "100%",
          "width": "100%",
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "authors": Array [
                1,
              ],
              "categories": Array [
                1,
              ],
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "level": 2,
                      "text": "Editor.js",
                    },
                    "type": "header",
                  },
                  Object {
                    "data": Object {
                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1595747741807,
                "version": "2.18.0",
              },
              "excerpt": "excerpt of post",
              "featured_medium_id": 1,
              "format": 1,
              "id": 1,
              "slug": "post-1",
              "status": "draft",
              "tags": Array [
                1,
              ],
              "title": "Post-1",
            }
          }
          onFinish={[Function]}
          onFinishFailed={[Function]}
          style={
            Object {
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        >
          <form
            className="ant-form ant-form-vertical"
            onSubmit={[Function]}
            style={
              Object {
                "maxWidth": "100%",
                "width": "100%",
              }
            }
          >
            <Space
              direction="vertical"
            >
              <div
                className="ant-space ant-space-vertical"
              >
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={0}
                  key="ant-space-item-0"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={
                      Object {
                        "marginBottom": 8,
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "float": "right",
                        }
                      }
                    >
                      <Space
                        direction="horizontal"
                      >
                        <div
                          className="ant-space ant-space-horizontal ant-space-align-center"
                        >
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={0}
                            key="ant-space-item-0"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="template"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="template"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_template"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "template",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="template"
                                          name="template"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "template",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="template"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="template"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Create Template
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={1}
                            key="ant-space-item-1"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="status"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="status"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_status"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "status",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="status"
                                          name="status"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "status",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                    value="draft"
                                                  >
                                                    <ForwardRef(InternalSelect)
                                                      id="status"
                                                      onChange={[Function]}
                                                      value="draft"
                                                    >
                                                      <Select
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        dropdownClassName=""
                                                        id="status"
                                                        inputIcon={[Function]}
                                                        listHeight={256}
                                                        listItemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                        value="draft"
                                                      >
                                                        <ForwardRef(Select)
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          dropdownClassName=""
                                                          id="status"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          transitionName="slide-up"
                                                          value="draft"
                                                        >
                                                          <div
                                                            className="ant-select ant-select-single ant-select-show-arrow"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectTrigger
                                                              containerWidth={null}
                                                              dropdownClassName=""
                                                              empty={false}
                                                              getTriggerDOMNode={[Function]}
                                                              popupElement={
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Draft",
                                                                          "key": "draft",
                                                                          "value": "draft",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "draft",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={256}
                                                                  id="status"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Draft",
                                                                        "key": "draft",
                                                                        "value": "draft",
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={
                                                                    Set {
                                                                      "draft",
                                                                    }
                                                                  }
                                                                  virtual={true}
                                                                />
                                                              }
                                                              prefixCls="ant-select"
                                                              transitionName="slide-up"
                                                            >
                                                              <Trigger
                                                                action={Array []}
                                                                afterPopupVisibleChange={[Function]}
                                                                autoDestroy={false}
                                                                blurDelay={0.15}
                                                                builtinPlacements={
                                                                  Object {
                                                                    "bottomLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tl",
                                                                        "bl",
                                                                      ],
                                                                    },
                                                                    "bottomRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tr",
                                                                        "br",
                                                                      ],
                                                                    },
                                                                    "topLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "bl",
                                                                        "tl",
                                                                      ],
                                                                    },
                                                                    "topRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "br",
                                                                        "tr",
                                                                      ],
                                                                    },
                                                                  }
                                                                }
                                                                defaultPopupVisible={false}
                                                                destroyPopupOnHide={false}
                                                                focusDelay={0}
                                                                getDocument={[Function]}
                                                                getPopupClassNameFromAlign={[Function]}
                                                                getTriggerDOMNode={[Function]}
                                                                hideAction={Array []}
                                                                mask={false}
                                                                maskClosable={true}
                                                                mouseEnterDelay={0}
                                                                mouseLeaveDelay={0.1}
                                                                onPopupAlign={[Function]}
                                                                onPopupVisibleChange={[Function]}
                                                                popup={
                                                                  <div>
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Draft",
                                                                              "key": "draft",
                                                                              "value": "draft",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "draft",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="status"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Draft",
                                                                            "key": "draft",
                                                                            "value": "draft",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={
                                                                        Set {
                                                                          "draft",
                                                                        }
                                                                      }
                                                                      virtual={true}
                                                                    />
                                                                  </div>
                                                                }
                                                                popupAlign={Object {}}
                                                                popupClassName=""
                                                                popupPlacement="bottomLeft"
                                                                popupStyle={
                                                                  Object {
                                                                    "minWidth": null,
                                                                    "width": null,
                                                                  }
                                                                }
                                                                popupTransitionName="slide-up"
                                                                prefixCls="ant-select-dropdown"
                                                                showAction={Array []}
                                                              >
                                                                <Selector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-item"
                                                                          title="Draft"
                                                                        >
                                                                          Draft
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  id="status"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  key="trigger"
                                                                  listHeight={256}
                                                                  listItemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onChange={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={false}
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  value="draft"
                                                                  values={
                                                                    Array [
                                                                      Object {
                                                                        "disabled": undefined,
                                                                        "key": "draft",
                                                                        "label": "Draft",
                                                                        "value": "draft",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selector"
                                                                    onClick={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SingleSelector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="status_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="status_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="status_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="status"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-item"
                                                                              title="Draft"
                                                                            >
                                                                              Draft
                                                                            </span>
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="status"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />,
                                                                        }
                                                                      }
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onInputChange={[Function]}
                                                                      onInputCompositionEnd={[Function]}
                                                                      onInputCompositionStart={[Function]}
                                                                      onInputKeyDown={[Function]}
                                                                      onInputMouseDown={[Function]}
                                                                      onInputPaste={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      value="draft"
                                                                      values={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "draft",
                                                                            "label": "Draft",
                                                                            "value": "draft",
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="ant-select-selection-search"
                                                                      >
                                                                        <Input
                                                                          accessibilityIndex={0}
                                                                          attrs={Object {}}
                                                                          editable={false}
                                                                          id="status"
                                                                          inputElement={null}
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          prefixCls="ant-select"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autoComplete="off"
                                                                            className="ant-select-selection-search-input"
                                                                            id="status"
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            readOnly={true}
                                                                            role="combobox"
                                                                            style={
                                                                              Object {
                                                                                "opacity": 0,
                                                                              }
                                                                            }
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </Input>
                                                                      </span>
                                                                      <span
                                                                        className="ant-select-selection-item"
                                                                        title="Draft"
                                                                      >
                                                                        Draft
                                                                      </span>
                                                                    </SingleSelector>
                                                                  </div>
                                                                </Selector>
                                                              </Trigger>
                                                            </SelectTrigger>
                                                            <TransBtn
                                                              className="ant-select-arrow"
                                                              customizeIcon={[Function]}
                                                              customizeIconProps={
                                                                Object {
                                                                  "focused": false,
                                                                  "loading": undefined,
                                                                  "open": undefined,
                                                                  "searchValue": "",
                                                                  "showSearch": false,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-hidden={true}
                                                                className="ant-select-arrow"
                                                                onMouseDown={[Function]}
                                                                style={
                                                                  Object {
                                                                    "WebkitUserSelect": "none",
                                                                    "userSelect": "none",
                                                                  }
                                                                }
                                                                unselectable="on"
                                                              >
                                                                <ForwardRef(DownOutlined)
                                                                  className="ant-select-suffix"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-select-suffix"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "down",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="down"
                                                                      className="anticon anticon-down ant-select-suffix"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        className=""
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className=""
                                                                          data-icon="down"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-down"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                            key="svg-down-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(DownOutlined)>
                                                              </span>
                                                            </TransBtn>
                                                          </div>
                                                        </ForwardRef(Select)>
                                                      </Select>
                                                    </ForwardRef(InternalSelect)>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={2}
                            key="ant-space-item-2"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="submit"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="submit"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_submit"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "submit",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="submit"
                                          name="submit"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "submit",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="submit"
                                                      id="submit"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="submit"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="submit"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Submit
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={3}
                            key="ant-space-item-3"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={Object {}}
                            >
                              <FormItem
                                name="drawerOpen"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="drawerOpen"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_drawerOpen"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "drawerOpen",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="drawerOpen"
                                          name="drawerOpen"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "drawerOpen",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="drawerOpen"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="drawerOpen"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <ForwardRef(SettingFilled)
                                                            key=".0"
                                                          >
                                                            <AntdIcon
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "setting",
                                                                  "theme": "filled",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="setting"
                                                                className="anticon anticon-setting"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "setting",
                                                                      "theme": "filled",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="setting"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-setting"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z"
                                                                      key="svg-setting-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(SettingFilled)>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                        </div>
                      </Space>
                    </div>
                  </div>
                </Item>
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={1}
                  key="ant-space-item-1"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={Object {}}
                  >
                    <Row
                      gutter={16}
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "marginLeft": -8,
                            "marginRight": -8,
                          }
                        }
                      >
                        <Col
                          offset={6}
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12 ant-col-offset-6"
                            style={
                              Object {
                                "paddingLeft": 8,
                                "paddingRight": 8,
                              }
                            }
                          >
                            <FormItem
                              name="title"
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the title!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 150,
                                    "message": "Title must be maximum 150 characters.",
                                  },
                                ]
                              }
                            >
                              <WrapperField
                                messageVariables={Object {}}
                                name="title"
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the title!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 150,
                                      "message": "Title must be maximum 150 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_title"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "title",
                                    ]
                                  }
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the title!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Title must be minimum 3 characters.",
                                        "min": 3,
                                      },
                                      Object {
                                        "max": 150,
                                        "message": "Title must be maximum 150 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="title"
                                        name="title"
                                        prefixCls="ant-form"
                                        required={true}
                                        requiredMark={true}
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        name={
                                          Array [
                                            "title",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value="Post-1"
                                                >
                                                  <TextArea
                                                    bordered={false}
                                                    id="title"
                                                    onChange={[Function]}
                                                    placeholder="Add title for the post"
                                                    style={
                                                      Object {
                                                        "fontSize": "2rem",
                                                        "fontWeight": "bold",
                                                        "textAlign": "center",
                                                      }
                                                    }
                                                    value="Post-1"
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={false}
                                                      element={
                                                        <TextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value="Post-1"
                                                        />
                                                      }
                                                      handleReset={[Function]}
                                                      id="title"
                                                      inputType="text"
                                                      onChange={[Function]}
                                                      placeholder="Add title for the post"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "fontSize": "2rem",
                                                          "fontWeight": "bold",
                                                          "textAlign": "center",
                                                        }
                                                      }
                                                      triggerFocus={[Function]}
                                                      value="Post-1"
                                                    >
                                                      <TextArea
                                                        className="ant-input-borderless"
                                                        id="title"
                                                        onChange={[Function]}
                                                        placeholder="Add title for the post"
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "fontSize": "2rem",
                                                            "fontWeight": "bold",
                                                            "textAlign": "center",
                                                          }
                                                        }
                                                        value="Post-1"
                                                      >
                                                        <ResizableTextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value="Post-1"
                                                        >
                                                          <ResizeObserver
                                                            disabled={true}
                                                            onResize={[Function]}
                                                          >
                                                            <textarea
                                                              className="ant-input ant-input-borderless"
                                                              id="title"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="Add title for the post"
                                                              style={
                                                                Object {
                                                                  "fontSize": "2rem",
                                                                  "fontWeight": "bold",
                                                                  "textAlign": "center",
                                                                }
                                                              }
                                                              value="Post-1"
                                                            />
                                                          </ResizeObserver>
                                                        </ResizableTextArea>
                                                      </TextArea>
                                                    </ClearableLabeledInput>
                                                  </TextArea>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              className="post-description"
                              name="description"
                            >
                              <WrapperField
                                className="post-description"
                                messageVariables={Object {}}
                                name="description"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  className="post-description"
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_description"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "description",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item post-description"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item post-description"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        className="post-description"
                                        htmlFor="description"
                                        name="description"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      />
                                      <FormItemInput
                                        className="post-description"
                                        errors={Array []}
                                        name={
                                          Array [
                                            "description",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value={
                                                    Object {
                                                      "blocks": Array [
                                                        Object {
                                                          "data": Object {
                                                            "level": 2,
                                                            "text": "Editor.js",
                                                          },
                                                          "type": "header",
                                                        },
                                                        Object {
                                                          "data": Object {
                                                            "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                          },
                                                          "type": "paragraph",
                                                        },
                                                      ],
                                                      "time": 1595747741807,
                                                      "version": "2.18.0",
                                                    }
                                                  }
                                                >
                                                  <Editor
                                                    id="description"
                                                    onChange={[Function]}
                                                    value={
                                                      Object {
                                                        "blocks": Array [
                                                          Object {
                                                            "data": Object {
                                                              "level": 2,
                                                              "text": "Editor.js",
                                                            },
                                                            "type": "header",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                            },
                                                            "type": "paragraph",
                                                          },
                                                        ],
                                                        "time": 1595747741807,
                                                        "version": "2.18.0",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      style={null}
                                                    />
                                                  </Editor>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <DrawerWrapper
                              closable={true}
                              getContainer={false}
                              headerStyle={
                                Object {
                                  "fontWeight": "bold",
                                }
                              }
                              onClose={[Function]}
                              placement="right"
                              title={
                                <h4
                                  style={
                                    Object {
                                      "fontWeight": "bold",
                                    }
                                  }
                                >
                                  Post Settings
                                </h4>
                              }
                              visible={false}
                              width={366}
                            >
                              <Drawer
                                closable={true}
                                getContainer={false}
                                headerStyle={
                                  Object {
                                    "fontWeight": "bold",
                                  }
                                }
                                height={256}
                                keyboard={true}
                                level={null}
                                mask={true}
                                maskClosable={true}
                                onClose={[Function]}
                                placement="right"
                                prefixCls="ant-drawer"
                                push={
                                  Object {
                                    "distance": 180,
                                  }
                                }
                                title={
                                  <h4
                                    style={
                                      Object {
                                        "fontWeight": "bold",
                                      }
                                    }
                                  >
                                    Post Settings
                                  </h4>
                                }
                                visible={false}
                                width={366}
                              >
                                <DrawerWrapper
                                  afterVisibleChange={[Function]}
                                  className=""
                                  defaultOpen={false}
                                  duration=".3s"
                                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                  forceRender={false}
                                  getContainer={false}
                                  handler={false}
                                  keyboard={true}
                                  level={null}
                                  maskClosable={true}
                                  maskStyle={Object {}}
                                  onChange={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  placement="right"
                                  prefixCls="ant-drawer"
                                  showMask={true}
                                  style={
                                    Object {
                                      "transform": undefined,
                                      "zIndex": undefined,
                                    }
                                  }
                                  width={366}
                                  wrapperClassName=""
                                >
                                  <div
                                    className=""
                                  >
                                    <DrawerChild
                                      afterVisibleChange={[Function]}
                                      className=""
                                      duration=".3s"
                                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                      getContainer={[Function]}
                                      handler={false}
                                      keyboard={true}
                                      level={null}
                                      maskClosable={true}
                                      maskStyle={Object {}}
                                      onChange={[Function]}
                                      onClose={[Function]}
                                      onHandleClick={[Function]}
                                      open={false}
                                      placement="right"
                                      prefixCls="ant-drawer"
                                      showMask={true}
                                      style={
                                        Object {
                                          "transform": undefined,
                                          "zIndex": undefined,
                                        }
                                      }
                                      switchScrollingEffect={[Function]}
                                      width={366}
                                    >
                                      <div
                                        className="ant-drawer ant-drawer-right"
                                        onTransitionEnd={[Function]}
                                        style={
                                          Object {
                                            "transform": undefined,
                                            "zIndex": undefined,
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <div
                                          className="ant-drawer-mask"
                                          onClick={[Function]}
                                          style={Object {}}
                                        />
                                        <div
                                          className="ant-drawer-content-wrapper"
                                          style={
                                            Object {
                                              "height": undefined,
                                              "msTransform": "translateX(100%)",
                                              "transform": "translateX(100%)",
                                              "width": "366px",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-drawer-content"
                                          >
                                            <div
                                              className="ant-drawer-wrapper-body"
                                              onTransitionEnd={[Function]}
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-drawer-header"
                                                style={
                                                  Object {
                                                    "fontWeight": "bold",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="ant-drawer-title"
                                                >
                                                  <h4
                                                    style={
                                                      Object {
                                                        "fontWeight": "bold",
                                                      }
                                                    }
                                                  >
                                                    Post Settings
                                                  </h4>
                                                </div>
                                                <button
                                                  aria-label="Close"
                                                  className="ant-drawer-close"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "--scroll-bar": "0px",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <ForwardRef(CloseOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "close",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="close"
                                                        className="anticon anticon-close"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "close",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="close"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-close"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                              key="svg-close-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(CloseOutlined)>
                                                </button>
                                              </div>
                                              <div
                                                className="ant-drawer-body"
                                              >
                                                <FormItem
                                                  label="Featured Image"
                                                  name="featured_medium_id"
                                                >
                                                  <WrapperField
                                                    label="Featured Image"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Featured Image",
                                                      }
                                                    }
                                                    name="featured_medium_id"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_featured_medium_id"
                                                      label="Featured Image"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Featured Image",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "featured_medium_id",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="featured_medium_id"
                                                            label="Featured Image"
                                                            name="featured_medium_id"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="featured_medium_id"
                                                                  title="Featured Image"
                                                                >
                                                                  Featured Image
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Featured Image"
                                                            name={
                                                              Array [
                                                                "featured_medium_id",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={1}
                                                                    >
                                                                      <MediaSelector
                                                                        id="featured_medium_id"
                                                                        onChange={[Function]}
                                                                        value={1}
                                                                      >
                                                                        <Modal
                                                                          closable={false}
                                                                          confirmLoading={false}
                                                                          footer={
                                                                            Array [
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                              >
                                                                                Return
                                                                              </ForwardRef(InternalButton)>,
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                                type="primary"
                                                                              >
                                                                                Ok
                                                                              </ForwardRef(InternalButton)>,
                                                                            ]
                                                                          }
                                                                          maskTransitionName="fade"
                                                                          okType="primary"
                                                                          onCancel={[Function]}
                                                                          transitionName="zoom"
                                                                          visible={false}
                                                                          width="800px"
                                                                        >
                                                                          <Dialog
                                                                            closable={false}
                                                                            closeIcon={
                                                                              <span
                                                                                className="ant-modal-close-x"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)
                                                                                  className="ant-modal-close-icon"
                                                                                />
                                                                              </span>
                                                                            }
                                                                            confirmLoading={false}
                                                                            footer={
                                                                              Array [
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  Return
                                                                                </ForwardRef(InternalButton)>,
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                  type="primary"
                                                                                >
                                                                                  Ok
                                                                                </ForwardRef(InternalButton)>,
                                                                              ]
                                                                            }
                                                                            maskTransitionName="fade"
                                                                            okType="primary"
                                                                            onCancel={[Function]}
                                                                            onClose={[Function]}
                                                                            prefixCls="ant-modal"
                                                                            transitionName="zoom"
                                                                            visible={false}
                                                                            width="800px"
                                                                            wrapClassName=""
                                                                          >
                                                                            <PortalWrapper
                                                                              visible={false}
                                                                            />
                                                                          </Dialog>
                                                                        </Modal>
                                                                        <Space
                                                                          direction="vertical"
                                                                        >
                                                                          <div
                                                                            className="ant-space ant-space-vertical"
                                                                          >
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={0}
                                                                              key="ant-space-item-0"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={
                                                                                  Object {
                                                                                    "marginBottom": 8,
                                                                                  }
                                                                                }
                                                                              >
                                                                                <img
                                                                                  width="100%"
                                                                                />
                                                                              </div>
                                                                            </Item>
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={1}
                                                                              key="ant-space-item-1"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={Object {}}
                                                                              >
                                                                                <Button
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <Wave>
                                                                                    <button
                                                                                      className="ant-btn"
                                                                                      onClick={[Function]}
                                                                                      type="button"
                                                                                    >
                                                                                      <LoadingIcon
                                                                                        existIcon={false}
                                                                                        loading={false}
                                                                                        prefixCls="ant-btn"
                                                                                      >
                                                                                        <CSSMotion
                                                                                          motionName="ant-btn-loading-icon-motion"
                                                                                          onAppearActive={[Function]}
                                                                                          onAppearStart={[Function]}
                                                                                          onEnterActive={[Function]}
                                                                                          onEnterStart={[Function]}
                                                                                          onLeaveActive={[Function]}
                                                                                          onLeaveStart={[Function]}
                                                                                          removeOnLeave={true}
                                                                                          visible={false}
                                                                                        >
                                                                                          <DomWrapper />
                                                                                        </CSSMotion>
                                                                                      </LoadingIcon>
                                                                                      <span
                                                                                        key=".0"
                                                                                      >
                                                                                        Select
                                                                                      </span>
                                                                                    </button>
                                                                                  </Wave>
                                                                                </Button>
                                                                              </div>
                                                                            </Item>
                                                                          </div>
                                                                        </Space>
                                                                      </MediaSelector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Excerpt"
                                                  name="excerpt"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Title must be minimum 3 characters.",
                                                        "min": 3,
                                                      },
                                                      Object {
                                                        "max": 5000,
                                                        "message": "Excerpt must be a maximum of 5000 characters.",
                                                      },
                                                      Object {
                                                        "message": "Add Excerpt",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Excerpt"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Excerpt",
                                                      }
                                                    }
                                                    name="excerpt"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Title must be minimum 3 characters.",
                                                          "min": 3,
                                                        },
                                                        Object {
                                                          "max": 5000,
                                                          "message": "Excerpt must be a maximum of 5000 characters.",
                                                        },
                                                        Object {
                                                          "message": "Add Excerpt",
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_excerpt"
                                                      label="Excerpt"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Excerpt",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "excerpt",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Title must be minimum 3 characters.",
                                                            "min": 3,
                                                          },
                                                          Object {
                                                            "max": 5000,
                                                            "message": "Excerpt must be a maximum of 5000 characters.",
                                                          },
                                                          Object {
                                                            "message": "Add Excerpt",
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="excerpt"
                                                            label="Excerpt"
                                                            name="excerpt"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="excerpt"
                                                                  title="Excerpt"
                                                                >
                                                                  Excerpt
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Excerpt"
                                                            name={
                                                              Array [
                                                                "excerpt",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value="excerpt of post"
                                                                    >
                                                                      <TextArea
                                                                        id="excerpt"
                                                                        onChange={[Function]}
                                                                        placeholder="Excerpt"
                                                                        rows={4}
                                                                        style={
                                                                          Object {
                                                                            "fontSize": "medium",
                                                                          }
                                                                        }
                                                                        value="excerpt of post"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <TextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value="excerpt of post"
                                                                            />
                                                                          }
                                                                          handleReset={[Function]}
                                                                          id="excerpt"
                                                                          inputType="text"
                                                                          onChange={[Function]}
                                                                          placeholder="Excerpt"
                                                                          prefixCls="ant-input"
                                                                          rows={4}
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "medium",
                                                                            }
                                                                          }
                                                                          triggerFocus={[Function]}
                                                                          value="excerpt of post"
                                                                        >
                                                                          <TextArea
                                                                            className=""
                                                                            id="excerpt"
                                                                            onChange={[Function]}
                                                                            placeholder="Excerpt"
                                                                            prefixCls="ant-input"
                                                                            rows={4}
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "medium",
                                                                              }
                                                                            }
                                                                            value="excerpt of post"
                                                                          >
                                                                            <ResizableTextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value="excerpt of post"
                                                                            >
                                                                              <ResizeObserver
                                                                                disabled={true}
                                                                                onResize={[Function]}
                                                                              >
                                                                                <textarea
                                                                                  className="ant-input"
                                                                                  id="excerpt"
                                                                                  onChange={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="Excerpt"
                                                                                  rows={4}
                                                                                  style={
                                                                                    Object {
                                                                                      "fontSize": "medium",
                                                                                    }
                                                                                  }
                                                                                  value="excerpt of post"
                                                                                />
                                                                              </ResizeObserver>
                                                                            </ResizableTextArea>
                                                                          </TextArea>
                                                                        </ClearableLabeledInput>
                                                                      </TextArea>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Slug"
                                                  name="slug"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Please input the slug!",
                                                        "required": true,
                                                      },
                                                      Object {
                                                        "message": "Please enter valid slug!",
                                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Slug"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Slug",
                                                      }
                                                    }
                                                    name="slug"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the slug!",
                                                          "required": true,
                                                        },
                                                        Object {
                                                          "message": "Please enter valid slug!",
                                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_slug"
                                                      label="Slug"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Slug",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "slug",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Please input the slug!",
                                                            "required": true,
                                                          },
                                                          Object {
                                                            "message": "Please enter valid slug!",
                                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="slug"
                                                            label="Slug"
                                                            name="slug"
                                                            prefixCls="ant-form"
                                                            required={true}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className="ant-form-item-required"
                                                                  htmlFor="slug"
                                                                  title="Slug"
                                                                >
                                                                  Slug
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Slug"
                                                            name={
                                                              Array [
                                                                "slug",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value="post-1"
                                                                    >
                                                                      <Input
                                                                        id="slug"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value="post-1"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <input
                                                                              className="ant-input"
                                                                              id="slug"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              type="text"
                                                                              value="post-1"
                                                                            />
                                                                          }
                                                                          focused={false}
                                                                          handleReset={[Function]}
                                                                          id="slug"
                                                                          inputType="input"
                                                                          onChange={[Function]}
                                                                          prefixCls="ant-input"
                                                                          triggerFocus={[Function]}
                                                                          type="text"
                                                                          value="post-1"
                                                                        >
                                                                          <input
                                                                            className="ant-input"
                                                                            id="slug"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="text"
                                                                            value="post-1"
                                                                          />
                                                                        </ClearableLabeledInput>
                                                                      </Input>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Categories"
                                                  name="categories"
                                                >
                                                  <WrapperField
                                                    label="Categories"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Categories",
                                                      }
                                                    }
                                                    name="categories"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_categories"
                                                      label="Categories"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Categories",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "categories",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="categories"
                                                            label="Categories"
                                                            name="categories"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="categories"
                                                                  title="Categories"
                                                                >
                                                                  Categories
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Categories"
                                                            name={
                                                              Array [
                                                                "categories",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Categories"
                                                                        createEntity="Category"
                                                                        id="categories"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No categories available. Type something to create new Category"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select categories"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No categories available. Type something to create new Category"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select categories"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No categories available. Type something to create new Category"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select categories"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select categories"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={false}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={false}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Tags"
                                                  name="tags"
                                                >
                                                  <WrapperField
                                                    label="Tags"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Tags",
                                                      }
                                                    }
                                                    name="tags"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_tags"
                                                      label="Tags"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Tags",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "tags",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="tags"
                                                            label="Tags"
                                                            name="tags"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="tags"
                                                                  title="Tags"
                                                                >
                                                                  Tags
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Tags"
                                                            name={
                                                              Array [
                                                                "tags",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Tags"
                                                                        createEntity="Tag"
                                                                        id="tags"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No tags available. Type something to create new Tag"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select tags"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No tags available. Type something to create new Tag"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select tags"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No tags available. Type something to create new Tag"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select tags"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select tags"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select tags"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={false}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={false}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Authors"
                                                  name="authors"
                                                >
                                                  <WrapperField
                                                    label="Authors"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Authors",
                                                      }
                                                    }
                                                    name="authors"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_authors"
                                                      label="Authors"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Authors",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "authors",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="authors"
                                                            label="Authors"
                                                            name="authors"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="authors"
                                                                  title="Authors"
                                                                >
                                                                  Authors
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Authors"
                                                            name={
                                                              Array [
                                                                "authors",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                      value={
                                                                        Array [
                                                                          1,
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Selector
                                                                        action="Authors"
                                                                        display="email"
                                                                        id="authors"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                        value={
                                                                          Array [
                                                                            1,
                                                                          ]
                                                                        }
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={
                                                                            Array [
                                                                              1,
                                                                            ]
                                                                          }
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select authors"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={
                                                                              Array [
                                                                                1,
                                                                              ]
                                                                            }
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={null}
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select authors"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  1,
                                                                                ]
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select authors"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={
                                                                                        Set {
                                                                                          1,
                                                                                        }
                                                                                      }
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                  visible={false}
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={
                                                                                            Set {
                                                                                              1,
                                                                                            }
                                                                                          }
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    popupVisible={false}
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={
                                                                                        Array [
                                                                                          1,
                                                                                        ]
                                                                                      }
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-item"
                                                                                            >
                                                                                              <span
                                                                                                class="ant-select-selection-item-content"
                                                                                              >
                                                                                                1
                                                                                              </span>
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-item-remove"
                                                                                                style="user-select: none;"
                                                                                                unselectable="on"
                                                                                              >
                                                                                                <span
                                                                                                  aria-label="close"
                                                                                                  class="anticon anticon-close"
                                                                                                  role="img"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class=""
                                                                                                    data-icon="close"
                                                                                                    fill="currentColor"
                                                                                                    focusable="false"
                                                                                                    height="1em"
                                                                                                    viewBox="64 64 896 896"
                                                                                                    width="1em"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select authors"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={
                                                                                        Array [
                                                                                          Object {
                                                                                            "disabled": undefined,
                                                                                            "key": 1,
                                                                                            "label": 1,
                                                                                            "value": 1,
                                                                                          },
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={
                                                                                            Array [
                                                                                              1,
                                                                                            ]
                                                                                          }
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-item"
                                                                                                >
                                                                                                  <span
                                                                                                    class="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-item-remove"
                                                                                                    style="user-select: none;"
                                                                                                    unselectable="on"
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-label="close"
                                                                                                      class="anticon anticon-close"
                                                                                                      role="img"
                                                                                                    >
                                                                                                      <svg
                                                                                                        aria-hidden="true"
                                                                                                        class=""
                                                                                                        data-icon="close"
                                                                                                        fill="currentColor"
                                                                                                        focusable="false"
                                                                                                        height="1em"
                                                                                                        viewBox="64 64 896 896"
                                                                                                        width="1em"
                                                                                                      >
                                                                                                        <path
                                                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                        />
                                                                                                      </svg>
                                                                                                    </span>
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select authors"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={
                                                                                            Array [
                                                                                              Object {
                                                                                                "disabled": undefined,
                                                                                                "key": 1,
                                                                                                "label": 1,
                                                                                                "value": 1,
                                                                                              },
                                                                                            ]
                                                                                          }
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": 1,
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            motionAppear={false}
                                                                                          >
                                                                                            <CSSMotion
                                                                                              eventProps={
                                                                                                Object {
                                                                                                  "disabled": undefined,
                                                                                                  "key": "1",
                                                                                                  "label": 1,
                                                                                                  "value": 1,
                                                                                                }
                                                                                              }
                                                                                              key="1"
                                                                                              motionAppear={false}
                                                                                              onVisibleChanged={[Function]}
                                                                                              visible={true}
                                                                                            >
                                                                                              <DomWrapper>
                                                                                                <span
                                                                                                  className="ant-select-selection-item"
                                                                                                  key="1"
                                                                                                >
                                                                                                  <span
                                                                                                    className="ant-select-selection-item-content"
                                                                                                  >
                                                                                                    1
                                                                                                  </span>
                                                                                                  <TransBtn
                                                                                                    className="ant-select-selection-item-remove"
                                                                                                    customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                                                    onClick={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      aria-hidden={true}
                                                                                                      className="ant-select-selection-item-remove"
                                                                                                      onClick={[Function]}
                                                                                                      onMouseDown={[Function]}
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "WebkitUserSelect": "none",
                                                                                                          "userSelect": "none",
                                                                                                        }
                                                                                                      }
                                                                                                      unselectable="on"
                                                                                                    >
                                                                                                      <ForwardRef(CloseOutlined)>
                                                                                                        <AntdIcon
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Object {
                                                                                                                "attrs": Object {
                                                                                                                  "focusable": "false",
                                                                                                                  "viewBox": "64 64 896 896",
                                                                                                                },
                                                                                                                "children": Array [
                                                                                                                  Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                    },
                                                                                                                    "tag": "path",
                                                                                                                  },
                                                                                                                ],
                                                                                                                "tag": "svg",
                                                                                                              },
                                                                                                              "name": "close",
                                                                                                              "theme": "outlined",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            aria-label="close"
                                                                                                            className="anticon anticon-close"
                                                                                                            role="img"
                                                                                                          >
                                                                                                            <IconReact
                                                                                                              className=""
                                                                                                              icon={
                                                                                                                Object {
                                                                                                                  "icon": Object {
                                                                                                                    "attrs": Object {
                                                                                                                      "focusable": "false",
                                                                                                                      "viewBox": "64 64 896 896",
                                                                                                                    },
                                                                                                                    "children": Array [
                                                                                                                      Object {
                                                                                                                        "attrs": Object {
                                                                                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                                        },
                                                                                                                        "tag": "path",
                                                                                                                      },
                                                                                                                    ],
                                                                                                                    "tag": "svg",
                                                                                                                  },
                                                                                                                  "name": "close",
                                                                                                                  "theme": "outlined",
                                                                                                                }
                                                                                                              }
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                className=""
                                                                                                                data-icon="close"
                                                                                                                fill="currentColor"
                                                                                                                focusable="false"
                                                                                                                height="1em"
                                                                                                                key="svg-close"
                                                                                                                viewBox="64 64 896 896"
                                                                                                                width="1em"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                                                  key="svg-close-svg-0"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </IconReact>
                                                                                                          </span>
                                                                                                        </AntdIcon>
                                                                                                      </ForwardRef(CloseOutlined)>
                                                                                                    </span>
                                                                                                  </TransBtn>
                                                                                                </span>
                                                                                              </DomWrapper>
                                                                                            </CSSMotion>
                                                                                          </CSSMotionList>
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                                <TransBtn
                                                                                  className="ant-select-clear"
                                                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                  onMouseDown={[Function]}
                                                                                >
                                                                                  <span
                                                                                    aria-hidden={true}
                                                                                    className="ant-select-clear"
                                                                                    onMouseDown={[Function]}
                                                                                    style={
                                                                                      Object {
                                                                                        "WebkitUserSelect": "none",
                                                                                        "userSelect": "none",
                                                                                      }
                                                                                    }
                                                                                    unselectable="on"
                                                                                  >
                                                                                    <ForwardRef(CloseCircleFilled)>
                                                                                      <AntdIcon
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          aria-label="close-circle"
                                                                                          className="anticon anticon-close-circle"
                                                                                          role="img"
                                                                                        >
                                                                                          <IconReact
                                                                                            className=""
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Object {
                                                                                                  "attrs": Object {
                                                                                                    "focusable": "false",
                                                                                                    "viewBox": "64 64 896 896",
                                                                                                  },
                                                                                                  "children": Array [
                                                                                                    Object {
                                                                                                      "attrs": Object {
                                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                      },
                                                                                                      "tag": "path",
                                                                                                    },
                                                                                                  ],
                                                                                                  "tag": "svg",
                                                                                                },
                                                                                                "name": "close-circle",
                                                                                                "theme": "filled",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className=""
                                                                                              data-icon="close-circle"
                                                                                              fill="currentColor"
                                                                                              focusable="false"
                                                                                              height="1em"
                                                                                              key="svg-close-circle"
                                                                                              viewBox="64 64 896 896"
                                                                                              width="1em"
                                                                                            >
                                                                                              <path
                                                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                                key="svg-close-circle-svg-0"
                                                                                              />
                                                                                            </svg>
                                                                                          </IconReact>
                                                                                        </span>
                                                                                      </AntdIcon>
                                                                                    </ForwardRef(CloseCircleFilled)>
                                                                                  </span>
                                                                                </TransBtn>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </DrawerChild>
                                  </div>
                                </DrawerWrapper>
                              </Drawer>
                            </DrawerWrapper>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Item>
              </div>
            </Space>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PostForm>
</Provider>
`;

exports[`Posts Create Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostForm
    actions={
      Array [
        "publish",
      ]
    }
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": undefined,
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "status": "draft",
        }
      }
      layout="vertical"
      onFinish={[Function]}
      style={
        Object {
          "maxWidth": "100%",
          "width": "100%",
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "status": "draft",
            }
          }
          onFinish={[Function]}
          onFinishFailed={[Function]}
          style={
            Object {
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        >
          <form
            className="ant-form ant-form-vertical"
            onSubmit={[Function]}
            style={
              Object {
                "maxWidth": "100%",
                "width": "100%",
              }
            }
          >
            <Space
              direction="vertical"
            >
              <div
                className="ant-space ant-space-vertical"
              >
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={0}
                  key="ant-space-item-0"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={
                      Object {
                        "marginBottom": 8,
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "float": "right",
                        }
                      }
                    >
                      <Space
                        direction="horizontal"
                      >
                        <div
                          className="ant-space ant-space-horizontal ant-space-align-center"
                        >
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={0}
                            key="ant-space-item-0"
                            marginDirection="marginRight"
                            size="small"
                          />
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={1}
                            key="ant-space-item-1"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="status"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="status"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_status"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "status",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="status"
                                          name="status"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "status",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                    value="draft"
                                                  >
                                                    <ForwardRef(InternalSelect)
                                                      id="status"
                                                      onChange={[Function]}
                                                      value="draft"
                                                    >
                                                      <Select
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        dropdownClassName=""
                                                        id="status"
                                                        inputIcon={[Function]}
                                                        listHeight={256}
                                                        listItemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                        value="draft"
                                                      >
                                                        <ForwardRef(Select)
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          dropdownClassName=""
                                                          id="status"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          transitionName="slide-up"
                                                          value="draft"
                                                        >
                                                          <div
                                                            className="ant-select ant-select-single ant-select-show-arrow"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectTrigger
                                                              containerWidth={null}
                                                              dropdownClassName=""
                                                              empty={false}
                                                              getTriggerDOMNode={[Function]}
                                                              popupElement={
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Draft",
                                                                          "key": "draft",
                                                                          "value": "draft",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "draft",
                                                                      },
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Publish",
                                                                          "key": "publish",
                                                                          "value": "publish",
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "publish",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={256}
                                                                  id="status"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Draft",
                                                                        "key": "draft",
                                                                        "value": "draft",
                                                                      },
                                                                      Object {
                                                                        "children": "Publish",
                                                                        "key": "publish",
                                                                        "value": "publish",
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={
                                                                    Set {
                                                                      "draft",
                                                                    }
                                                                  }
                                                                  virtual={true}
                                                                />
                                                              }
                                                              prefixCls="ant-select"
                                                              transitionName="slide-up"
                                                            >
                                                              <Trigger
                                                                action={Array []}
                                                                afterPopupVisibleChange={[Function]}
                                                                autoDestroy={false}
                                                                blurDelay={0.15}
                                                                builtinPlacements={
                                                                  Object {
                                                                    "bottomLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tl",
                                                                        "bl",
                                                                      ],
                                                                    },
                                                                    "bottomRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "tr",
                                                                        "br",
                                                                      ],
                                                                    },
                                                                    "topLeft": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "bl",
                                                                        "tl",
                                                                      ],
                                                                    },
                                                                    "topRight": Object {
                                                                      "offset": Array [
                                                                        0,
                                                                        -4,
                                                                      ],
                                                                      "overflow": Object {
                                                                        "adjustX": 0,
                                                                        "adjustY": 1,
                                                                      },
                                                                      "points": Array [
                                                                        "br",
                                                                        "tr",
                                                                      ],
                                                                    },
                                                                  }
                                                                }
                                                                defaultPopupVisible={false}
                                                                destroyPopupOnHide={false}
                                                                focusDelay={0}
                                                                getDocument={[Function]}
                                                                getPopupClassNameFromAlign={[Function]}
                                                                getTriggerDOMNode={[Function]}
                                                                hideAction={Array []}
                                                                mask={false}
                                                                maskClosable={true}
                                                                mouseEnterDelay={0}
                                                                mouseLeaveDelay={0.1}
                                                                onPopupAlign={[Function]}
                                                                onPopupVisibleChange={[Function]}
                                                                popup={
                                                                  <div>
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Draft",
                                                                              "key": "draft",
                                                                              "value": "draft",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "draft",
                                                                          },
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Publish",
                                                                              "key": "publish",
                                                                              "value": "publish",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "publish",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="status"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Draft",
                                                                            "key": "draft",
                                                                            "value": "draft",
                                                                          },
                                                                          Object {
                                                                            "children": "Publish",
                                                                            "key": "publish",
                                                                            "value": "publish",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={
                                                                        Set {
                                                                          "draft",
                                                                        }
                                                                      }
                                                                      virtual={true}
                                                                    />
                                                                  </div>
                                                                }
                                                                popupAlign={Object {}}
                                                                popupClassName=""
                                                                popupPlacement="bottomLeft"
                                                                popupStyle={
                                                                  Object {
                                                                    "minWidth": null,
                                                                    "width": null,
                                                                  }
                                                                }
                                                                popupTransitionName="slide-up"
                                                                prefixCls="ant-select-dropdown"
                                                                showAction={Array []}
                                                              >
                                                                <Selector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-item"
                                                                          title="Draft"
                                                                        >
                                                                          Draft
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  id="status"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  key="trigger"
                                                                  listHeight={256}
                                                                  listItemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  multiple={false}
                                                                  notFoundContent={
                                                                    <Context.Consumer>
                                                                      [Function]
                                                                    </Context.Consumer>
                                                                  }
                                                                  onChange={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={false}
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  value="draft"
                                                                  values={
                                                                    Array [
                                                                      Object {
                                                                        "disabled": undefined,
                                                                        "key": "draft",
                                                                        "label": "Draft",
                                                                        "value": "draft",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selector"
                                                                    onClick={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SingleSelector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="status_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="status_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="status_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="status"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-item"
                                                                              title="Draft"
                                                                            >
                                                                              Draft
                                                                            </span>
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="status"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="status"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />,
                                                                        }
                                                                      }
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onInputChange={[Function]}
                                                                      onInputCompositionEnd={[Function]}
                                                                      onInputCompositionStart={[Function]}
                                                                      onInputKeyDown={[Function]}
                                                                      onInputMouseDown={[Function]}
                                                                      onInputPaste={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      value="draft"
                                                                      values={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "draft",
                                                                            "label": "Draft",
                                                                            "value": "draft",
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="ant-select-selection-search"
                                                                      >
                                                                        <Input
                                                                          accessibilityIndex={0}
                                                                          attrs={Object {}}
                                                                          editable={false}
                                                                          id="status"
                                                                          inputElement={null}
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          prefixCls="ant-select"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="status_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="status_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="status_list"
                                                                            autoComplete="off"
                                                                            className="ant-select-selection-search-input"
                                                                            id="status"
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            readOnly={true}
                                                                            role="combobox"
                                                                            style={
                                                                              Object {
                                                                                "opacity": 0,
                                                                              }
                                                                            }
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </Input>
                                                                      </span>
                                                                      <span
                                                                        className="ant-select-selection-item"
                                                                        title="Draft"
                                                                      >
                                                                        Draft
                                                                      </span>
                                                                    </SingleSelector>
                                                                  </div>
                                                                </Selector>
                                                              </Trigger>
                                                            </SelectTrigger>
                                                            <TransBtn
                                                              className="ant-select-arrow"
                                                              customizeIcon={[Function]}
                                                              customizeIconProps={
                                                                Object {
                                                                  "focused": false,
                                                                  "loading": undefined,
                                                                  "open": undefined,
                                                                  "searchValue": "",
                                                                  "showSearch": false,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-hidden={true}
                                                                className="ant-select-arrow"
                                                                onMouseDown={[Function]}
                                                                style={
                                                                  Object {
                                                                    "WebkitUserSelect": "none",
                                                                    "userSelect": "none",
                                                                  }
                                                                }
                                                                unselectable="on"
                                                              >
                                                                <ForwardRef(DownOutlined)
                                                                  className="ant-select-suffix"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-select-suffix"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "down",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="down"
                                                                      className="anticon anticon-down ant-select-suffix"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        className=""
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className=""
                                                                          data-icon="down"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-down"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                            key="svg-down-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(DownOutlined)>
                                                              </span>
                                                            </TransBtn>
                                                          </div>
                                                        </ForwardRef(Select)>
                                                      </Select>
                                                    </ForwardRef(InternalSelect)>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={2}
                            key="ant-space-item-2"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={
                                Object {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <FormItem
                                name="submit"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="submit"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_submit"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "submit",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="submit"
                                          name="submit"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "submit",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="submit"
                                                      id="submit"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="submit"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="submit"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Submit
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                          <Item
                            className="ant-space-item"
                            direction="horizontal"
                            index={3}
                            key="ant-space-item-3"
                            marginDirection="marginRight"
                            size="small"
                          >
                            <div
                              className="ant-space-item"
                              style={Object {}}
                            >
                              <FormItem
                                name="drawerOpen"
                              >
                                <WrapperField
                                  messageVariables={Object {}}
                                  name="drawerOpen"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": undefined,
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_drawerOpen"
                                    messageVariables={Object {}}
                                    name={
                                      Array [
                                        "drawerOpen",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="drawerOpen"
                                          name="drawerOpen"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          name={
                                            Array [
                                              "drawerOpen",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="drawerOpen"
                                                      loading={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      type="secondary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-secondary"
                                                          id="drawerOpen"
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <ForwardRef(SettingFilled)
                                                            key=".0"
                                                          >
                                                            <AntdIcon
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "setting",
                                                                  "theme": "filled",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="setting"
                                                                className="anticon anticon-setting"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "setting",
                                                                      "theme": "filled",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="setting"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-setting"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 00-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 009.3-35.2l-.9-2.6a442.5 442.5 0 00-79.6-137.7l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.3a353.44 353.44 0 00-98.9 57.3l-81.8-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a445.93 445.93 0 00-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0025.8 25.7l2.7.5a448.27 448.27 0 00158.8 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z"
                                                                      key="svg-setting-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(SettingFilled)>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Item>
                        </div>
                      </Space>
                    </div>
                  </div>
                </Item>
                <Item
                  className="ant-space-item"
                  direction="vertical"
                  index={1}
                  key="ant-space-item-1"
                  marginDirection="marginRight"
                  size="small"
                >
                  <div
                    className="ant-space-item"
                    style={Object {}}
                  >
                    <Row
                      gutter={16}
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "marginLeft": -8,
                            "marginRight": -8,
                          }
                        }
                      >
                        <Col
                          offset={6}
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12 ant-col-offset-6"
                            style={
                              Object {
                                "paddingLeft": 8,
                                "paddingRight": 8,
                              }
                            }
                          >
                            <FormItem
                              name="title"
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the title!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 150,
                                    "message": "Title must be maximum 150 characters.",
                                  },
                                ]
                              }
                            >
                              <WrapperField
                                messageVariables={Object {}}
                                name="title"
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the title!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 150,
                                      "message": "Title must be maximum 150 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_title"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "title",
                                    ]
                                  }
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the title!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Title must be minimum 3 characters.",
                                        "min": 3,
                                      },
                                      Object {
                                        "max": 150,
                                        "message": "Title must be maximum 150 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="title"
                                        name="title"
                                        prefixCls="ant-form"
                                        required={true}
                                        requiredMark={true}
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        name={
                                          Array [
                                            "title",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        rules={
                                          Array [
                                            Object {
                                              "message": "Please input the title!",
                                              "required": true,
                                            },
                                            Object {
                                              "message": "Title must be minimum 3 characters.",
                                              "min": 3,
                                            },
                                            Object {
                                              "max": 150,
                                              "message": "Title must be maximum 150 characters.",
                                            },
                                          ]
                                        }
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <TextArea
                                                    bordered={false}
                                                    id="title"
                                                    onChange={[Function]}
                                                    placeholder="Add title for the post"
                                                    style={
                                                      Object {
                                                        "fontSize": "2rem",
                                                        "fontWeight": "bold",
                                                        "textAlign": "center",
                                                      }
                                                    }
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={false}
                                                      element={
                                                        <TextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                        />
                                                      }
                                                      handleReset={[Function]}
                                                      id="title"
                                                      inputType="text"
                                                      onChange={[Function]}
                                                      placeholder="Add title for the post"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "fontSize": "2rem",
                                                          "fontWeight": "bold",
                                                          "textAlign": "center",
                                                        }
                                                      }
                                                      triggerFocus={[Function]}
                                                      value=""
                                                    >
                                                      <TextArea
                                                        className="ant-input-borderless"
                                                        id="title"
                                                        onChange={[Function]}
                                                        placeholder="Add title for the post"
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "fontSize": "2rem",
                                                            "fontWeight": "bold",
                                                            "textAlign": "center",
                                                          }
                                                        }
                                                        value=""
                                                      >
                                                        <ResizableTextArea
                                                          className="ant-input-borderless"
                                                          id="title"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="Add title for the post"
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "fontSize": "2rem",
                                                              "fontWeight": "bold",
                                                              "textAlign": "center",
                                                            }
                                                          }
                                                          value=""
                                                        >
                                                          <ResizeObserver
                                                            disabled={true}
                                                            onResize={[Function]}
                                                          >
                                                            <textarea
                                                              className="ant-input ant-input-borderless"
                                                              id="title"
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="Add title for the post"
                                                              style={
                                                                Object {
                                                                  "fontSize": "2rem",
                                                                  "fontWeight": "bold",
                                                                  "textAlign": "center",
                                                                }
                                                              }
                                                              value=""
                                                            />
                                                          </ResizeObserver>
                                                        </ResizableTextArea>
                                                      </TextArea>
                                                    </ClearableLabeledInput>
                                                  </TextArea>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              className="post-description"
                              name="description"
                            >
                              <WrapperField
                                className="post-description"
                                messageVariables={Object {}}
                                name="description"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  className="post-description"
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": undefined,
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_description"
                                  messageVariables={Object {}}
                                  name={
                                    Array [
                                      "description",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item post-description"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item post-description"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        className="post-description"
                                        htmlFor="description"
                                        name="description"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      />
                                      <FormItemInput
                                        className="post-description"
                                        errors={Array []}
                                        name={
                                          Array [
                                            "description",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <Editor
                                                    id="description"
                                                    onChange={[Function]}
                                                  >
                                                    <div
                                                      style={null}
                                                    />
                                                  </Editor>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <DrawerWrapper
                              closable={true}
                              getContainer={false}
                              headerStyle={
                                Object {
                                  "fontWeight": "bold",
                                }
                              }
                              onClose={[Function]}
                              placement="right"
                              title={
                                <h4
                                  style={
                                    Object {
                                      "fontWeight": "bold",
                                    }
                                  }
                                >
                                  Post Settings
                                </h4>
                              }
                              visible={false}
                              width={366}
                            >
                              <Drawer
                                closable={true}
                                getContainer={false}
                                headerStyle={
                                  Object {
                                    "fontWeight": "bold",
                                  }
                                }
                                height={256}
                                keyboard={true}
                                level={null}
                                mask={true}
                                maskClosable={true}
                                onClose={[Function]}
                                placement="right"
                                prefixCls="ant-drawer"
                                push={
                                  Object {
                                    "distance": 180,
                                  }
                                }
                                title={
                                  <h4
                                    style={
                                      Object {
                                        "fontWeight": "bold",
                                      }
                                    }
                                  >
                                    Post Settings
                                  </h4>
                                }
                                visible={false}
                                width={366}
                              >
                                <DrawerWrapper
                                  afterVisibleChange={[Function]}
                                  className=""
                                  defaultOpen={false}
                                  duration=".3s"
                                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                  forceRender={false}
                                  getContainer={false}
                                  handler={false}
                                  keyboard={true}
                                  level={null}
                                  maskClosable={true}
                                  maskStyle={Object {}}
                                  onChange={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  placement="right"
                                  prefixCls="ant-drawer"
                                  showMask={true}
                                  style={
                                    Object {
                                      "transform": undefined,
                                      "zIndex": undefined,
                                    }
                                  }
                                  width={366}
                                  wrapperClassName=""
                                >
                                  <div
                                    className=""
                                  >
                                    <DrawerChild
                                      afterVisibleChange={[Function]}
                                      className=""
                                      duration=".3s"
                                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                                      getContainer={[Function]}
                                      handler={false}
                                      keyboard={true}
                                      level={null}
                                      maskClosable={true}
                                      maskStyle={Object {}}
                                      onChange={[Function]}
                                      onClose={[Function]}
                                      onHandleClick={[Function]}
                                      open={false}
                                      placement="right"
                                      prefixCls="ant-drawer"
                                      showMask={true}
                                      style={
                                        Object {
                                          "transform": undefined,
                                          "zIndex": undefined,
                                        }
                                      }
                                      switchScrollingEffect={[Function]}
                                      width={366}
                                    >
                                      <div
                                        className="ant-drawer ant-drawer-right"
                                        onTransitionEnd={[Function]}
                                        style={
                                          Object {
                                            "transform": undefined,
                                            "zIndex": undefined,
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <div
                                          className="ant-drawer-mask"
                                          onClick={[Function]}
                                          style={Object {}}
                                        />
                                        <div
                                          className="ant-drawer-content-wrapper"
                                          style={
                                            Object {
                                              "height": undefined,
                                              "msTransform": "translateX(100%)",
                                              "transform": "translateX(100%)",
                                              "width": "366px",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-drawer-content"
                                          >
                                            <div
                                              className="ant-drawer-wrapper-body"
                                              onTransitionEnd={[Function]}
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-drawer-header"
                                                style={
                                                  Object {
                                                    "fontWeight": "bold",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="ant-drawer-title"
                                                >
                                                  <h4
                                                    style={
                                                      Object {
                                                        "fontWeight": "bold",
                                                      }
                                                    }
                                                  >
                                                    Post Settings
                                                  </h4>
                                                </div>
                                                <button
                                                  aria-label="Close"
                                                  className="ant-drawer-close"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "--scroll-bar": "0px",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <ForwardRef(CloseOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "close",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="close"
                                                        className="anticon anticon-close"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "close",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="close"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-close"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                              key="svg-close-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(CloseOutlined)>
                                                </button>
                                              </div>
                                              <div
                                                className="ant-drawer-body"
                                              >
                                                <FormItem
                                                  label="Featured Image"
                                                  name="featured_medium_id"
                                                >
                                                  <WrapperField
                                                    label="Featured Image"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Featured Image",
                                                      }
                                                    }
                                                    name="featured_medium_id"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_featured_medium_id"
                                                      label="Featured Image"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Featured Image",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "featured_medium_id",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="featured_medium_id"
                                                            label="Featured Image"
                                                            name="featured_medium_id"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="featured_medium_id"
                                                                  title="Featured Image"
                                                                >
                                                                  Featured Image
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Featured Image"
                                                            name={
                                                              Array [
                                                                "featured_medium_id",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                    >
                                                                      <MediaSelector
                                                                        id="featured_medium_id"
                                                                        onChange={[Function]}
                                                                      >
                                                                        <Modal
                                                                          closable={false}
                                                                          confirmLoading={false}
                                                                          footer={
                                                                            Array [
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                              >
                                                                                Return
                                                                              </ForwardRef(InternalButton)>,
                                                                              <ForwardRef(InternalButton)
                                                                                block={false}
                                                                                ghost={false}
                                                                                htmlType="button"
                                                                                loading={false}
                                                                                onClick={[Function]}
                                                                                type="primary"
                                                                              >
                                                                                Ok
                                                                              </ForwardRef(InternalButton)>,
                                                                            ]
                                                                          }
                                                                          maskTransitionName="fade"
                                                                          okType="primary"
                                                                          onCancel={[Function]}
                                                                          transitionName="zoom"
                                                                          visible={false}
                                                                          width="800px"
                                                                        >
                                                                          <Dialog
                                                                            closable={false}
                                                                            closeIcon={
                                                                              <span
                                                                                className="ant-modal-close-x"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)
                                                                                  className="ant-modal-close-icon"
                                                                                />
                                                                              </span>
                                                                            }
                                                                            confirmLoading={false}
                                                                            footer={
                                                                              Array [
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  Return
                                                                                </ForwardRef(InternalButton)>,
                                                                                <ForwardRef(InternalButton)
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                  type="primary"
                                                                                >
                                                                                  Ok
                                                                                </ForwardRef(InternalButton)>,
                                                                              ]
                                                                            }
                                                                            maskTransitionName="fade"
                                                                            okType="primary"
                                                                            onCancel={[Function]}
                                                                            onClose={[Function]}
                                                                            prefixCls="ant-modal"
                                                                            transitionName="zoom"
                                                                            visible={false}
                                                                            width="800px"
                                                                            wrapClassName=""
                                                                          >
                                                                            <PortalWrapper
                                                                              visible={false}
                                                                            />
                                                                          </Dialog>
                                                                        </Modal>
                                                                        <Space
                                                                          direction="vertical"
                                                                        >
                                                                          <div
                                                                            className="ant-space ant-space-vertical"
                                                                          >
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={0}
                                                                              key="ant-space-item-0"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={
                                                                                  Object {
                                                                                    "marginBottom": 8,
                                                                                  }
                                                                                }
                                                                              >
                                                                                <img
                                                                                  width="100%"
                                                                                />
                                                                              </div>
                                                                            </Item>
                                                                            <Item
                                                                              className="ant-space-item"
                                                                              direction="vertical"
                                                                              index={1}
                                                                              key="ant-space-item-1"
                                                                              marginDirection="marginRight"
                                                                              size="small"
                                                                            >
                                                                              <div
                                                                                className="ant-space-item"
                                                                                style={Object {}}
                                                                              >
                                                                                <Button
                                                                                  block={false}
                                                                                  ghost={false}
                                                                                  htmlType="button"
                                                                                  loading={false}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <Wave>
                                                                                    <button
                                                                                      className="ant-btn"
                                                                                      onClick={[Function]}
                                                                                      type="button"
                                                                                    >
                                                                                      <LoadingIcon
                                                                                        existIcon={false}
                                                                                        loading={false}
                                                                                        prefixCls="ant-btn"
                                                                                      >
                                                                                        <CSSMotion
                                                                                          motionName="ant-btn-loading-icon-motion"
                                                                                          onAppearActive={[Function]}
                                                                                          onAppearStart={[Function]}
                                                                                          onEnterActive={[Function]}
                                                                                          onEnterStart={[Function]}
                                                                                          onLeaveActive={[Function]}
                                                                                          onLeaveStart={[Function]}
                                                                                          removeOnLeave={true}
                                                                                          visible={false}
                                                                                        >
                                                                                          <DomWrapper />
                                                                                        </CSSMotion>
                                                                                      </LoadingIcon>
                                                                                      <span
                                                                                        key=".0"
                                                                                      >
                                                                                        Select
                                                                                      </span>
                                                                                    </button>
                                                                                  </Wave>
                                                                                </Button>
                                                                              </div>
                                                                            </Item>
                                                                          </div>
                                                                        </Space>
                                                                      </MediaSelector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Excerpt"
                                                  name="excerpt"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Title must be minimum 3 characters.",
                                                        "min": 3,
                                                      },
                                                      Object {
                                                        "max": 5000,
                                                        "message": "Excerpt must be a maximum of 5000 characters.",
                                                      },
                                                      Object {
                                                        "message": "Add Excerpt",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Excerpt"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Excerpt",
                                                      }
                                                    }
                                                    name="excerpt"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Title must be minimum 3 characters.",
                                                          "min": 3,
                                                        },
                                                        Object {
                                                          "max": 5000,
                                                          "message": "Excerpt must be a maximum of 5000 characters.",
                                                        },
                                                        Object {
                                                          "message": "Add Excerpt",
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_excerpt"
                                                      label="Excerpt"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Excerpt",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "excerpt",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Title must be minimum 3 characters.",
                                                            "min": 3,
                                                          },
                                                          Object {
                                                            "max": 5000,
                                                            "message": "Excerpt must be a maximum of 5000 characters.",
                                                          },
                                                          Object {
                                                            "message": "Add Excerpt",
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="excerpt"
                                                            label="Excerpt"
                                                            name="excerpt"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="excerpt"
                                                                  title="Excerpt"
                                                                >
                                                                  Excerpt
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Excerpt"
                                                            name={
                                                              Array [
                                                                "excerpt",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Title must be minimum 3 characters.",
                                                                  "min": 3,
                                                                },
                                                                Object {
                                                                  "max": 5000,
                                                                  "message": "Excerpt must be a maximum of 5000 characters.",
                                                                },
                                                                Object {
                                                                  "message": "Add Excerpt",
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                    >
                                                                      <TextArea
                                                                        id="excerpt"
                                                                        onChange={[Function]}
                                                                        placeholder="Excerpt"
                                                                        rows={4}
                                                                        style={
                                                                          Object {
                                                                            "fontSize": "medium",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <TextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                            />
                                                                          }
                                                                          handleReset={[Function]}
                                                                          id="excerpt"
                                                                          inputType="text"
                                                                          onChange={[Function]}
                                                                          placeholder="Excerpt"
                                                                          prefixCls="ant-input"
                                                                          rows={4}
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "medium",
                                                                            }
                                                                          }
                                                                          triggerFocus={[Function]}
                                                                          value=""
                                                                        >
                                                                          <TextArea
                                                                            className=""
                                                                            id="excerpt"
                                                                            onChange={[Function]}
                                                                            placeholder="Excerpt"
                                                                            prefixCls="ant-input"
                                                                            rows={4}
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "medium",
                                                                              }
                                                                            }
                                                                            value=""
                                                                          >
                                                                            <ResizableTextArea
                                                                              className=""
                                                                              id="excerpt"
                                                                              onChange={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              placeholder="Excerpt"
                                                                              prefixCls="ant-input"
                                                                              rows={4}
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "medium",
                                                                                }
                                                                              }
                                                                              value=""
                                                                            >
                                                                              <ResizeObserver
                                                                                disabled={true}
                                                                                onResize={[Function]}
                                                                              >
                                                                                <textarea
                                                                                  className="ant-input"
                                                                                  id="excerpt"
                                                                                  onChange={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="Excerpt"
                                                                                  rows={4}
                                                                                  style={
                                                                                    Object {
                                                                                      "fontSize": "medium",
                                                                                    }
                                                                                  }
                                                                                  value=""
                                                                                />
                                                                              </ResizeObserver>
                                                                            </ResizableTextArea>
                                                                          </TextArea>
                                                                        </ClearableLabeledInput>
                                                                      </TextArea>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Slug"
                                                  name="slug"
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "Please input the slug!",
                                                        "required": true,
                                                      },
                                                      Object {
                                                        "message": "Please enter valid slug!",
                                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <WrapperField
                                                    label="Slug"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Slug",
                                                      }
                                                    }
                                                    name="slug"
                                                    onReset={[Function]}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the slug!",
                                                          "required": true,
                                                        },
                                                        Object {
                                                          "message": "Please enter valid slug!",
                                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                        },
                                                      ]
                                                    }
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_slug"
                                                      label="Slug"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Slug",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "slug",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Please input the slug!",
                                                            "required": true,
                                                          },
                                                          Object {
                                                            "message": "Please enter valid slug!",
                                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="slug"
                                                            label="Slug"
                                                            name="slug"
                                                            prefixCls="ant-form"
                                                            required={true}
                                                            requiredMark={true}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className="ant-form-item-required"
                                                                  htmlFor="slug"
                                                                  title="Slug"
                                                                >
                                                                  Slug
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Slug"
                                                            name={
                                                              Array [
                                                                "slug",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "Please input the slug!",
                                                                  "required": true,
                                                                },
                                                                Object {
                                                                  "message": "Please enter valid slug!",
                                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                                },
                                                              ]
                                                            }
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                    >
                                                                      <Input
                                                                        id="slug"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                      >
                                                                        <ClearableLabeledInput
                                                                          bordered={true}
                                                                          element={
                                                                            <input
                                                                              className="ant-input"
                                                                              id="slug"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              type="text"
                                                                            />
                                                                          }
                                                                          focused={false}
                                                                          handleReset={[Function]}
                                                                          id="slug"
                                                                          inputType="input"
                                                                          onChange={[Function]}
                                                                          prefixCls="ant-input"
                                                                          triggerFocus={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            className="ant-input"
                                                                            id="slug"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </ClearableLabeledInput>
                                                                      </Input>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Categories"
                                                  name="categories"
                                                >
                                                  <WrapperField
                                                    label="Categories"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Categories",
                                                      }
                                                    }
                                                    name="categories"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_categories"
                                                      label="Categories"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Categories",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "categories",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="categories"
                                                            label="Categories"
                                                            name="categories"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="categories"
                                                                  title="Categories"
                                                                >
                                                                  Categories
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Categories"
                                                            name={
                                                              Array [
                                                                "categories",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                    >
                                                                      <Selector
                                                                        action="Categories"
                                                                        createEntity="Category"
                                                                        id="categories"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={Array []}
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No categories available. Type something to create new Category"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select categories"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={Array []}
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No categories available. Type something to create new Category"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select categories"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={Array []}
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No categories available. Type something to create new Category"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={Set {}}
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={Set {}}
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={Array []}
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-placeholder"
                                                                                            >
                                                                                              Select categories
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No categories available. Type something to create new Category"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select categories"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={Array []}
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={Array []}
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-placeholder"
                                                                                                >
                                                                                                  Select categories
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No categories available. Type something to create new Category"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select categories"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={Array []}
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={Array []}
                                                                                            motionAppear={false}
                                                                                          />
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                          <span
                                                                                            className="ant-select-selection-placeholder"
                                                                                          >
                                                                                            Select categories
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Tags"
                                                  name="tags"
                                                >
                                                  <WrapperField
                                                    label="Tags"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Tags",
                                                      }
                                                    }
                                                    name="tags"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_tags"
                                                      label="Tags"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Tags",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "tags",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="tags"
                                                            label="Tags"
                                                            name="tags"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="tags"
                                                                  title="Tags"
                                                                >
                                                                  Tags
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Tags"
                                                            name={
                                                              Array [
                                                                "tags",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                    >
                                                                      <Selector
                                                                        action="Tags"
                                                                        createEntity="Tag"
                                                                        id="tags"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={Array []}
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={
                                                                            <Empty
                                                                              description="No tags available. Type something to create new Tag"
                                                                              image={<Simple />}
                                                                            />
                                                                          }
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select tags"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={Array []}
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={
                                                                              <Empty
                                                                                description="No tags available. Type something to create new Tag"
                                                                                image={<Simple />}
                                                                              />
                                                                            }
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select tags"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={Array []}
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={
                                                                                <Empty
                                                                                  description="No tags available. Type something to create new Tag"
                                                                                  image={<Simple />}
                                                                                />
                                                                              }
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select tags"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={Set {}}
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={Set {}}
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={Array []}
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-placeholder"
                                                                                            >
                                                                                              Select tags
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={
                                                                                        <Empty
                                                                                          description="No tags available. Type something to create new Tag"
                                                                                          image={<Simple />}
                                                                                        />
                                                                                      }
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select tags"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={Array []}
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={Array []}
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-placeholder"
                                                                                                >
                                                                                                  Select tags
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={
                                                                                            <Empty
                                                                                              description="No tags available. Type something to create new Tag"
                                                                                              image={<Simple />}
                                                                                            />
                                                                                          }
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select tags"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={Array []}
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={Array []}
                                                                                            motionAppear={false}
                                                                                          />
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                          <span
                                                                                            className="ant-select-selection-placeholder"
                                                                                          >
                                                                                            Select tags
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                                <FormItem
                                                  label="Authors"
                                                  name="authors"
                                                >
                                                  <WrapperField
                                                    label="Authors"
                                                    messageVariables={
                                                      Object {
                                                        "label": "Authors",
                                                      }
                                                    }
                                                    name="authors"
                                                    onReset={[Function]}
                                                    trigger="onChange"
                                                    validateTrigger="onChange"
                                                  >
                                                    <Field
                                                      fieldContext={
                                                        Object {
                                                          "__INTERNAL__": Object {
                                                            "itemRef": [Function],
                                                            "name": undefined,
                                                          },
                                                          "getFieldError": [Function],
                                                          "getFieldInstance": [Function],
                                                          "getFieldValue": [Function],
                                                          "getFieldsError": [Function],
                                                          "getFieldsValue": [Function],
                                                          "getInternalHooks": [Function],
                                                          "isFieldTouched": [Function],
                                                          "isFieldValidating": [Function],
                                                          "isFieldsTouched": [Function],
                                                          "isFieldsValidating": [Function],
                                                          "resetFields": [Function],
                                                          "scrollToField": [Function],
                                                          "setFields": [Function],
                                                          "setFieldsValue": [Function],
                                                          "submit": [Function],
                                                          "validateFields": [Function],
                                                          "validateTrigger": "onChange",
                                                        }
                                                      }
                                                      key="_authors"
                                                      label="Authors"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Authors",
                                                        }
                                                      }
                                                      name={
                                                        Array [
                                                          "authors",
                                                        ]
                                                      }
                                                      onReset={[Function]}
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                      valuePropName="value"
                                                    >
                                                      <Row
                                                        className="ant-form-item"
                                                        key="row"
                                                      >
                                                        <div
                                                          className="ant-row ant-form-item"
                                                          style={Object {}}
                                                        >
                                                          <FormItemLabel
                                                            htmlFor="authors"
                                                            label="Authors"
                                                            name="authors"
                                                            prefixCls="ant-form"
                                                            required={false}
                                                            requiredMark={true}
                                                          >
                                                            <Col
                                                              className="ant-form-item-label"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-label"
                                                                style={Object {}}
                                                              >
                                                                <label
                                                                  className=""
                                                                  htmlFor="authors"
                                                                  title="Authors"
                                                                >
                                                                  Authors
                                                                </label>
                                                              </div>
                                                            </Col>
                                                          </FormItemLabel>
                                                          <FormItemInput
                                                            errors={Array []}
                                                            label="Authors"
                                                            name={
                                                              Array [
                                                                "authors",
                                                              ]
                                                            }
                                                            onDomErrorVisibleChange={[Function]}
                                                            prefixCls="ant-form"
                                                            status=""
                                                            touched={false}
                                                            validateStatus=""
                                                            validating={false}
                                                          >
                                                            <Col
                                                              className="ant-form-item-control"
                                                            >
                                                              <div
                                                                className="ant-col ant-form-item-control"
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-form-item-control-input"
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input-content"
                                                                  >
                                                                    <Component
                                                                      update={1}
                                                                    >
                                                                      <Selector
                                                                        action="Authors"
                                                                        display="email"
                                                                        id="authors"
                                                                        mode="multiple"
                                                                        onChange={[Function]}
                                                                      >
                                                                        <ForwardRef(InternalSelect)
                                                                          allowClear={true}
                                                                          bordered={true}
                                                                          defaultValue={Array []}
                                                                          filterOption={[Function]}
                                                                          listHeight={128}
                                                                          loading={false}
                                                                          mode="multiple"
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          placeholder="Select authors"
                                                                        >
                                                                          <Select
                                                                            allowClear={true}
                                                                            className=""
                                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                            defaultValue={Array []}
                                                                            dropdownClassName=""
                                                                            filterOption={[Function]}
                                                                            inputIcon={[Function]}
                                                                            listHeight={128}
                                                                            listItemHeight={24}
                                                                            loading={false}
                                                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                            mode="multiple"
                                                                            notFoundContent={null}
                                                                            onChange={[Function]}
                                                                            onPopupScroll={[Function]}
                                                                            onSearch={[Function]}
                                                                            placeholder="Select authors"
                                                                            prefixCls="ant-select"
                                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                                            transitionName="slide-up"
                                                                          >
                                                                            <ForwardRef(Select)
                                                                              allowClear={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={Array []}
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              inputIcon={[Function]}
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                              mode="multiple"
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              placeholder="Select authors"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              transitionName="slide-up"
                                                                            >
                                                                              <div
                                                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                              >
                                                                                <SelectTrigger
                                                                                  containerWidth={null}
                                                                                  dropdownClassName=""
                                                                                  empty={true}
                                                                                  getTriggerDOMNode={[Function]}
                                                                                  popupElement={
                                                                                    <ForwardRef(OptionList)
                                                                                      childrenAsData={true}
                                                                                      defaultActiveFirstOption={true}
                                                                                      flattenOptions={Array []}
                                                                                      height={128}
                                                                                      itemHeight={24}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onActiveValue={[Function]}
                                                                                      onMouseEnter={[Function]}
                                                                                      onScroll={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      options={Array []}
                                                                                      prefixCls="ant-select"
                                                                                      searchValue=""
                                                                                      values={Set {}}
                                                                                      virtual={true}
                                                                                    />
                                                                                  }
                                                                                  prefixCls="ant-select"
                                                                                  transitionName="slide-up"
                                                                                  visible={false}
                                                                                >
                                                                                  <Trigger
                                                                                    action={Array []}
                                                                                    afterPopupVisibleChange={[Function]}
                                                                                    autoDestroy={false}
                                                                                    blurDelay={0.15}
                                                                                    builtinPlacements={
                                                                                      Object {
                                                                                        "bottomLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tl",
                                                                                            "bl",
                                                                                          ],
                                                                                        },
                                                                                        "bottomRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "tr",
                                                                                            "br",
                                                                                          ],
                                                                                        },
                                                                                        "topLeft": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "bl",
                                                                                            "tl",
                                                                                          ],
                                                                                        },
                                                                                        "topRight": Object {
                                                                                          "offset": Array [
                                                                                            0,
                                                                                            -4,
                                                                                          ],
                                                                                          "overflow": Object {
                                                                                            "adjustX": 0,
                                                                                            "adjustY": 1,
                                                                                          },
                                                                                          "points": Array [
                                                                                            "br",
                                                                                            "tr",
                                                                                          ],
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    defaultPopupVisible={false}
                                                                                    destroyPopupOnHide={false}
                                                                                    focusDelay={0}
                                                                                    getDocument={[Function]}
                                                                                    getPopupClassNameFromAlign={[Function]}
                                                                                    getTriggerDOMNode={[Function]}
                                                                                    hideAction={Array []}
                                                                                    mask={false}
                                                                                    maskClosable={true}
                                                                                    mouseEnterDelay={0}
                                                                                    mouseLeaveDelay={0.1}
                                                                                    onPopupAlign={[Function]}
                                                                                    onPopupVisibleChange={[Function]}
                                                                                    popup={
                                                                                      <div>
                                                                                        <ForwardRef(OptionList)
                                                                                          childrenAsData={true}
                                                                                          defaultActiveFirstOption={true}
                                                                                          flattenOptions={Array []}
                                                                                          height={128}
                                                                                          itemHeight={24}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onActiveValue={[Function]}
                                                                                          onMouseEnter={[Function]}
                                                                                          onScroll={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          options={Array []}
                                                                                          prefixCls="ant-select"
                                                                                          searchValue=""
                                                                                          values={Set {}}
                                                                                          virtual={true}
                                                                                        />
                                                                                      </div>
                                                                                    }
                                                                                    popupAlign={Object {}}
                                                                                    popupClassName="ant-select-dropdown-empty"
                                                                                    popupPlacement="bottomLeft"
                                                                                    popupStyle={
                                                                                      Object {
                                                                                        "minWidth": null,
                                                                                        "width": null,
                                                                                      }
                                                                                    }
                                                                                    popupTransitionName="slide-up"
                                                                                    popupVisible={false}
                                                                                    prefixCls="ant-select-dropdown"
                                                                                    showAction={Array []}
                                                                                  >
                                                                                    <Selector
                                                                                      accessibilityIndex={0}
                                                                                      activeValue={null}
                                                                                      allowClear={true}
                                                                                      className=""
                                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                      defaultValue={Array []}
                                                                                      domRef={
                                                                                        Object {
                                                                                          "current": <div
                                                                                            class="ant-select-selector"
                                                                                          >
                                                                                            <span
                                                                                              class="ant-select-selection-search"
                                                                                              style="width: 0px;"
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                              <span
                                                                                                aria-hidden="true"
                                                                                                class="ant-select-selection-search-mirror"
                                                                                              >
                                                                                                
                                                                                                 
                                                                                              </span>
                                                                                            </span>
                                                                                            <span
                                                                                              class="ant-select-selection-placeholder"
                                                                                            >
                                                                                              Select authors
                                                                                            </span>
                                                                                          </div>,
                                                                                        }
                                                                                      }
                                                                                      dropdownClassName=""
                                                                                      filterOption={[Function]}
                                                                                      inputElement={null}
                                                                                      inputIcon={[Function]}
                                                                                      key="trigger"
                                                                                      listHeight={128}
                                                                                      listItemHeight={24}
                                                                                      loading={false}
                                                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                      mode="multiple"
                                                                                      multiple={true}
                                                                                      notFoundContent={null}
                                                                                      onChange={[Function]}
                                                                                      onPopupScroll={[Function]}
                                                                                      onSearch={[Function]}
                                                                                      onSearchSubmit={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      onToggleOpen={[Function]}
                                                                                      placeholder="Select authors"
                                                                                      prefixCls="ant-select"
                                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                      searchValue=""
                                                                                      showSearch={true}
                                                                                      tokenWithEnter={false}
                                                                                      transitionName="slide-up"
                                                                                      values={Array []}
                                                                                    >
                                                                                      <div
                                                                                        className="ant-select-selector"
                                                                                        onClick={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                      >
                                                                                        <SelectSelector
                                                                                          accessibilityIndex={0}
                                                                                          activeValue={null}
                                                                                          allowClear={true}
                                                                                          className=""
                                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                          defaultValue={Array []}
                                                                                          domRef={
                                                                                            Object {
                                                                                              "current": <div
                                                                                                class="ant-select-selector"
                                                                                              >
                                                                                                <span
                                                                                                  class="ant-select-selection-search"
                                                                                                  style="width: 0px;"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                    aria-autocomplete="list"
                                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                    autocomplete="off"
                                                                                                    class="ant-select-selection-search-input"
                                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                                    readonly=""
                                                                                                    role="combobox"
                                                                                                    style="opacity: 0;"
                                                                                                    type="search"
                                                                                                    unselectable="on"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="ant-select-selection-search-mirror"
                                                                                                  >
                                                                                                    
                                                                                                     
                                                                                                  </span>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="ant-select-selection-placeholder"
                                                                                                >
                                                                                                  Select authors
                                                                                                </span>
                                                                                              </div>,
                                                                                            }
                                                                                          }
                                                                                          dropdownClassName=""
                                                                                          filterOption={[Function]}
                                                                                          inputElement={null}
                                                                                          inputIcon={[Function]}
                                                                                          inputRef={
                                                                                            Object {
                                                                                              "current": <input
                                                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                                autocomplete="off"
                                                                                                class="ant-select-selection-search-input"
                                                                                                id="rc_select_TEST_OR_SSR"
                                                                                                readonly=""
                                                                                                role="combobox"
                                                                                                style="opacity: 0;"
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />,
                                                                                            }
                                                                                          }
                                                                                          listHeight={128}
                                                                                          listItemHeight={24}
                                                                                          loading={false}
                                                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                                          mode="multiple"
                                                                                          multiple={true}
                                                                                          notFoundContent={null}
                                                                                          onChange={[Function]}
                                                                                          onInputChange={[Function]}
                                                                                          onInputCompositionEnd={[Function]}
                                                                                          onInputCompositionStart={[Function]}
                                                                                          onInputKeyDown={[Function]}
                                                                                          onInputMouseDown={[Function]}
                                                                                          onInputPaste={[Function]}
                                                                                          onPopupScroll={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSearchSubmit={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          onToggleOpen={[Function]}
                                                                                          placeholder="Select authors"
                                                                                          prefixCls="ant-select"
                                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                                          searchValue=""
                                                                                          showSearch={true}
                                                                                          tokenWithEnter={false}
                                                                                          transitionName="slide-up"
                                                                                          values={Array []}
                                                                                        >
                                                                                          <CSSMotionList
                                                                                            component={false}
                                                                                            keys={Array []}
                                                                                            motionAppear={false}
                                                                                          />
                                                                                          <span
                                                                                            className="ant-select-selection-search"
                                                                                            style={
                                                                                              Object {
                                                                                                "width": 0,
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <Input
                                                                                              accessibilityIndex={0}
                                                                                              attrs={Object {}}
                                                                                              inputElement={null}
                                                                                              onChange={[Function]}
                                                                                              onCompositionEnd={[Function]}
                                                                                              onCompositionStart={[Function]}
                                                                                              onKeyDown={[Function]}
                                                                                              onMouseDown={[Function]}
                                                                                              onPaste={[Function]}
                                                                                              prefixCls="ant-select"
                                                                                              value=""
                                                                                            >
                                                                                              <input
                                                                                                aria-activedescendant="undefined_list_0"
                                                                                                aria-autocomplete="list"
                                                                                                aria-controls="undefined_list"
                                                                                                aria-haspopup="listbox"
                                                                                                aria-owns="undefined_list"
                                                                                                autoComplete="off"
                                                                                                className="ant-select-selection-search-input"
                                                                                                onChange={[Function]}
                                                                                                onCompositionEnd={[Function]}
                                                                                                onCompositionStart={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onPaste={[Function]}
                                                                                                readOnly={true}
                                                                                                role="combobox"
                                                                                                style={
                                                                                                  Object {
                                                                                                    "opacity": 0,
                                                                                                  }
                                                                                                }
                                                                                                type="search"
                                                                                                unselectable="on"
                                                                                                value=""
                                                                                              />
                                                                                            </Input>
                                                                                            <span
                                                                                              aria-hidden={true}
                                                                                              className="ant-select-selection-search-mirror"
                                                                                            >
                                                                                               
                                                                                            </span>
                                                                                          </span>
                                                                                          <span
                                                                                            className="ant-select-selection-placeholder"
                                                                                          >
                                                                                            Select authors
                                                                                          </span>
                                                                                        </SelectSelector>
                                                                                      </div>
                                                                                    </Selector>
                                                                                  </Trigger>
                                                                                </SelectTrigger>
                                                                              </div>
                                                                            </ForwardRef(Select)>
                                                                          </Select>
                                                                        </ForwardRef(InternalSelect)>
                                                                      </Selector>
                                                                    </Component>
                                                                  </div>
                                                                </div>
                                                                <ErrorList
                                                                  errors={Array []}
                                                                  onDomErrorVisibleChange={[Function]}
                                                                >
                                                                  <CSSMotion
                                                                    motionAppear={true}
                                                                    motionDeadline={500}
                                                                    motionName="show-help"
                                                                    onLeaveEnd={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </ErrorList>
                                                              </div>
                                                            </Col>
                                                          </FormItemInput>
                                                        </div>
                                                      </Row>
                                                    </Field>
                                                  </WrapperField>
                                                </FormItem>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </DrawerChild>
                                  </div>
                                </DrawerWrapper>
                              </Drawer>
                            </DrawerWrapper>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Item>
              </div>
            </Space>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PostForm>
</Provider>
`;
