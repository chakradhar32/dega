// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tags List component should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Tags
        permission={
          Object {
            "actions": Array [
              "create",
            ],
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Link
                  key="1"
                  to="/tags/create"
                >
                  <LinkAnchor
                    href="/tags/create"
                    navigate={[Function]}
                  >
                    <a
                      href="/tags/create"
                      onClick={[Function]}
                    >
                      <Button
                        block={false}
                        disabled={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                      >
                        <Wave>
                          <button
                            className="ant-btn"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <LoadingIcon
                              existIcon={false}
                              loading={false}
                              prefixCls="ant-btn"
                            >
                              <CSSMotion
                                motionName="ant-btn-loading-icon-motion"
                                onAppearActive={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveStart={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </LoadingIcon>
                            <span
                              key=".0"
                            >
                              Create New
                            </span>
                          </button>
                        </Wave>
                      </Button>
                    </a>
                  </LinkAnchor>
                </Link>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <TagList
                  actions={
                    Array [
                      "create",
                    ]
                  }
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        size="small"
                      >
                        <div
                          className="ant-space-item"
                          style={
                            Object {
                              "marginBottom": 8,
                            }
                          }
                        >
                          <ForwardRef(InternalForm)
                            form={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "filters",
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                              }
                            }
                            initialValues={
                              Object {
                                "limit": 5,
                                "page": 1,
                              }
                            }
                            layout="inline"
                            name="filters"
                            onFinish={[Function]}
                            style={
                              Object {
                                "maxWidth": "100%",
                              }
                            }
                          >
                            <SizeContextProvider>
                              <ForwardRef(Form)
                                className="ant-form ant-form-inline"
                                form={
                                  Object {
                                    "__INTERNAL__": Object {
                                      "itemRef": [Function],
                                      "name": "filters",
                                    },
                                    "getFieldError": [Function],
                                    "getFieldInstance": [Function],
                                    "getFieldValue": [Function],
                                    "getFieldsError": [Function],
                                    "getFieldsValue": [Function],
                                    "getInternalHooks": [Function],
                                    "isFieldTouched": [Function],
                                    "isFieldValidating": [Function],
                                    "isFieldsTouched": [Function],
                                    "isFieldsValidating": [Function],
                                    "resetFields": [Function],
                                    "scrollToField": [Function],
                                    "setFields": [Function],
                                    "setFieldsValue": [Function],
                                    "submit": [Function],
                                    "validateFields": [Function],
                                  }
                                }
                                id="filters"
                                initialValues={
                                  Object {
                                    "limit": 5,
                                    "page": 1,
                                  }
                                }
                                name="filters"
                                onFinish={[Function]}
                                onFinishFailed={[Function]}
                                style={
                                  Object {
                                    "maxWidth": "100%",
                                  }
                                }
                              >
                                <form
                                  className="ant-form ant-form-inline"
                                  id="filters"
                                  onSubmit={[Function]}
                                  style={
                                    Object {
                                      "maxWidth": "100%",
                                    }
                                  }
                                >
                                  <FormItem
                                    label="Search"
                                    name="q"
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Search"
                                      messageVariables={
                                        Object {
                                          "label": "Search",
                                        }
                                      }
                                      name="q"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "25%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_q"
                                        label="Search"
                                        messageVariables={
                                          Object {
                                            "label": "Search",
                                          }
                                        }
                                        name={
                                          Array [
                                            "q",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "25%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "25%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "25%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_q"
                                              label="Search"
                                              name="q"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "25%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_q"
                                                    title="Search"
                                                  >
                                                    Search
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Search"
                                              name={
                                                Array [
                                                  "q",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "25%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={1}
                                                      >
                                                        <Input
                                                          id="filters_q"
                                                          onChange={[Function]}
                                                          placeholder="search tags"
                                                          type="text"
                                                        >
                                                          <ClearableLabeledInput
                                                            bordered={true}
                                                            element={
                                                              <input
                                                                className="ant-input"
                                                                id="filters_q"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                placeholder="search tags"
                                                                type="text"
                                                              />
                                                            }
                                                            focused={false}
                                                            handleReset={[Function]}
                                                            id="filters_q"
                                                            inputType="input"
                                                            onChange={[Function]}
                                                            placeholder="search tags"
                                                            prefixCls="ant-input"
                                                            triggerFocus={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <input
                                                              className="ant-input"
                                                              id="filters_q"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="search tags"
                                                              type="text"
                                                              value=""
                                                            />
                                                          </ClearableLabeledInput>
                                                        </Input>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem
                                    label="Sort"
                                    name="sort"
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Sort"
                                      messageVariables={
                                        Object {
                                          "label": "Sort",
                                        }
                                      }
                                      name="sort"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_sort"
                                        label="Sort"
                                        messageVariables={
                                          Object {
                                            "label": "Sort",
                                          }
                                        }
                                        name={
                                          Array [
                                            "sort",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "15%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "15%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "15%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_sort"
                                              label="Sort"
                                              name="sort"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_sort"
                                                    title="Sort"
                                                  >
                                                    Sort
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Sort"
                                              name={
                                                Array [
                                                  "sort",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={1}
                                                      >
                                                        <ForwardRef(InternalSelect)
                                                          id="filters_sort"
                                                          onChange={[Function]}
                                                        >
                                                          <Select
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            transitionName="slide-up"
                                                          >
                                                            <ForwardRef(Select)
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              dropdownClassName=""
                                                              id="filters_sort"
                                                              inputIcon={[Function]}
                                                              listHeight={256}
                                                              listItemHeight={24}
                                                              menuItemSelectedIcon={null}
                                                              notFoundContent={
                                                                <Context.Consumer>
                                                                  [Function]
                                                                </Context.Consumer>
                                                              }
                                                              onChange={[Function]}
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              transitionName="slide-up"
                                                            >
                                                              <div
                                                                className="ant-select ant-select-single ant-select-show-arrow"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectTrigger
                                                                  containerWidth={null}
                                                                  dropdownClassName=""
                                                                  empty={false}
                                                                  getTriggerDOMNode={[Function]}
                                                                  popupElement={
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Latest",
                                                                              "key": null,
                                                                              "value": "desc",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "desc",
                                                                          },
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Old",
                                                                              "key": null,
                                                                              "value": "asc",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "asc",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="filters_sort"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Latest",
                                                                            "key": null,
                                                                            "value": "desc",
                                                                          },
                                                                          Object {
                                                                            "children": "Old",
                                                                            "key": null,
                                                                            "value": "asc",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={Set {}}
                                                                      virtual={true}
                                                                    />
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  transitionName="slide-up"
                                                                >
                                                                  <Trigger
                                                                    action={Array []}
                                                                    afterPopupVisibleChange={[Function]}
                                                                    autoDestroy={false}
                                                                    blurDelay={0.15}
                                                                    builtinPlacements={
                                                                      Object {
                                                                        "bottomLeft": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tl",
                                                                            "bl",
                                                                          ],
                                                                        },
                                                                        "bottomRight": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tr",
                                                                            "br",
                                                                          ],
                                                                        },
                                                                        "topLeft": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "bl",
                                                                            "tl",
                                                                          ],
                                                                        },
                                                                        "topRight": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "br",
                                                                            "tr",
                                                                          ],
                                                                        },
                                                                      }
                                                                    }
                                                                    defaultPopupVisible={false}
                                                                    destroyPopupOnHide={false}
                                                                    focusDelay={0}
                                                                    getDocument={[Function]}
                                                                    getPopupClassNameFromAlign={[Function]}
                                                                    getTriggerDOMNode={[Function]}
                                                                    hideAction={Array []}
                                                                    mask={false}
                                                                    maskClosable={true}
                                                                    mouseEnterDelay={0}
                                                                    mouseLeaveDelay={0.1}
                                                                    onPopupAlign={[Function]}
                                                                    onPopupVisibleChange={[Function]}
                                                                    popup={
                                                                      <div>
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={
                                                                            Array [
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "Latest",
                                                                                  "key": null,
                                                                                  "value": "desc",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "desc",
                                                                              },
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "Old",
                                                                                  "key": null,
                                                                                  "value": "asc",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "asc",
                                                                              },
                                                                            ]
                                                                          }
                                                                          height={256}
                                                                          id="filters_sort"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={
                                                                            <Context.Consumer>
                                                                              [Function]
                                                                            </Context.Consumer>
                                                                          }
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "children": "Latest",
                                                                                "key": null,
                                                                                "value": "desc",
                                                                              },
                                                                              Object {
                                                                                "children": "Old",
                                                                                "key": null,
                                                                                "value": "asc",
                                                                              },
                                                                            ]
                                                                          }
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={Set {}}
                                                                          virtual={true}
                                                                        />
                                                                      </div>
                                                                    }
                                                                    popupAlign={Object {}}
                                                                    popupClassName=""
                                                                    popupPlacement="bottomLeft"
                                                                    popupStyle={
                                                                      Object {
                                                                        "minWidth": null,
                                                                        "width": null,
                                                                      }
                                                                    }
                                                                    popupTransitionName="slide-up"
                                                                    prefixCls="ant-select-dropdown"
                                                                    showAction={Array []}
                                                                  >
                                                                    <Selector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-placeholder"
                                                                            />
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="filters_sort"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      key="trigger"
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      values={Array []}
                                                                    >
                                                                      <div
                                                                        className="ant-select-selector"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                      >
                                                                        <SingleSelector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          className=""
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="filters_sort_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="filters_sort_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="filters_sort_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="filters_sort"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-placeholder"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          id="filters_sort"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          inputRef={
                                                                            Object {
                                                                              "current": <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />,
                                                                            }
                                                                          }
                                                                          listHeight={256}
                                                                          listItemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={
                                                                            <Context.Consumer>
                                                                              [Function]
                                                                            </Context.Consumer>
                                                                          }
                                                                          onChange={[Function]}
                                                                          onInputChange={[Function]}
                                                                          onInputCompositionEnd={[Function]}
                                                                          onInputCompositionStart={[Function]}
                                                                          onInputKeyDown={[Function]}
                                                                          onInputMouseDown={[Function]}
                                                                          onInputPaste={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          prefixCls="ant-select"
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={false}
                                                                          tokenWithEnter={false}
                                                                          transitionName="slide-up"
                                                                          values={Array []}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-search"
                                                                          >
                                                                            <Input
                                                                              accessibilityIndex={0}
                                                                              attrs={Object {}}
                                                                              editable={false}
                                                                              id="filters_sort"
                                                                              inputElement={null}
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              prefixCls="ant-select"
                                                                              value=""
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autoComplete="off"
                                                                                className="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                onChange={[Function]}
                                                                                onCompositionEnd={[Function]}
                                                                                onCompositionStart={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onPaste={[Function]}
                                                                                readOnly={true}
                                                                                role="combobox"
                                                                                style={
                                                                                  Object {
                                                                                    "opacity": 0,
                                                                                  }
                                                                                }
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </Input>
                                                                          </span>
                                                                          <span
                                                                            className="ant-select-selection-placeholder"
                                                                          />
                                                                        </SingleSelector>
                                                                      </div>
                                                                    </Selector>
                                                                  </Trigger>
                                                                </SelectTrigger>
                                                                <TransBtn
                                                                  className="ant-select-arrow"
                                                                  customizeIcon={[Function]}
                                                                  customizeIconProps={
                                                                    Object {
                                                                      "focused": false,
                                                                      "loading": undefined,
                                                                      "open": undefined,
                                                                      "searchValue": "",
                                                                      "showSearch": false,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="ant-select-arrow"
                                                                    onMouseDown={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "WebkitUserSelect": "none",
                                                                        "userSelect": "none",
                                                                      }
                                                                    }
                                                                    unselectable="on"
                                                                  >
                                                                    <ForwardRef(DownOutlined)
                                                                      className="ant-select-suffix"
                                                                    >
                                                                      <AntdIcon
                                                                        className="ant-select-suffix"
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          aria-label="down"
                                                                          className="anticon anticon-down ant-select-suffix"
                                                                          role="img"
                                                                        >
                                                                          <IconReact
                                                                            className=""
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className=""
                                                                              data-icon="down"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              key="svg-down"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                key="svg-down-svg-0"
                                                                              />
                                                                            </svg>
                                                                          </IconReact>
                                                                        </span>
                                                                      </AntdIcon>
                                                                    </ForwardRef(DownOutlined)>
                                                                  </span>
                                                                </TransBtn>
                                                              </div>
                                                            </ForwardRef(Select)>
                                                          </Select>
                                                        </ForwardRef(InternalSelect)>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem>
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          prefixCls="ant-form"
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          validateStatus=""
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Button
                                                    block={false}
                                                    ghost={false}
                                                    htmlType="submit"
                                                    loading={false}
                                                    type="primary"
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-primary"
                                                        onClick={[Function]}
                                                        type="submit"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <CSSMotion
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Submit
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </FormItem>
                                </form>
                              </ForwardRef(Form)>
                            </SizeContextProvider>
                          </ForwardRef(InternalForm)>
                        </div>
                      </Item>
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        size="small"
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Table
                            bordered={true}
                            columns={
                              Array [
                                Object {
                                  "dataIndex": "name",
                                  "key": "name",
                                  "title": "Name",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "slug",
                                  "key": "slug",
                                  "title": "Slug",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "operation",
                                  "render": [Function],
                                  "title": "Action",
                                  "width": "20%",
                                },
                              ]
                            }
                            pagination={
                              Object {
                                "current": 1,
                                "onChange": [Function],
                                "pageSize": 5,
                                "total": undefined,
                              }
                            }
                            rowKey="id"
                          >
                            <div
                              className="ant-table-wrapper"
                            >
                              <Spin
                                size="default"
                                spinning={false}
                                wrapperClassName=""
                              >
                                <div
                                  className="ant-spin-nested-loading"
                                >
                                  <div
                                    className="ant-spin-container"
                                    key="container"
                                  >
                                    <Table
                                      bordered={true}
                                      className="ant-table-bordered ant-table-empty"
                                      columns={
                                        Array [
                                          Object {
                                            "dataIndex": "name",
                                            "key": "name",
                                            "title": "Name",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "slug",
                                            "key": "slug",
                                            "title": "Slug",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "operation",
                                            "render": [Function],
                                            "title": "Action",
                                            "width": "20%",
                                          },
                                        ]
                                      }
                                      data={Array []}
                                      emptyText={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      expandable={
                                        Object {
                                          "__PARENT_RENDER_ICON__": undefined,
                                          "childrenColumnName": undefined,
                                          "expandIcon": [Function],
                                          "expandIconColumnIndex": undefined,
                                          "indentSize": 15,
                                        }
                                      }
                                      internalHooks="rc-table-internal-hook"
                                      internalRefs={
                                        Object {
                                          "body": Object {
                                            "current": <div
                                              class="ant-table-content"
                                            >
                                              <table
                                                style="table-layout: auto;"
                                              >
                                                <colgroup>
                                                  <col
                                                    style="width: 15%; min-width: 15%;"
                                                  />
                                                  <col
                                                    style="width: 15%; min-width: 15%;"
                                                  />
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                </colgroup>
                                                <thead
                                                  class="ant-table-thead"
                                                >
                                                  <tr>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Name
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Slug
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Action
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  class="ant-table-tbody"
                                                >
                                                  <tr
                                                    class="ant-table-placeholder"
                                                  >
                                                    <td
                                                      class="ant-table-cell"
                                                      colspan="3"
                                                    >
                                                      <div
                                                        class="ant-empty ant-empty-normal"
                                                      >
                                                        <div
                                                          class="ant-empty-image"
                                                        >
                                                          <svg
                                                            class="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fill-rule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                class="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                class="ant-empty-img-simple-g"
                                                                fill-rule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  class="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </div>
                                                        <p
                                                          class="ant-empty-description"
                                                        >
                                                          No Data
                                                        </p>
                                                      </div>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>,
                                          },
                                        }
                                      }
                                      pagination={
                                        Object {
                                          "current": 1,
                                          "onChange": [Function],
                                          "pageSize": 5,
                                          "total": undefined,
                                        }
                                      }
                                      prefixCls="ant-table"
                                      rowClassName={[Function]}
                                      rowKey={[Function]}
                                      transformColumns={[Function]}
                                    >
                                      <div
                                        className="ant-table ant-table-bordered ant-table-empty"
                                      >
                                        <Component
                                          pingLeft={false}
                                          pingRight={false}
                                          props={
                                            Object {
                                              "bordered": true,
                                              "className": "ant-table-bordered ant-table-empty",
                                              "columns": Array [
                                                Object {
                                                  "dataIndex": "name",
                                                  "key": "name",
                                                  "title": "Name",
                                                  "width": "15%",
                                                },
                                                Object {
                                                  "dataIndex": "slug",
                                                  "key": "slug",
                                                  "title": "Slug",
                                                  "width": "15%",
                                                },
                                                Object {
                                                  "dataIndex": "operation",
                                                  "render": [Function],
                                                  "title": "Action",
                                                  "width": "20%",
                                                },
                                              ],
                                              "data": Array [],
                                              "dataSource": undefined,
                                              "direction": undefined,
                                              "emptyText": <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>,
                                              "expandable": Object {
                                                "__PARENT_RENDER_ICON__": undefined,
                                                "childrenColumnName": undefined,
                                                "expandIcon": [Function],
                                                "expandIconColumnIndex": undefined,
                                                "indentSize": 15,
                                              },
                                              "internalHooks": "rc-table-internal-hook",
                                              "internalRefs": Object {
                                                "body": Object {
                                                  "current": <div
                                                    class="ant-table-content"
                                                  >
                                                    <table
                                                      style="table-layout: auto;"
                                                    >
                                                      <colgroup>
                                                        <col
                                                          style="width: 15%; min-width: 15%;"
                                                        />
                                                        <col
                                                          style="width: 15%; min-width: 15%;"
                                                        />
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                      </colgroup>
                                                      <thead
                                                        class="ant-table-thead"
                                                      >
                                                        <tr>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Name
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Slug
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Action
                                                          </th>
                                                        </tr>
                                                      </thead>
                                                      <tbody
                                                        class="ant-table-tbody"
                                                      >
                                                        <tr
                                                          class="ant-table-placeholder"
                                                        >
                                                          <td
                                                            class="ant-table-cell"
                                                            colspan="3"
                                                          >
                                                            <div
                                                              class="ant-empty ant-empty-normal"
                                                            >
                                                              <div
                                                                class="ant-empty-image"
                                                              >
                                                                <svg
                                                                  class="ant-empty-img-simple"
                                                                  height="41"
                                                                  viewBox="0 0 64 41"
                                                                  width="64"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <g
                                                                    fill="none"
                                                                    fill-rule="evenodd"
                                                                    transform="translate(0 1)"
                                                                  >
                                                                    <ellipse
                                                                      class="ant-empty-img-simple-ellipse"
                                                                      cx="32"
                                                                      cy="33"
                                                                      rx="32"
                                                                      ry="7"
                                                                    />
                                                                    <g
                                                                      class="ant-empty-img-simple-g"
                                                                      fill-rule="nonzero"
                                                                    >
                                                                      <path
                                                                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                      />
                                                                      <path
                                                                        class="ant-empty-img-simple-path"
                                                                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                      />
                                                                    </g>
                                                                  </g>
                                                                </svg>
                                                              </div>
                                                              <p
                                                                class="ant-empty-description"
                                                              >
                                                                No Data
                                                              </p>
                                                            </div>
                                                          </td>
                                                        </tr>
                                                      </tbody>
                                                    </table>
                                                  </div>,
                                                },
                                              },
                                              "loading": undefined,
                                              "mergedExpandedKeys": Set {},
                                              "pagination": Object {
                                                "current": 1,
                                                "onChange": [Function],
                                                "pageSize": 5,
                                                "total": undefined,
                                              },
                                              "prefixCls": "ant-table",
                                              "rowClassName": [Function],
                                              "rowKey": [Function],
                                              "stickyOffsets": Object {
                                                "left": Array [
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                                "right": Array [
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "transformColumns": [Function],
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-table-container"
                                          >
                                            <div
                                              className="ant-table-content"
                                              onScroll={[Function]}
                                              style={Object {}}
                                            >
                                              <table
                                                style={
                                                  Object {
                                                    "tableLayout": "auto",
                                                  }
                                                }
                                              >
                                                <ColGroup
                                                  colWidths={
                                                    Array [
                                                      "15%",
                                                      "15%",
                                                      "20%",
                                                    ]
                                                  }
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "name",
                                                        "fixed": undefined,
                                                        "key": "name",
                                                        "title": "Name",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "slug",
                                                        "fixed": undefined,
                                                        "key": "slug",
                                                        "title": "Slug",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <colgroup>
                                                    <col
                                                      key="0"
                                                      style={
                                                        Object {
                                                          "minWidth": "15%",
                                                          "width": "15%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="1"
                                                      style={
                                                        Object {
                                                          "minWidth": "15%",
                                                          "width": "15%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="2"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                  </colgroup>
                                                </ColGroup>
                                                <Header
                                                  colWidths={
                                                    Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ]
                                                  }
                                                  columCount={3}
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "name",
                                                        "key": "name",
                                                        "title": "Name",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "slug",
                                                        "key": "slug",
                                                        "title": "Slug",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                  flattenColumns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "name",
                                                        "fixed": undefined,
                                                        "key": "name",
                                                        "title": "Name",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "slug",
                                                        "fixed": undefined,
                                                        "key": "slug",
                                                        "title": "Slug",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                  stickyOffsets={
                                                    Object {
                                                      "left": Array [
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                      "right": Array [
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="ant-table-thead"
                                                  >
                                                    <HeaderRow
                                                      cellComponent="th"
                                                      cells={
                                                        Array [
                                                          Object {
                                                            "children": "Name",
                                                            "className": "",
                                                            "colEnd": 0,
                                                            "colSpan": 1,
                                                            "colStart": 0,
                                                            "column": Object {
                                                              "dataIndex": "name",
                                                              "key": "name",
                                                              "title": "Name",
                                                              "width": "15%",
                                                            },
                                                            "key": "name",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Slug",
                                                            "className": "",
                                                            "colEnd": 1,
                                                            "colSpan": 1,
                                                            "colStart": 1,
                                                            "column": Object {
                                                              "dataIndex": "slug",
                                                              "key": "slug",
                                                              "title": "Slug",
                                                              "width": "15%",
                                                            },
                                                            "key": "slug",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Action",
                                                            "className": "",
                                                            "colEnd": 2,
                                                            "colSpan": 1,
                                                            "colStart": 2,
                                                            "column": Object {
                                                              "dataIndex": "operation",
                                                              "render": [Function],
                                                              "title": "Action",
                                                              "width": "20%",
                                                            },
                                                            "key": undefined,
                                                            "rowSpan": 1,
                                                          },
                                                        ]
                                                      }
                                                      flattenColumns={
                                                        Array [
                                                          Object {
                                                            "dataIndex": "name",
                                                            "fixed": undefined,
                                                            "key": "name",
                                                            "title": "Name",
                                                            "width": "15%",
                                                          },
                                                          Object {
                                                            "dataIndex": "slug",
                                                            "fixed": undefined,
                                                            "key": "slug",
                                                            "title": "Slug",
                                                            "width": "15%",
                                                          },
                                                          Object {
                                                            "dataIndex": "operation",
                                                            "fixed": undefined,
                                                            "render": [Function],
                                                            "title": "Action",
                                                            "width": "20%",
                                                          },
                                                        ]
                                                      }
                                                      index={0}
                                                      key="0"
                                                      rowComponent="tr"
                                                      stickyOffsets={
                                                        Object {
                                                          "left": Array [
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                          "right": Array [
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <tr>
                                                        <Cell
                                                          className=""
                                                          colEnd={0}
                                                          colSpan={1}
                                                          colStart={0}
                                                          column={
                                                            Object {
                                                              "dataIndex": "name",
                                                              "key": "name",
                                                              "title": "Name",
                                                              "width": "15%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="name"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Name
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={1}
                                                          colSpan={1}
                                                          colStart={1}
                                                          column={
                                                            Object {
                                                              "dataIndex": "slug",
                                                              "key": "slug",
                                                              "title": "Slug",
                                                              "width": "15%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="slug"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Slug
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={2}
                                                          colSpan={1}
                                                          colStart={2}
                                                          column={
                                                            Object {
                                                              "dataIndex": "operation",
                                                              "render": [Function],
                                                              "title": "Action",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="operation"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Action
                                                          </th>
                                                        </Cell>
                                                      </tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </Header>
                                                <Body
                                                  childrenColumnName="children"
                                                  data={Array []}
                                                  emptyNode={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  expandedKeys={Set {}}
                                                  getRowKey={[Function]}
                                                  measureColumnWidth={false}
                                                >
                                                  <tbody
                                                    className="ant-table-tbody"
                                                  >
                                                    <ExpandedRow
                                                      cellComponent="td"
                                                      className="ant-table-placeholder"
                                                      colSpan={3}
                                                      component="tr"
                                                      componentWidth={0}
                                                      expanded={true}
                                                      prefixCls="ant-table"
                                                    >
                                                      <tr
                                                        className="ant-table-placeholder"
                                                        style={
                                                          Object {
                                                            "display": null,
                                                          }
                                                        }
                                                      >
                                                        <Cell
                                                          colSpan={3}
                                                          component="td"
                                                          prefixCls="ant-table"
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={3}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            <Empty
                                                              image={<Simple />}
                                                            >
                                                              <LocaleReceiver
                                                                componentName="Empty"
                                                              >
                                                                <div
                                                                  className="ant-empty ant-empty-normal"
                                                                >
                                                                  <div
                                                                    className="ant-empty-image"
                                                                  >
                                                                    <Simple>
                                                                      <svg
                                                                        className="ant-empty-img-simple"
                                                                        height="41"
                                                                        viewBox="0 0 64 41"
                                                                        width="64"
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <g
                                                                          fill="none"
                                                                          fillRule="evenodd"
                                                                          transform="translate(0 1)"
                                                                        >
                                                                          <ellipse
                                                                            className="ant-empty-img-simple-ellipse"
                                                                            cx="32"
                                                                            cy="33"
                                                                            rx="32"
                                                                            ry="7"
                                                                          />
                                                                          <g
                                                                            className="ant-empty-img-simple-g"
                                                                            fillRule="nonzero"
                                                                          >
                                                                            <path
                                                                              d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                            />
                                                                            <path
                                                                              className="ant-empty-img-simple-path"
                                                                              d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                            />
                                                                          </g>
                                                                        </g>
                                                                      </svg>
                                                                    </Simple>
                                                                  </div>
                                                                  <p
                                                                    className="ant-empty-description"
                                                                  >
                                                                    No Data
                                                                  </p>
                                                                </div>
                                                              </LocaleReceiver>
                                                            </Empty>
                                                          </td>
                                                        </Cell>
                                                      </tr>
                                                    </ExpandedRow>
                                                  </tbody>
                                                </Body>
                                              </table>
                                            </div>
                                          </div>
                                        </Component>
                                      </div>
                                    </Table>
                                  </div>
                                </div>
                              </Spin>
                            </div>
                          </Table>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </TagList>
              </div>
            </Item>
          </div>
        </Space>
      </Tags>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Tags List component should render the component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Tags
        permission={
          Object {
            "actions": Array [
              "create",
            ],
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Link
                  key="1"
                  to="/tags/create"
                >
                  <LinkAnchor
                    href="/tags/create"
                    navigate={[Function]}
                  >
                    <a
                      href="/tags/create"
                      onClick={[Function]}
                    >
                      <Button
                        block={false}
                        disabled={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                      >
                        <Wave>
                          <button
                            className="ant-btn"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <LoadingIcon
                              existIcon={false}
                              loading={false}
                              prefixCls="ant-btn"
                            >
                              <CSSMotion
                                motionName="ant-btn-loading-icon-motion"
                                onAppearActive={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveStart={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </LoadingIcon>
                            <span
                              key=".0"
                            >
                              Create New
                            </span>
                          </button>
                        </Wave>
                      </Button>
                    </a>
                  </LinkAnchor>
                </Link>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <TagList
                  actions={
                    Array [
                      "create",
                    ]
                  }
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        size="small"
                      >
                        <div
                          className="ant-space-item"
                          style={
                            Object {
                              "marginBottom": 8,
                            }
                          }
                        >
                          <ForwardRef(InternalForm)
                            form={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "filters",
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                              }
                            }
                            initialValues={
                              Object {
                                "limit": 5,
                                "page": 1,
                              }
                            }
                            layout="inline"
                            name="filters"
                            onFinish={[Function]}
                            style={
                              Object {
                                "maxWidth": "100%",
                              }
                            }
                          >
                            <SizeContextProvider>
                              <ForwardRef(Form)
                                className="ant-form ant-form-inline"
                                form={
                                  Object {
                                    "__INTERNAL__": Object {
                                      "itemRef": [Function],
                                      "name": "filters",
                                    },
                                    "getFieldError": [Function],
                                    "getFieldInstance": [Function],
                                    "getFieldValue": [Function],
                                    "getFieldsError": [Function],
                                    "getFieldsValue": [Function],
                                    "getInternalHooks": [Function],
                                    "isFieldTouched": [Function],
                                    "isFieldValidating": [Function],
                                    "isFieldsTouched": [Function],
                                    "isFieldsValidating": [Function],
                                    "resetFields": [Function],
                                    "scrollToField": [Function],
                                    "setFields": [Function],
                                    "setFieldsValue": [Function],
                                    "submit": [Function],
                                    "validateFields": [Function],
                                  }
                                }
                                id="filters"
                                initialValues={
                                  Object {
                                    "limit": 5,
                                    "page": 1,
                                  }
                                }
                                name="filters"
                                onFinish={[Function]}
                                onFinishFailed={[Function]}
                                style={
                                  Object {
                                    "maxWidth": "100%",
                                  }
                                }
                              >
                                <form
                                  className="ant-form ant-form-inline"
                                  id="filters"
                                  onSubmit={[Function]}
                                  style={
                                    Object {
                                      "maxWidth": "100%",
                                    }
                                  }
                                >
                                  <FormItem
                                    label="Search"
                                    name="q"
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Search"
                                      messageVariables={
                                        Object {
                                          "label": "Search",
                                        }
                                      }
                                      name="q"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "25%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_q"
                                        label="Search"
                                        messageVariables={
                                          Object {
                                            "label": "Search",
                                          }
                                        }
                                        name={
                                          Array [
                                            "q",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "25%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "25%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "25%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_q"
                                              label="Search"
                                              name="q"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "25%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_q"
                                                    title="Search"
                                                  >
                                                    Search
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Search"
                                              name={
                                                Array [
                                                  "q",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "25%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={1}
                                                      >
                                                        <Input
                                                          id="filters_q"
                                                          onChange={[Function]}
                                                          placeholder="search tags"
                                                          type="text"
                                                        >
                                                          <ClearableLabeledInput
                                                            bordered={true}
                                                            element={
                                                              <input
                                                                className="ant-input"
                                                                id="filters_q"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                placeholder="search tags"
                                                                type="text"
                                                              />
                                                            }
                                                            focused={false}
                                                            handleReset={[Function]}
                                                            id="filters_q"
                                                            inputType="input"
                                                            onChange={[Function]}
                                                            placeholder="search tags"
                                                            prefixCls="ant-input"
                                                            triggerFocus={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <input
                                                              className="ant-input"
                                                              id="filters_q"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="search tags"
                                                              type="text"
                                                              value=""
                                                            />
                                                          </ClearableLabeledInput>
                                                        </Input>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem
                                    label="Sort"
                                    name="sort"
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <WrapperField
                                      label="Sort"
                                      messageVariables={
                                        Object {
                                          "label": "Sort",
                                        }
                                      }
                                      name="sort"
                                      onReset={[Function]}
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                    >
                                      <Field
                                        fieldContext={
                                          Object {
                                            "__INTERNAL__": Object {
                                              "itemRef": [Function],
                                              "name": "filters",
                                            },
                                            "getFieldError": [Function],
                                            "getFieldInstance": [Function],
                                            "getFieldValue": [Function],
                                            "getFieldsError": [Function],
                                            "getFieldsValue": [Function],
                                            "getInternalHooks": [Function],
                                            "isFieldTouched": [Function],
                                            "isFieldValidating": [Function],
                                            "isFieldsTouched": [Function],
                                            "isFieldsValidating": [Function],
                                            "resetFields": [Function],
                                            "scrollToField": [Function],
                                            "setFields": [Function],
                                            "setFieldsValue": [Function],
                                            "submit": [Function],
                                            "validateFields": [Function],
                                            "validateTrigger": "onChange",
                                          }
                                        }
                                        key="_sort"
                                        label="Sort"
                                        messageVariables={
                                          Object {
                                            "label": "Sort",
                                          }
                                        }
                                        name={
                                          Array [
                                            "sort",
                                          ]
                                        }
                                        onReset={[Function]}
                                        style={
                                          Object {
                                            "width": "15%",
                                          }
                                        }
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="value"
                                      >
                                        <Row
                                          className="ant-form-item"
                                          key="row"
                                          style={
                                            Object {
                                              "width": "15%",
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-row ant-form-item"
                                            style={
                                              Object {
                                                "width": "15%",
                                              }
                                            }
                                          >
                                            <FormItemLabel
                                              htmlFor="filters_sort"
                                              label="Sort"
                                              name="sort"
                                              prefixCls="ant-form"
                                              required={false}
                                              requiredMark={true}
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                            >
                                              <Col
                                                className="ant-form-item-label"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-label"
                                                  style={Object {}}
                                                >
                                                  <label
                                                    className=""
                                                    htmlFor="filters_sort"
                                                    title="Sort"
                                                  >
                                                    Sort
                                                  </label>
                                                </div>
                                              </Col>
                                            </FormItemLabel>
                                            <FormItemInput
                                              errors={Array []}
                                              label="Sort"
                                              name={
                                                Array [
                                                  "sort",
                                                ]
                                              }
                                              onDomErrorVisibleChange={[Function]}
                                              prefixCls="ant-form"
                                              status=""
                                              style={
                                                Object {
                                                  "width": "15%",
                                                }
                                              }
                                              touched={false}
                                              validateStatus=""
                                              validating={false}
                                            >
                                              <Col
                                                className="ant-form-item-control"
                                              >
                                                <div
                                                  className="ant-col ant-form-item-control"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    className="ant-form-item-control-input"
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input-content"
                                                    >
                                                      <Component
                                                        update={1}
                                                      >
                                                        <ForwardRef(InternalSelect)
                                                          id="filters_sort"
                                                          onChange={[Function]}
                                                        >
                                                          <Select
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            transitionName="slide-up"
                                                          >
                                                            <ForwardRef(Select)
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              dropdownClassName=""
                                                              id="filters_sort"
                                                              inputIcon={[Function]}
                                                              listHeight={256}
                                                              listItemHeight={24}
                                                              menuItemSelectedIcon={null}
                                                              notFoundContent={
                                                                <Context.Consumer>
                                                                  [Function]
                                                                </Context.Consumer>
                                                              }
                                                              onChange={[Function]}
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              transitionName="slide-up"
                                                            >
                                                              <div
                                                                className="ant-select ant-select-single ant-select-show-arrow"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectTrigger
                                                                  containerWidth={null}
                                                                  dropdownClassName=""
                                                                  empty={false}
                                                                  getTriggerDOMNode={[Function]}
                                                                  popupElement={
                                                                    <ForwardRef(OptionList)
                                                                      childrenAsData={true}
                                                                      defaultActiveFirstOption={true}
                                                                      flattenOptions={
                                                                        Array [
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Latest",
                                                                              "key": null,
                                                                              "value": "desc",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "desc",
                                                                          },
                                                                          Object {
                                                                            "data": Object {
                                                                              "children": "Old",
                                                                              "key": null,
                                                                              "value": "asc",
                                                                            },
                                                                            "groupOption": false,
                                                                            "key": "asc",
                                                                          },
                                                                        ]
                                                                      }
                                                                      height={256}
                                                                      id="filters_sort"
                                                                      itemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onActiveValue={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "children": "Latest",
                                                                            "key": null,
                                                                            "value": "desc",
                                                                          },
                                                                          Object {
                                                                            "children": "Old",
                                                                            "key": null,
                                                                            "value": "asc",
                                                                          },
                                                                        ]
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      searchValue=""
                                                                      values={Set {}}
                                                                      virtual={true}
                                                                    />
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  transitionName="slide-up"
                                                                >
                                                                  <Trigger
                                                                    action={Array []}
                                                                    afterPopupVisibleChange={[Function]}
                                                                    autoDestroy={false}
                                                                    blurDelay={0.15}
                                                                    builtinPlacements={
                                                                      Object {
                                                                        "bottomLeft": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tl",
                                                                            "bl",
                                                                          ],
                                                                        },
                                                                        "bottomRight": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tr",
                                                                            "br",
                                                                          ],
                                                                        },
                                                                        "topLeft": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "bl",
                                                                            "tl",
                                                                          ],
                                                                        },
                                                                        "topRight": Object {
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 0,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "br",
                                                                            "tr",
                                                                          ],
                                                                        },
                                                                      }
                                                                    }
                                                                    defaultPopupVisible={false}
                                                                    destroyPopupOnHide={false}
                                                                    focusDelay={0}
                                                                    getDocument={[Function]}
                                                                    getPopupClassNameFromAlign={[Function]}
                                                                    getTriggerDOMNode={[Function]}
                                                                    hideAction={Array []}
                                                                    mask={false}
                                                                    maskClosable={true}
                                                                    mouseEnterDelay={0}
                                                                    mouseLeaveDelay={0.1}
                                                                    onPopupAlign={[Function]}
                                                                    onPopupVisibleChange={[Function]}
                                                                    popup={
                                                                      <div>
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={
                                                                            Array [
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "Latest",
                                                                                  "key": null,
                                                                                  "value": "desc",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "desc",
                                                                              },
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "Old",
                                                                                  "key": null,
                                                                                  "value": "asc",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "asc",
                                                                              },
                                                                            ]
                                                                          }
                                                                          height={256}
                                                                          id="filters_sort"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={
                                                                            <Context.Consumer>
                                                                              [Function]
                                                                            </Context.Consumer>
                                                                          }
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "children": "Latest",
                                                                                "key": null,
                                                                                "value": "desc",
                                                                              },
                                                                              Object {
                                                                                "children": "Old",
                                                                                "key": null,
                                                                                "value": "asc",
                                                                              },
                                                                            ]
                                                                          }
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={Set {}}
                                                                          virtual={true}
                                                                        />
                                                                      </div>
                                                                    }
                                                                    popupAlign={Object {}}
                                                                    popupClassName=""
                                                                    popupPlacement="bottomLeft"
                                                                    popupStyle={
                                                                      Object {
                                                                        "minWidth": null,
                                                                        "width": null,
                                                                      }
                                                                    }
                                                                    popupTransitionName="slide-up"
                                                                    prefixCls="ant-select-dropdown"
                                                                    showAction={Array []}
                                                                  >
                                                                    <Selector
                                                                      accessibilityIndex={0}
                                                                      activeValue={null}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      domRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="ant-select-selector"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-search"
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </span>
                                                                            <span
                                                                              class="ant-select-selection-placeholder"
                                                                            />
                                                                          </div>,
                                                                        }
                                                                      }
                                                                      dropdownClassName=""
                                                                      id="filters_sort"
                                                                      inputElement={null}
                                                                      inputIcon={[Function]}
                                                                      key="trigger"
                                                                      listHeight={256}
                                                                      listItemHeight={24}
                                                                      menuItemSelectedIcon={null}
                                                                      multiple={false}
                                                                      notFoundContent={
                                                                        <Context.Consumer>
                                                                          [Function]
                                                                        </Context.Consumer>
                                                                      }
                                                                      onChange={[Function]}
                                                                      onSearch={[Function]}
                                                                      onSearchSubmit={[Function]}
                                                                      onSelect={[Function]}
                                                                      onToggleOpen={[Function]}
                                                                      prefixCls="ant-select"
                                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                                      searchValue=""
                                                                      showSearch={false}
                                                                      tokenWithEnter={false}
                                                                      transitionName="slide-up"
                                                                      values={Array []}
                                                                    >
                                                                      <div
                                                                        className="ant-select-selector"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                      >
                                                                        <SingleSelector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          className=""
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="filters_sort_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="filters_sort_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="filters_sort_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="filters_sort"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-placeholder"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          id="filters_sort"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          inputRef={
                                                                            Object {
                                                                              "current": <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autocomplete="off"
                                                                                class="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                readonly=""
                                                                                role="combobox"
                                                                                style="opacity: 0;"
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />,
                                                                            }
                                                                          }
                                                                          listHeight={256}
                                                                          listItemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={
                                                                            <Context.Consumer>
                                                                              [Function]
                                                                            </Context.Consumer>
                                                                          }
                                                                          onChange={[Function]}
                                                                          onInputChange={[Function]}
                                                                          onInputCompositionEnd={[Function]}
                                                                          onInputCompositionStart={[Function]}
                                                                          onInputKeyDown={[Function]}
                                                                          onInputMouseDown={[Function]}
                                                                          onInputPaste={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          prefixCls="ant-select"
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={false}
                                                                          tokenWithEnter={false}
                                                                          transitionName="slide-up"
                                                                          values={Array []}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-search"
                                                                          >
                                                                            <Input
                                                                              accessibilityIndex={0}
                                                                              attrs={Object {}}
                                                                              editable={false}
                                                                              id="filters_sort"
                                                                              inputElement={null}
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              prefixCls="ant-select"
                                                                              value=""
                                                                            >
                                                                              <input
                                                                                aria-activedescendant="filters_sort_list_0"
                                                                                aria-autocomplete="list"
                                                                                aria-controls="filters_sort_list"
                                                                                aria-haspopup="listbox"
                                                                                aria-owns="filters_sort_list"
                                                                                autoComplete="off"
                                                                                className="ant-select-selection-search-input"
                                                                                id="filters_sort"
                                                                                onChange={[Function]}
                                                                                onCompositionEnd={[Function]}
                                                                                onCompositionStart={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onPaste={[Function]}
                                                                                readOnly={true}
                                                                                role="combobox"
                                                                                style={
                                                                                  Object {
                                                                                    "opacity": 0,
                                                                                  }
                                                                                }
                                                                                type="search"
                                                                                unselectable="on"
                                                                                value=""
                                                                              />
                                                                            </Input>
                                                                          </span>
                                                                          <span
                                                                            className="ant-select-selection-placeholder"
                                                                          />
                                                                        </SingleSelector>
                                                                      </div>
                                                                    </Selector>
                                                                  </Trigger>
                                                                </SelectTrigger>
                                                                <TransBtn
                                                                  className="ant-select-arrow"
                                                                  customizeIcon={[Function]}
                                                                  customizeIconProps={
                                                                    Object {
                                                                      "focused": false,
                                                                      "loading": undefined,
                                                                      "open": undefined,
                                                                      "searchValue": "",
                                                                      "showSearch": false,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-hidden={true}
                                                                    className="ant-select-arrow"
                                                                    onMouseDown={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "WebkitUserSelect": "none",
                                                                        "userSelect": "none",
                                                                      }
                                                                    }
                                                                    unselectable="on"
                                                                  >
                                                                    <ForwardRef(DownOutlined)
                                                                      className="ant-select-suffix"
                                                                    >
                                                                      <AntdIcon
                                                                        className="ant-select-suffix"
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <span
                                                                          aria-label="down"
                                                                          className="anticon anticon-down ant-select-suffix"
                                                                          role="img"
                                                                        >
                                                                          <IconReact
                                                                            className=""
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className=""
                                                                              data-icon="down"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              key="svg-down"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                key="svg-down-svg-0"
                                                                              />
                                                                            </svg>
                                                                          </IconReact>
                                                                        </span>
                                                                      </AntdIcon>
                                                                    </ForwardRef(DownOutlined)>
                                                                  </span>
                                                                </TransBtn>
                                                              </div>
                                                            </ForwardRef(Select)>
                                                          </Select>
                                                        </ForwardRef(InternalSelect)>
                                                      </Component>
                                                    </div>
                                                  </div>
                                                  <ErrorList
                                                    errors={Array []}
                                                    onDomErrorVisibleChange={[Function]}
                                                  >
                                                    <CSSMotion
                                                      motionAppear={true}
                                                      motionDeadline={500}
                                                      motionName="show-help"
                                                      onLeaveEnd={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </ErrorList>
                                                </div>
                                              </Col>
                                            </FormItemInput>
                                          </div>
                                        </Row>
                                      </Field>
                                    </WrapperField>
                                  </FormItem>
                                  <FormItem>
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          prefixCls="ant-form"
                                          requiredMark={true}
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          validateStatus=""
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Button
                                                    block={false}
                                                    ghost={false}
                                                    htmlType="submit"
                                                    loading={false}
                                                    type="primary"
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-primary"
                                                        onClick={[Function]}
                                                        type="submit"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <CSSMotion
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Submit
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </FormItem>
                                </form>
                              </ForwardRef(Form)>
                            </SizeContextProvider>
                          </ForwardRef(InternalForm)>
                        </div>
                      </Item>
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        size="small"
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Table
                            bordered={true}
                            columns={
                              Array [
                                Object {
                                  "dataIndex": "name",
                                  "key": "name",
                                  "title": "Name",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "slug",
                                  "key": "slug",
                                  "title": "Slug",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "operation",
                                  "render": [Function],
                                  "title": "Action",
                                  "width": "20%",
                                },
                              ]
                            }
                            dataSource={
                              Array [
                                Object {
                                  "description": "description",
                                  "id": 1,
                                  "name": "tag",
                                  "slug": "slug",
                                },
                              ]
                            }
                            loading={false}
                            pagination={
                              Object {
                                "current": 1,
                                "onChange": [Function],
                                "pageSize": 5,
                                "total": 1,
                              }
                            }
                            rowKey="id"
                          >
                            <div
                              className="ant-table-wrapper"
                            >
                              <Spin
                                size="default"
                                spinning={false}
                                wrapperClassName=""
                              >
                                <div
                                  className="ant-spin-nested-loading"
                                >
                                  <div
                                    className="ant-spin-container"
                                    key="container"
                                  >
                                    <Table
                                      bordered={true}
                                      className="ant-table-bordered"
                                      columns={
                                        Array [
                                          Object {
                                            "dataIndex": "name",
                                            "key": "name",
                                            "title": "Name",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "slug",
                                            "key": "slug",
                                            "title": "Slug",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "operation",
                                            "render": [Function],
                                            "title": "Action",
                                            "width": "20%",
                                          },
                                        ]
                                      }
                                      data={
                                        Array [
                                          Object {
                                            "description": "description",
                                            "id": 1,
                                            "name": "tag",
                                            "slug": "slug",
                                          },
                                        ]
                                      }
                                      dataSource={
                                        Array [
                                          Object {
                                            "description": "description",
                                            "id": 1,
                                            "name": "tag",
                                            "slug": "slug",
                                          },
                                        ]
                                      }
                                      emptyText={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      expandable={
                                        Object {
                                          "__PARENT_RENDER_ICON__": undefined,
                                          "childrenColumnName": undefined,
                                          "expandIcon": [Function],
                                          "expandIconColumnIndex": undefined,
                                          "indentSize": 15,
                                        }
                                      }
                                      internalHooks="rc-table-internal-hook"
                                      internalRefs={
                                        Object {
                                          "body": Object {
                                            "current": <div
                                              class="ant-table-content"
                                            >
                                              <table
                                                style="table-layout: auto;"
                                              >
                                                <colgroup>
                                                  <col
                                                    style="width: 15%; min-width: 15%;"
                                                  />
                                                  <col
                                                    style="width: 15%; min-width: 15%;"
                                                  />
                                                  <col
                                                    style="width: 20%; min-width: 20%;"
                                                  />
                                                </colgroup>
                                                <thead
                                                  class="ant-table-thead"
                                                >
                                                  <tr>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Name
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Slug
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Action
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  class="ant-table-tbody"
                                                >
                                                  <tr
                                                    class="ant-table-row ant-table-row-level-0"
                                                    data-row-key="1"
                                                  >
                                                    <td
                                                      class="ant-table-cell"
                                                    >
                                                      tag
                                                    </td>
                                                    <td
                                                      class="ant-table-cell"
                                                    >
                                                      slug
                                                    </td>
                                                    <td
                                                      class="ant-table-cell"
                                                    >
                                                      <span>
                                                        <a
                                                          class="ant-dropdown-link"
                                                          href="/tags/1/edit"
                                                          style="margin-right: 8px;"
                                                        >
                                                          <button
                                                            class="ant-btn"
                                                            disabled=""
                                                            type="button"
                                                          >
                                                            <span>
                                                              Edit
                                                            </span>
                                                          </button>
                                                        </a>
                                                        <a
                                                          class="ant-dropdown-link"
                                                          href="/"
                                                        >
                                                          <button
                                                            class="ant-btn"
                                                            disabled=""
                                                            type="button"
                                                          >
                                                            <span>
                                                              Delete
                                                            </span>
                                                          </button>
                                                        </a>
                                                      </span>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>,
                                          },
                                        }
                                      }
                                      loading={false}
                                      pagination={
                                        Object {
                                          "current": 1,
                                          "onChange": [Function],
                                          "pageSize": 5,
                                          "total": 1,
                                        }
                                      }
                                      prefixCls="ant-table"
                                      rowClassName={[Function]}
                                      rowKey={[Function]}
                                      transformColumns={[Function]}
                                    >
                                      <div
                                        className="ant-table ant-table-bordered"
                                      >
                                        <Component
                                          pingLeft={false}
                                          pingRight={false}
                                          props={
                                            Object {
                                              "bordered": true,
                                              "className": "ant-table-bordered",
                                              "columns": Array [
                                                Object {
                                                  "dataIndex": "name",
                                                  "key": "name",
                                                  "title": "Name",
                                                  "width": "15%",
                                                },
                                                Object {
                                                  "dataIndex": "slug",
                                                  "key": "slug",
                                                  "title": "Slug",
                                                  "width": "15%",
                                                },
                                                Object {
                                                  "dataIndex": "operation",
                                                  "render": [Function],
                                                  "title": "Action",
                                                  "width": "20%",
                                                },
                                              ],
                                              "data": Array [
                                                Object {
                                                  "description": "description",
                                                  "id": 1,
                                                  "name": "tag",
                                                  "slug": "slug",
                                                },
                                              ],
                                              "dataSource": Array [
                                                Object {
                                                  "description": "description",
                                                  "id": 1,
                                                  "name": "tag",
                                                  "slug": "slug",
                                                },
                                              ],
                                              "direction": undefined,
                                              "emptyText": <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>,
                                              "expandable": Object {
                                                "__PARENT_RENDER_ICON__": undefined,
                                                "childrenColumnName": undefined,
                                                "expandIcon": [Function],
                                                "expandIconColumnIndex": undefined,
                                                "indentSize": 15,
                                              },
                                              "internalHooks": "rc-table-internal-hook",
                                              "internalRefs": Object {
                                                "body": Object {
                                                  "current": <div
                                                    class="ant-table-content"
                                                  >
                                                    <table
                                                      style="table-layout: auto;"
                                                    >
                                                      <colgroup>
                                                        <col
                                                          style="width: 15%; min-width: 15%;"
                                                        />
                                                        <col
                                                          style="width: 15%; min-width: 15%;"
                                                        />
                                                        <col
                                                          style="width: 20%; min-width: 20%;"
                                                        />
                                                      </colgroup>
                                                      <thead
                                                        class="ant-table-thead"
                                                      >
                                                        <tr>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Name
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Slug
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Action
                                                          </th>
                                                        </tr>
                                                      </thead>
                                                      <tbody
                                                        class="ant-table-tbody"
                                                      >
                                                        <tr
                                                          class="ant-table-row ant-table-row-level-0"
                                                          data-row-key="1"
                                                        >
                                                          <td
                                                            class="ant-table-cell"
                                                          >
                                                            tag
                                                          </td>
                                                          <td
                                                            class="ant-table-cell"
                                                          >
                                                            slug
                                                          </td>
                                                          <td
                                                            class="ant-table-cell"
                                                          >
                                                            <span>
                                                              <a
                                                                class="ant-dropdown-link"
                                                                href="/tags/1/edit"
                                                                style="margin-right: 8px;"
                                                              >
                                                                <button
                                                                  class="ant-btn"
                                                                  disabled=""
                                                                  type="button"
                                                                >
                                                                  <span>
                                                                    Edit
                                                                  </span>
                                                                </button>
                                                              </a>
                                                              <a
                                                                class="ant-dropdown-link"
                                                                href="/"
                                                              >
                                                                <button
                                                                  class="ant-btn"
                                                                  disabled=""
                                                                  type="button"
                                                                >
                                                                  <span>
                                                                    Delete
                                                                  </span>
                                                                </button>
                                                              </a>
                                                            </span>
                                                          </td>
                                                        </tr>
                                                      </tbody>
                                                    </table>
                                                  </div>,
                                                },
                                              },
                                              "loading": false,
                                              "mergedExpandedKeys": Set {},
                                              "pagination": Object {
                                                "current": 1,
                                                "onChange": [Function],
                                                "pageSize": 5,
                                                "total": 1,
                                              },
                                              "prefixCls": "ant-table",
                                              "rowClassName": [Function],
                                              "rowKey": [Function],
                                              "stickyOffsets": Object {
                                                "left": Array [
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                                "right": Array [
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "transformColumns": [Function],
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-table-container"
                                          >
                                            <div
                                              className="ant-table-content"
                                              onScroll={[Function]}
                                              style={Object {}}
                                            >
                                              <table
                                                style={
                                                  Object {
                                                    "tableLayout": "auto",
                                                  }
                                                }
                                              >
                                                <ColGroup
                                                  colWidths={
                                                    Array [
                                                      "15%",
                                                      "15%",
                                                      "20%",
                                                    ]
                                                  }
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "name",
                                                        "fixed": undefined,
                                                        "key": "name",
                                                        "title": "Name",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "slug",
                                                        "fixed": undefined,
                                                        "key": "slug",
                                                        "title": "Slug",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <colgroup>
                                                    <col
                                                      key="0"
                                                      style={
                                                        Object {
                                                          "minWidth": "15%",
                                                          "width": "15%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="1"
                                                      style={
                                                        Object {
                                                          "minWidth": "15%",
                                                          "width": "15%",
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="2"
                                                      style={
                                                        Object {
                                                          "minWidth": "20%",
                                                          "width": "20%",
                                                        }
                                                      }
                                                    />
                                                  </colgroup>
                                                </ColGroup>
                                                <Header
                                                  colWidths={
                                                    Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ]
                                                  }
                                                  columCount={3}
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "name",
                                                        "key": "name",
                                                        "title": "Name",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "slug",
                                                        "key": "slug",
                                                        "title": "Slug",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                  flattenColumns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "name",
                                                        "fixed": undefined,
                                                        "key": "name",
                                                        "title": "Name",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "slug",
                                                        "fixed": undefined,
                                                        "key": "slug",
                                                        "title": "Slug",
                                                        "width": "15%",
                                                      },
                                                      Object {
                                                        "dataIndex": "operation",
                                                        "fixed": undefined,
                                                        "render": [Function],
                                                        "title": "Action",
                                                        "width": "20%",
                                                      },
                                                    ]
                                                  }
                                                  stickyOffsets={
                                                    Object {
                                                      "left": Array [
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                      "right": Array [
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="ant-table-thead"
                                                  >
                                                    <HeaderRow
                                                      cellComponent="th"
                                                      cells={
                                                        Array [
                                                          Object {
                                                            "children": "Name",
                                                            "className": "",
                                                            "colEnd": 0,
                                                            "colSpan": 1,
                                                            "colStart": 0,
                                                            "column": Object {
                                                              "dataIndex": "name",
                                                              "key": "name",
                                                              "title": "Name",
                                                              "width": "15%",
                                                            },
                                                            "key": "name",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Slug",
                                                            "className": "",
                                                            "colEnd": 1,
                                                            "colSpan": 1,
                                                            "colStart": 1,
                                                            "column": Object {
                                                              "dataIndex": "slug",
                                                              "key": "slug",
                                                              "title": "Slug",
                                                              "width": "15%",
                                                            },
                                                            "key": "slug",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Action",
                                                            "className": "",
                                                            "colEnd": 2,
                                                            "colSpan": 1,
                                                            "colStart": 2,
                                                            "column": Object {
                                                              "dataIndex": "operation",
                                                              "render": [Function],
                                                              "title": "Action",
                                                              "width": "20%",
                                                            },
                                                            "key": undefined,
                                                            "rowSpan": 1,
                                                          },
                                                        ]
                                                      }
                                                      flattenColumns={
                                                        Array [
                                                          Object {
                                                            "dataIndex": "name",
                                                            "fixed": undefined,
                                                            "key": "name",
                                                            "title": "Name",
                                                            "width": "15%",
                                                          },
                                                          Object {
                                                            "dataIndex": "slug",
                                                            "fixed": undefined,
                                                            "key": "slug",
                                                            "title": "Slug",
                                                            "width": "15%",
                                                          },
                                                          Object {
                                                            "dataIndex": "operation",
                                                            "fixed": undefined,
                                                            "render": [Function],
                                                            "title": "Action",
                                                            "width": "20%",
                                                          },
                                                        ]
                                                      }
                                                      index={0}
                                                      key="0"
                                                      rowComponent="tr"
                                                      stickyOffsets={
                                                        Object {
                                                          "left": Array [
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                          "right": Array [
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <tr>
                                                        <Cell
                                                          className=""
                                                          colEnd={0}
                                                          colSpan={1}
                                                          colStart={0}
                                                          column={
                                                            Object {
                                                              "dataIndex": "name",
                                                              "key": "name",
                                                              "title": "Name",
                                                              "width": "15%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="name"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Name
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={1}
                                                          colSpan={1}
                                                          colStart={1}
                                                          column={
                                                            Object {
                                                              "dataIndex": "slug",
                                                              "key": "slug",
                                                              "title": "Slug",
                                                              "width": "15%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="slug"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Slug
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={2}
                                                          colSpan={1}
                                                          colStart={2}
                                                          column={
                                                            Object {
                                                              "dataIndex": "operation",
                                                              "render": [Function],
                                                              "title": "Action",
                                                              "width": "20%",
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="operation"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Action
                                                          </th>
                                                        </Cell>
                                                      </tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </Header>
                                                <Body
                                                  childrenColumnName="children"
                                                  data={
                                                    Array [
                                                      Object {
                                                        "description": "description",
                                                        "id": 1,
                                                        "name": "tag",
                                                        "slug": "slug",
                                                      },
                                                    ]
                                                  }
                                                  emptyNode={null}
                                                  expandedKeys={Set {}}
                                                  getRowKey={[Function]}
                                                  measureColumnWidth={false}
                                                >
                                                  <tbody
                                                    className="ant-table-tbody"
                                                  >
                                                    <BodyRow
                                                      cellComponent="td"
                                                      childrenColumnName="children"
                                                      expandedKeys={Set {}}
                                                      getRowKey={[Function]}
                                                      index={0}
                                                      key="1"
                                                      record={
                                                        Object {
                                                          "description": "description",
                                                          "id": 1,
                                                          "name": "tag",
                                                          "slug": "slug",
                                                        }
                                                      }
                                                      recordKey={1}
                                                      rowComponent="tr"
                                                      rowKey={1}
                                                    >
                                                      <tr
                                                        className="ant-table-row ant-table-row-level-0"
                                                        data-row-key={1}
                                                        onClick={[Function]}
                                                        style={Object {}}
                                                      >
                                                        <Cell
                                                          component="td"
                                                          dataIndex="name"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          index={0}
                                                          key="name"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          record={
                                                            Object {
                                                              "description": "description",
                                                              "id": 1,
                                                              "name": "tag",
                                                              "slug": "slug",
                                                            }
                                                          }
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            tag
                                                          </td>
                                                        </Cell>
                                                        <Cell
                                                          component="td"
                                                          dataIndex="slug"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          index={0}
                                                          key="slug"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          record={
                                                            Object {
                                                              "description": "description",
                                                              "id": 1,
                                                              "name": "tag",
                                                              "slug": "slug",
                                                            }
                                                          }
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            slug
                                                          </td>
                                                        </Cell>
                                                        <Cell
                                                          component="td"
                                                          dataIndex="operation"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          index={0}
                                                          key="operation"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          record={
                                                            Object {
                                                              "description": "description",
                                                              "id": 1,
                                                              "name": "tag",
                                                              "slug": "slug",
                                                            }
                                                          }
                                                          render={[Function]}
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            <span>
                                                              <Link
                                                                className="ant-dropdown-link"
                                                                style={
                                                                  Object {
                                                                    "marginRight": 8,
                                                                  }
                                                                }
                                                                to="/tags/1/edit"
                                                              >
                                                                <LinkAnchor
                                                                  className="ant-dropdown-link"
                                                                  href="/tags/1/edit"
                                                                  navigate={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "marginRight": 8,
                                                                    }
                                                                  }
                                                                >
                                                                  <a
                                                                    className="ant-dropdown-link"
                                                                    href="/tags/1/edit"
                                                                    onClick={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "marginRight": 8,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Button
                                                                      block={false}
                                                                      disabled={true}
                                                                      ghost={false}
                                                                      htmlType="button"
                                                                      loading={false}
                                                                    >
                                                                      <Wave>
                                                                        <button
                                                                          className="ant-btn"
                                                                          disabled={true}
                                                                          onClick={[Function]}
                                                                          type="button"
                                                                        >
                                                                          <LoadingIcon
                                                                            existIcon={false}
                                                                            loading={false}
                                                                            prefixCls="ant-btn"
                                                                          >
                                                                            <CSSMotion
                                                                              motionName="ant-btn-loading-icon-motion"
                                                                              onAppearActive={[Function]}
                                                                              onAppearStart={[Function]}
                                                                              onEnterActive={[Function]}
                                                                              onEnterStart={[Function]}
                                                                              onLeaveActive={[Function]}
                                                                              onLeaveStart={[Function]}
                                                                              removeOnLeave={true}
                                                                              visible={false}
                                                                            >
                                                                              <DomWrapper />
                                                                            </CSSMotion>
                                                                          </LoadingIcon>
                                                                          <span
                                                                            key=".0"
                                                                          >
                                                                            Edit
                                                                          </span>
                                                                        </button>
                                                                      </Wave>
                                                                    </Button>
                                                                  </a>
                                                                </LinkAnchor>
                                                              </Link>
                                                              <ForwardRef
                                                                disabled={false}
                                                                icon={<ForwardRef(ExclamationCircleFilled) />}
                                                                okType="primary"
                                                                onConfirm={[Function]}
                                                                placement="top"
                                                                title="Sure to Delete?"
                                                                transitionName="zoom-big"
                                                                trigger="click"
                                                              >
                                                                <Tooltip
                                                                  arrowPointAtCenter={false}
                                                                  autoAdjustOverflow={true}
                                                                  disabled={false}
                                                                  icon={<ForwardRef(ExclamationCircleFilled) />}
                                                                  mouseEnterDelay={0.1}
                                                                  mouseLeaveDelay={0.1}
                                                                  okType="primary"
                                                                  onConfirm={[Function]}
                                                                  onVisibleChange={[Function]}
                                                                  overlay={
                                                                    <LocaleReceiver
                                                                      componentName="Popconfirm"
                                                                      defaultLocale={
                                                                        Object {
                                                                          "cancelText": "Cancel",
                                                                          "okText": "OK",
                                                                        }
                                                                      }
                                                                    >
                                                                      [Function]
                                                                    </LocaleReceiver>
                                                                  }
                                                                  overlayClassName="ant-popconfirm"
                                                                  placement="top"
                                                                  prefixCls="ant-popover"
                                                                  title="Sure to Delete?"
                                                                  transitionName="zoom-big"
                                                                  trigger="click"
                                                                >
                                                                  <ForwardRef(Tooltip)
                                                                    arrowContent={
                                                                      <span
                                                                        className="ant-popover-arrow-content"
                                                                      />
                                                                    }
                                                                    arrowPointAtCenter={false}
                                                                    autoAdjustOverflow={true}
                                                                    builtinPlacements={
                                                                      Object {
                                                                        "bottom": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tc",
                                                                            "bc",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "bottomLeft": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tl",
                                                                            "bl",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "bottomRight": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            0,
                                                                            4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tr",
                                                                            "br",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "left": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            -4,
                                                                            0,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "cr",
                                                                            "cl",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "leftBottom": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            -4,
                                                                            0,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "br",
                                                                            "bl",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "leftTop": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            -4,
                                                                            0,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tr",
                                                                            "tl",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "right": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            4,
                                                                            0,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "cl",
                                                                            "cr",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "rightBottom": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            4,
                                                                            0,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "bl",
                                                                            "br",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "rightTop": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            4,
                                                                            0,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "tl",
                                                                            "tr",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "top": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "bc",
                                                                            "tc",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "topLeft": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "bl",
                                                                            "tl",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                        "topRight": Object {
                                                                          "ignoreShake": true,
                                                                          "offset": Array [
                                                                            0,
                                                                            -4,
                                                                          ],
                                                                          "overflow": Object {
                                                                            "adjustX": 1,
                                                                            "adjustY": 1,
                                                                          },
                                                                          "points": Array [
                                                                            "br",
                                                                            "tr",
                                                                          ],
                                                                          "targetOffset": Array [
                                                                            0,
                                                                            0,
                                                                          ],
                                                                        },
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    icon={<ForwardRef(ExclamationCircleFilled) />}
                                                                    mouseEnterDelay={0.1}
                                                                    mouseLeaveDelay={0.1}
                                                                    okType="primary"
                                                                    onConfirm={[Function]}
                                                                    onPopupAlign={[Function]}
                                                                    onVisibleChange={[Function]}
                                                                    overlay={
                                                                      <LocaleReceiver
                                                                        componentName="Popconfirm"
                                                                        defaultLocale={
                                                                          Object {
                                                                            "cancelText": "Cancel",
                                                                            "okText": "OK",
                                                                          }
                                                                        }
                                                                      >
                                                                        [Function]
                                                                      </LocaleReceiver>
                                                                    }
                                                                    overlayClassName="ant-popconfirm"
                                                                    placement="top"
                                                                    prefixCls="ant-popover"
                                                                    title="Sure to Delete?"
                                                                    transitionName="zoom-big"
                                                                    trigger="click"
                                                                  >
                                                                    <Trigger
                                                                      action="click"
                                                                      afterPopupVisibleChange={[Function]}
                                                                      arrowContent={
                                                                        <span
                                                                          className="ant-popover-arrow-content"
                                                                        />
                                                                      }
                                                                      arrowPointAtCenter={false}
                                                                      autoAdjustOverflow={true}
                                                                      autoDestroy={false}
                                                                      blurDelay={0.15}
                                                                      builtinPlacements={
                                                                        Object {
                                                                          "bottom": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tc",
                                                                              "bc",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "bottomLeft": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tl",
                                                                              "bl",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "bottomRight": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              0,
                                                                              4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tr",
                                                                              "br",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "left": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              -4,
                                                                              0,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "cr",
                                                                              "cl",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "leftBottom": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              -4,
                                                                              0,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "br",
                                                                              "bl",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "leftTop": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              -4,
                                                                              0,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tr",
                                                                              "tl",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "right": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              4,
                                                                              0,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "cl",
                                                                              "cr",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "rightBottom": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              4,
                                                                              0,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "bl",
                                                                              "br",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "rightTop": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              4,
                                                                              0,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "tl",
                                                                              "tr",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "top": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "bc",
                                                                              "tc",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "topLeft": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "bl",
                                                                              "tl",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                          "topRight": Object {
                                                                            "ignoreShake": true,
                                                                            "offset": Array [
                                                                              0,
                                                                              -4,
                                                                            ],
                                                                            "overflow": Object {
                                                                              "adjustX": 1,
                                                                              "adjustY": 1,
                                                                            },
                                                                            "points": Array [
                                                                              "br",
                                                                              "tr",
                                                                            ],
                                                                            "targetOffset": Array [
                                                                              0,
                                                                              0,
                                                                            ],
                                                                          },
                                                                        }
                                                                      }
                                                                      defaultPopupVisible={false}
                                                                      destroyPopupOnHide={false}
                                                                      disabled={false}
                                                                      focusDelay={0}
                                                                      getDocument={[Function]}
                                                                      getPopupClassNameFromAlign={[Function]}
                                                                      hideAction={Array []}
                                                                      icon={<ForwardRef(ExclamationCircleFilled) />}
                                                                      mask={false}
                                                                      maskClosable={true}
                                                                      mouseEnterDelay={0.1}
                                                                      mouseLeaveDelay={0.1}
                                                                      okType="primary"
                                                                      onConfirm={[Function]}
                                                                      onPopupAlign={[Function]}
                                                                      onPopupVisibleChange={[Function]}
                                                                      overlay={
                                                                        <LocaleReceiver
                                                                          componentName="Popconfirm"
                                                                          defaultLocale={
                                                                            Object {
                                                                              "cancelText": "Cancel",
                                                                              "okText": "OK",
                                                                            }
                                                                          }
                                                                        >
                                                                          [Function]
                                                                        </LocaleReceiver>
                                                                      }
                                                                      popup={[Function]}
                                                                      popupAlign={Object {}}
                                                                      popupClassName="ant-popconfirm"
                                                                      popupPlacement="top"
                                                                      popupStyle={Object {}}
                                                                      popupTransitionName="zoom-big"
                                                                      prefixCls="ant-popover"
                                                                      showAction={Array []}
                                                                      title="Sure to Delete?"
                                                                    >
                                                                      <Link
                                                                        className="ant-dropdown-link"
                                                                        key="trigger"
                                                                        onClick={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        to=""
                                                                      >
                                                                        <LinkAnchor
                                                                          className="ant-dropdown-link"
                                                                          href="/"
                                                                          navigate={[Function]}
                                                                          onClick={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onTouchStart={[Function]}
                                                                        >
                                                                          <a
                                                                            className="ant-dropdown-link"
                                                                            href="/"
                                                                            onClick={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onTouchStart={[Function]}
                                                                          >
                                                                            <Button
                                                                              block={false}
                                                                              disabled={true}
                                                                              ghost={false}
                                                                              htmlType="button"
                                                                              loading={false}
                                                                            >
                                                                              <Wave>
                                                                                <button
                                                                                  className="ant-btn"
                                                                                  disabled={true}
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <LoadingIcon
                                                                                    existIcon={false}
                                                                                    loading={false}
                                                                                    prefixCls="ant-btn"
                                                                                  >
                                                                                    <CSSMotion
                                                                                      motionName="ant-btn-loading-icon-motion"
                                                                                      onAppearActive={[Function]}
                                                                                      onAppearStart={[Function]}
                                                                                      onEnterActive={[Function]}
                                                                                      onEnterStart={[Function]}
                                                                                      onLeaveActive={[Function]}
                                                                                      onLeaveStart={[Function]}
                                                                                      removeOnLeave={true}
                                                                                      visible={false}
                                                                                    >
                                                                                      <DomWrapper />
                                                                                    </CSSMotion>
                                                                                  </LoadingIcon>
                                                                                  <span
                                                                                    key=".0"
                                                                                  >
                                                                                    Delete
                                                                                  </span>
                                                                                </button>
                                                                              </Wave>
                                                                            </Button>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </Trigger>
                                                                  </ForwardRef(Tooltip)>
                                                                </Tooltip>
                                                              </ForwardRef>
                                                            </span>
                                                          </td>
                                                        </Cell>
                                                      </tr>
                                                    </BodyRow>
                                                  </tbody>
                                                </Body>
                                              </table>
                                            </div>
                                          </div>
                                        </Component>
                                      </div>
                                    </Table>
                                    <Pagination
                                      className="ant-table-pagination ant-table-pagination-right"
                                      current={1}
                                      onChange={[Function]}
                                      pageSize={5}
                                      total={1}
                                    >
                                      <LocaleReceiver
                                        componentName="Pagination"
                                        defaultLocale={
                                          Object {
                                            "items_per_page": "/ page",
                                            "jump_to": "Go to",
                                            "jump_to_confirm": "confirm",
                                            "next_3": "Next 3 Pages",
                                            "next_5": "Next 5 Pages",
                                            "next_page": "Next Page",
                                            "page": "",
                                            "prev_3": "Previous 3 Pages",
                                            "prev_5": "Previous 5 Pages",
                                            "prev_page": "Previous Page",
                                          }
                                        }
                                      >
                                        <Pagination
                                          className="ant-table-pagination ant-table-pagination-right"
                                          current={1}
                                          defaultCurrent={1}
                                          defaultPageSize={10}
                                          hideOnSinglePage={false}
                                          itemRender={[Function]}
                                          jumpNextIcon={
                                            <a
                                              className="ant-pagination-item-link"
                                            >
                                              <div
                                                className="ant-pagination-item-container"
                                              >
                                                <ForwardRef(DoubleRightOutlined)
                                                  className="ant-pagination-item-link-icon"
                                                />
                                                <span
                                                  className="ant-pagination-item-ellipsis"
                                                >
                                                  •••
                                                </span>
                                              </div>
                                            </a>
                                          }
                                          jumpPrevIcon={
                                            <a
                                              className="ant-pagination-item-link"
                                            >
                                              <div
                                                className="ant-pagination-item-container"
                                              >
                                                <ForwardRef(DoubleLeftOutlined)
                                                  className="ant-pagination-item-link-icon"
                                                />
                                                <span
                                                  className="ant-pagination-item-ellipsis"
                                                >
                                                  •••
                                                </span>
                                              </div>
                                            </a>
                                          }
                                          locale={
                                            Object {
                                              "items_per_page": "/ page",
                                              "jump_to": "Go to",
                                              "jump_to_confirm": "confirm",
                                              "next_3": "Next 3 Pages",
                                              "next_5": "Next 5 Pages",
                                              "next_page": "Next Page",
                                              "page": "",
                                              "prev_3": "Previous 3 Pages",
                                              "prev_5": "Previous 5 Pages",
                                              "prev_page": "Previous Page",
                                            }
                                          }
                                          nextIcon={
                                            <button
                                              className="ant-pagination-item-link"
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <ForwardRef(RightOutlined) />
                                            </button>
                                          }
                                          onChange={[Function]}
                                          onShowSizeChange={[Function]}
                                          pageSize={5}
                                          prefixCls="ant-pagination"
                                          prevIcon={
                                            <button
                                              className="ant-pagination-item-link"
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <ForwardRef(LeftOutlined) />
                                            </button>
                                          }
                                          selectComponentClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "OptGroup": [Function],
                                              "Option": [Function],
                                              "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                              "render": [Function],
                                            }
                                          }
                                          selectPrefixCls="ant-select"
                                          showLessItems={false}
                                          showPrevNextJumpers={true}
                                          showQuickJumper={false}
                                          showTitle={true}
                                          style={Object {}}
                                          total={1}
                                          totalBoundaryShowSizeChanger={50}
                                        >
                                          <ul
                                            className="ant-pagination ant-table-pagination ant-table-pagination-right"
                                            style={Object {}}
                                            unselectable="unselectable"
                                          >
                                            <li
                                              aria-disabled={true}
                                              className="ant-pagination-prev ant-pagination-disabled"
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              tabIndex={null}
                                              title="Previous Page"
                                            >
                                              <button
                                                className="ant-pagination-item-link"
                                                disabled={true}
                                                tabIndex={-1}
                                                type="button"
                                              >
                                                <ForwardRef(LeftOutlined)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "left",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="left"
                                                      className="anticon anticon-left"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "left",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="left"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-left"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                                                            key="svg-left-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(LeftOutlined)>
                                              </button>
                                            </li>
                                            <Pager
                                              active={true}
                                              itemRender={[Function]}
                                              key="1"
                                              locale={
                                                Object {
                                                  "items_per_page": "/ page",
                                                  "jump_to": "Go to",
                                                  "jump_to_confirm": "confirm",
                                                  "next_3": "Next 3 Pages",
                                                  "next_5": "Next 5 Pages",
                                                  "next_page": "Next Page",
                                                  "page": "",
                                                  "prev_3": "Previous 3 Pages",
                                                  "prev_5": "Previous 5 Pages",
                                                  "prev_page": "Previous Page",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              page={1}
                                              rootPrefixCls="ant-pagination"
                                              showTitle={true}
                                            >
                                              <li
                                                className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
                                                onClick={[Function]}
                                                onKeyPress={[Function]}
                                                tabIndex="0"
                                                title={1}
                                              >
                                                <a
                                                  rel="nofollow"
                                                >
                                                  1
                                                </a>
                                              </li>
                                            </Pager>
                                            <li
                                              aria-disabled={true}
                                              className="ant-pagination-next ant-pagination-disabled"
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              tabIndex={null}
                                              title="Next Page"
                                            >
                                              <button
                                                className="ant-pagination-item-link"
                                                disabled={true}
                                                tabIndex={-1}
                                                type="button"
                                              >
                                                <ForwardRef(RightOutlined)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "right",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="right"
                                                      className="anticon anticon-right"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "right",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="right"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-right"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                                            key="svg-right-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(RightOutlined)>
                                              </button>
                                            </li>
                                            <Options
                                              changeSize={null}
                                              current={1}
                                              goButton={false}
                                              locale={
                                                Object {
                                                  "items_per_page": "/ page",
                                                  "jump_to": "Go to",
                                                  "jump_to_confirm": "confirm",
                                                  "next_3": "Next 3 Pages",
                                                  "next_5": "Next 5 Pages",
                                                  "next_page": "Next Page",
                                                  "page": "",
                                                  "prev_3": "Previous 3 Pages",
                                                  "prev_5": "Previous 5 Pages",
                                                  "prev_page": "Previous Page",
                                                }
                                              }
                                              pageSize={5}
                                              pageSizeOptions={
                                                Array [
                                                  "10",
                                                  "20",
                                                  "50",
                                                  "100",
                                                ]
                                              }
                                              quickGo={null}
                                              rootPrefixCls="ant-pagination"
                                              selectComponentClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "OptGroup": [Function],
                                                  "Option": [Function],
                                                  "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                                  "render": [Function],
                                                }
                                              }
                                              selectPrefixCls="ant-select"
                                            />
                                          </ul>
                                        </Pagination>
                                      </LocaleReceiver>
                                    </Pagination>
                                  </div>
                                </div>
                              </Spin>
                            </div>
                          </Table>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </TagList>
              </div>
            </Item>
          </div>
        </Space>
      </Tags>
    </Router>
  </BrowserRouter>
</Provider>
`;
