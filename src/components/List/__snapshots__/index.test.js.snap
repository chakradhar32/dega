// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List component snapshot testing should match when component loading 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <PostList
        actions={
          Array [
            "update",
            "delete",
          ]
        }
        format={
          Object {
            "id": 1,
            "name": "article",
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Template
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                    }
                  }
                >
                  <Spin
                    size="default"
                    spinning={true}
                    style={
                      Object {
                        "marginLeft": "50%",
                      }
                    }
                    wrapperClassName=""
                  >
                    <div
                      className="ant-spin ant-spin-spinning"
                      style={
                        Object {
                          "marginLeft": "50%",
                        }
                      }
                    >
                      <span
                        className="ant-spin-dot ant-spin-dot-spin"
                      >
                        <i
                          className="ant-spin-dot-item"
                        />
                        <i
                          className="ant-spin-dot-item"
                        />
                        <i
                          className="ant-spin-dot-item"
                        />
                        <i
                          className="ant-spin-dot-item"
                        />
                      </span>
                    </div>
                  </Spin>
                </Template>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <ForwardRef(InternalForm)
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  initialValues={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 20,
                      "page": 1,
                    }
                  }
                  layout="inline"
                  name="filters"
                  onFinish={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <SizeContextProvider>
                    <ForwardRef(Form)
                      className="ant-form ant-form-inline"
                      form={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": "filters",
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                        }
                      }
                      id="filters"
                      initialValues={
                        Object {
                          "format": Array [
                            1,
                          ],
                          "limit": 20,
                          "page": 1,
                        }
                      }
                      name="filters"
                      onFinish={[Function]}
                      onFinishFailed={[Function]}
                      style={
                        Object {
                          "maxWidth": "100%",
                        }
                      }
                    >
                      <form
                        className="ant-form ant-form-inline"
                        id="filters"
                        onSubmit={[Function]}
                        style={
                          Object {
                            "maxWidth": "100%",
                          }
                        }
                      >
                        <FormItem
                          label="Search"
                          name="q"
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                        >
                          <WrapperField
                            label="Search"
                            messageVariables={
                              Object {
                                "label": "Search",
                              }
                            }
                            name="q"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_q"
                              label="Search"
                              messageVariables={
                                Object {
                                  "label": "Search",
                                }
                              }
                              name={
                                Array [
                                  "q",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "25%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_q"
                                    label="Search"
                                    name="q"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_q"
                                          title="Search"
                                        >
                                          Search
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Search"
                                    name={
                                      Array [
                                        "q",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Input
                                                id="filters_q"
                                                onChange={[Function]}
                                                placeholder="search posts"
                                                type="text"
                                              >
                                                <ClearableLabeledInput
                                                  bordered={true}
                                                  element={
                                                    <input
                                                      className="ant-input"
                                                      id="filters_q"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="search posts"
                                                      type="text"
                                                    />
                                                  }
                                                  focused={false}
                                                  handleReset={[Function]}
                                                  id="filters_q"
                                                  inputType="input"
                                                  onChange={[Function]}
                                                  placeholder="search posts"
                                                  prefixCls="ant-input"
                                                  triggerFocus={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="filters_q"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="search posts"
                                                    type="text"
                                                    value=""
                                                  />
                                                </ClearableLabeledInput>
                                              </Input>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Sort"
                          name="sort"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Sort"
                            messageVariables={
                              Object {
                                "label": "Sort",
                              }
                            }
                            name="sort"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_sort"
                              label="Sort"
                              messageVariables={
                                Object {
                                  "label": "Sort",
                                }
                              }
                              name={
                                Array [
                                  "sort",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_sort"
                                    label="Sort"
                                    name="sort"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_sort"
                                          title="Sort"
                                        >
                                          Sort
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Sort"
                                    name={
                                      Array [
                                        "sort",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <ForwardRef(InternalSelect)
                                                defaultValue="desc"
                                                id="filters_sort"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <Select
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue="desc"
                                                  dropdownClassName=""
                                                  id="filters_sort"
                                                  inputIcon={[Function]}
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                  transitionName="slide-up"
                                                >
                                                  <ForwardRef(Select)
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue="desc"
                                                    dropdownClassName=""
                                                    id="filters_sort"
                                                    inputIcon={[Function]}
                                                    listHeight={256}
                                                    listItemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        dropdownClassName=""
                                                        empty={false}
                                                        getTriggerDOMNode={[Function]}
                                                        popupElement={
                                                          <ForwardRef(OptionList)
                                                            childrenAsData={true}
                                                            defaultActiveFirstOption={true}
                                                            flattenOptions={
                                                              Array [
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Latest",
                                                                    "key": null,
                                                                    "value": "desc",
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "desc",
                                                                },
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Old",
                                                                    "key": null,
                                                                    "value": "asc",
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "asc",
                                                                },
                                                              ]
                                                            }
                                                            height={256}
                                                            id="filters_sort"
                                                            itemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onActiveValue={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "children": "Latest",
                                                                  "key": null,
                                                                  "value": "desc",
                                                                },
                                                                Object {
                                                                  "children": "Old",
                                                                  "key": null,
                                                                  "value": "asc",
                                                                },
                                                              ]
                                                            }
                                                            prefixCls="ant-select"
                                                            searchValue=""
                                                            values={
                                                              Set {
                                                                "desc",
                                                              }
                                                            }
                                                            virtual={true}
                                                          />
                                                        }
                                                        prefixCls="ant-select"
                                                        transitionName="slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div>
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={
                                                                  Array [
                                                                    Object {
                                                                      "data": Object {
                                                                        "children": "Latest",
                                                                        "key": null,
                                                                        "value": "desc",
                                                                      },
                                                                      "groupOption": false,
                                                                      "key": "desc",
                                                                    },
                                                                    Object {
                                                                      "data": Object {
                                                                        "children": "Old",
                                                                        "key": null,
                                                                        "value": "asc",
                                                                      },
                                                                      "groupOption": false,
                                                                      "key": "asc",
                                                                    },
                                                                  ]
                                                                }
                                                                height={256}
                                                                id="filters_sort"
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "children": "Latest",
                                                                      "key": null,
                                                                      "value": "desc",
                                                                    },
                                                                    Object {
                                                                      "children": "Old",
                                                                      "key": null,
                                                                      "value": "asc",
                                                                    },
                                                                  ]
                                                                }
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    "desc",
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName=""
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            accessibilityIndex={0}
                                                            activeValue={null}
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="desc"
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="Latest"
                                                                  >
                                                                    Latest
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "maxWidth": "160px",
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "desc",
                                                                  "label": "Latest",
                                                                  "value": "desc",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue="desc"
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_sort_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_sort_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_sort_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_sort"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                        title="Latest"
                                                                      >
                                                                        Latest
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                id="filters_sort"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                listHeight={256}
                                                                listItemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "maxWidth": "160px",
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": "desc",
                                                                      "label": "Latest",
                                                                      "value": "desc",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    accessibilityIndex={0}
                                                                    attrs={Object {}}
                                                                    editable={false}
                                                                    id="filters_sort"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-item"
                                                                  title="Latest"
                                                                >
                                                                  Latest
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </ForwardRef(Select)>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Tags"
                          name="tags"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Tags"
                            messageVariables={
                              Object {
                                "label": "Tags",
                              }
                            }
                            name="tags"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_tags"
                              label="Tags"
                              messageVariables={
                                Object {
                                  "label": "Tags",
                                }
                              }
                              name={
                                Array [
                                  "tags",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_tags"
                                    label="Tags"
                                    name="tags"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_tags"
                                          title="Tags"
                                        >
                                          Tags
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Tags"
                                    name={
                                      Array [
                                        "tags",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Selector
                                                action="Tags"
                                                id="filters_tags"
                                                mode="multiple"
                                                onChange={[Function]}
                                                placeholder="Filter Tags"
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(InternalSelect)
                                                  allowClear={true}
                                                  bordered={true}
                                                  defaultValue={Array []}
                                                  filterOption={[Function]}
                                                  listHeight={128}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  placeholder="Filter Tags"
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                >
                                                  <Select
                                                    allowClear={true}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    inputIcon={[Function]}
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Filter Tags"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <ForwardRef(Select)
                                                      allowClear={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Filter Tags"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                      transitionName="slide-up"
                                                    >
                                                      <div
                                                        className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                      >
                                                        <SelectTrigger
                                                          containerWidth={null}
                                                          dropdownClassName=""
                                                          empty={false}
                                                          getTriggerDOMNode={[Function]}
                                                          popupElement={
                                                            <ForwardRef(OptionList)
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={
                                                                Array [
                                                                  Object {
                                                                    "data": Object {
                                                                      "children": "cricket",
                                                                      "key": "tags1",
                                                                      "value": 1,
                                                                    },
                                                                    "groupOption": false,
                                                                    "key": "tags1",
                                                                  },
                                                                ]
                                                              }
                                                              height={128}
                                                              id="rc_select_TEST_OR_SSR"
                                                              itemHeight={24}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onActiveValue={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onScroll={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "children": "cricket",
                                                                    "key": "tags1",
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              prefixCls="ant-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          }
                                                          prefixCls="ant-select"
                                                          transitionName="slide-up"
                                                        >
                                                          <Trigger
                                                            action={Array []}
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottomLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            getTriggerDOMNode={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            popup={
                                                              <div>
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "cricket",
                                                                          "key": "tags1",
                                                                          "value": 1,
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "tags1",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={128}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onScroll={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "cricket",
                                                                        "key": "tags1",
                                                                        "value": 1,
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={Set {}}
                                                                  virtual={true}
                                                                />
                                                              </div>
                                                            }
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="bottomLeft"
                                                            popupStyle={
                                                              Object {
                                                                "minWidth": null,
                                                                "width": null,
                                                              }
                                                            }
                                                            popupTransitionName="slide-up"
                                                            prefixCls="ant-select-dropdown"
                                                            showAction={Array []}
                                                          >
                                                            <Selector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Filter Tags
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              id="rc_select_TEST_OR_SSR"
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              key="trigger"
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Filter Tags"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              style={
                                                                Object {
                                                                  "maxWidth": "160px",
                                                                }
                                                              }
                                                              tokenWithEnter={false}
                                                              transitionName="slide-up"
                                                              values={Array []}
                                                            >
                                                              <div
                                                                className="ant-select-selector"
                                                                onClick={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectSelector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  allowClear={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={Array []}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-placeholder"
                                                                        >
                                                                          Filter Tags
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />,
                                                                    }
                                                                  }
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  mode="multiple"
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onInputChange={[Function]}
                                                                  onInputCompositionEnd={[Function]}
                                                                  onInputCompositionStart={[Function]}
                                                                  onInputKeyDown={[Function]}
                                                                  onInputMouseDown={[Function]}
                                                                  onInputPaste={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  placeholder="Filter Tags"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={true}
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "160px",
                                                                    }
                                                                  }
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  values={Array []}
                                                                >
                                                                  <CSSMotionList
                                                                    component={false}
                                                                    keys={Array []}
                                                                    motionAppear={true}
                                                                  />
                                                                  <span
                                                                    className="ant-select-selection-search"
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </span>
                                                                  <span
                                                                    className="ant-select-selection-placeholder"
                                                                  >
                                                                    Filter Tags
                                                                  </span>
                                                                </SelectSelector>
                                                              </div>
                                                            </Selector>
                                                          </Trigger>
                                                        </SelectTrigger>
                                                      </div>
                                                    </ForwardRef(Select)>
                                                  </Select>
                                                </ForwardRef(InternalSelect)>
                                              </Selector>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Categories"
                          name="categories"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Categories"
                            messageVariables={
                              Object {
                                "label": "Categories",
                              }
                            }
                            name="categories"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_categories"
                              label="Categories"
                              messageVariables={
                                Object {
                                  "label": "Categories",
                                }
                              }
                              name={
                                Array [
                                  "categories",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_categories"
                                    label="Categories"
                                    name="categories"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_categories"
                                          title="Categories"
                                        >
                                          Categories
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Categories"
                                    name={
                                      Array [
                                        "categories",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Selector
                                                action="Categories"
                                                id="filters_categories"
                                                mode="multiple"
                                                onChange={[Function]}
                                                placeholder="Filter Categories"
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(InternalSelect)
                                                  allowClear={true}
                                                  bordered={true}
                                                  defaultValue={Array []}
                                                  filterOption={[Function]}
                                                  listHeight={128}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  placeholder="Filter Categories"
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                >
                                                  <Select
                                                    allowClear={true}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    inputIcon={[Function]}
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Filter Categories"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <ForwardRef(Select)
                                                      allowClear={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Filter Categories"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                      transitionName="slide-up"
                                                    >
                                                      <div
                                                        className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                      >
                                                        <SelectTrigger
                                                          containerWidth={null}
                                                          dropdownClassName=""
                                                          empty={false}
                                                          getTriggerDOMNode={[Function]}
                                                          popupElement={
                                                            <ForwardRef(OptionList)
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={
                                                                Array [
                                                                  Object {
                                                                    "data": Object {
                                                                      "children": "Andhra Pradesh",
                                                                      "key": "categories1",
                                                                      "value": 1,
                                                                    },
                                                                    "groupOption": false,
                                                                    "key": "categories1",
                                                                  },
                                                                ]
                                                              }
                                                              height={128}
                                                              id="rc_select_TEST_OR_SSR"
                                                              itemHeight={24}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onActiveValue={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onScroll={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "children": "Andhra Pradesh",
                                                                    "key": "categories1",
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              prefixCls="ant-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          }
                                                          prefixCls="ant-select"
                                                          transitionName="slide-up"
                                                        >
                                                          <Trigger
                                                            action={Array []}
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottomLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            getTriggerDOMNode={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            popup={
                                                              <div>
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Andhra Pradesh",
                                                                          "key": "categories1",
                                                                          "value": 1,
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "categories1",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={128}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onScroll={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Andhra Pradesh",
                                                                        "key": "categories1",
                                                                        "value": 1,
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={Set {}}
                                                                  virtual={true}
                                                                />
                                                              </div>
                                                            }
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="bottomLeft"
                                                            popupStyle={
                                                              Object {
                                                                "minWidth": null,
                                                                "width": null,
                                                              }
                                                            }
                                                            popupTransitionName="slide-up"
                                                            prefixCls="ant-select-dropdown"
                                                            showAction={Array []}
                                                          >
                                                            <Selector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Filter Categories
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              id="rc_select_TEST_OR_SSR"
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              key="trigger"
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Filter Categories"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              style={
                                                                Object {
                                                                  "maxWidth": "160px",
                                                                }
                                                              }
                                                              tokenWithEnter={false}
                                                              transitionName="slide-up"
                                                              values={Array []}
                                                            >
                                                              <div
                                                                className="ant-select-selector"
                                                                onClick={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectSelector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  allowClear={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={Array []}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-placeholder"
                                                                        >
                                                                          Filter Categories
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />,
                                                                    }
                                                                  }
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  mode="multiple"
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onInputChange={[Function]}
                                                                  onInputCompositionEnd={[Function]}
                                                                  onInputCompositionStart={[Function]}
                                                                  onInputKeyDown={[Function]}
                                                                  onInputMouseDown={[Function]}
                                                                  onInputPaste={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  placeholder="Filter Categories"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={true}
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "160px",
                                                                    }
                                                                  }
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  values={Array []}
                                                                >
                                                                  <CSSMotionList
                                                                    component={false}
                                                                    keys={Array []}
                                                                    motionAppear={true}
                                                                  />
                                                                  <span
                                                                    className="ant-select-selection-search"
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </span>
                                                                  <span
                                                                    className="ant-select-selection-placeholder"
                                                                  >
                                                                    Filter Categories
                                                                  </span>
                                                                </SelectSelector>
                                                              </div>
                                                            </Selector>
                                                          </Trigger>
                                                        </SelectTrigger>
                                                      </div>
                                                    </ForwardRef(Select)>
                                                  </Select>
                                                </ForwardRef(InternalSelect)>
                                              </Selector>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                validateStatus=""
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          block={false}
                                          ghost={false}
                                          htmlType="submit"
                                          loading={false}
                                          type="primary"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Submit
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </form>
                    </ForwardRef(Form)>
                  </SizeContextProvider>
                </ForwardRef(InternalForm)>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={2}
              key="ant-space-item-2"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <List
                  bordered={true}
                  className="post-list"
                  dataSource={
                    Array [
                      Object {
                        "authors": Array [],
                        "categories": Array [
                          1,
                        ],
                        "claims": Array [],
                        "created_at": "2020-09-09T06:53:03.018593Z",
                        "deleted_at": null,
                        "description": Object {
                          "blocks": Array [
                            Object {
                              "data": Object {
                                "text": "The United States of America (USA) is one of the oldest modern democracies in the world. Over its existence as a democracy for nearly two and half centuries, it has developed institutions and practices which strengthen the idea of democracy. Democracy wrests the choice in the people to choose a government to preside over the administration. Hence it is imperative that the people know about the political party or the individual that they would be voting for. This knowledge includes – the ideology, stance on various issues, vision etc.&nbsp;",
                              },
                              "type": "paragraph",
                            },
                          ],
                          "time": 1599648677547,
                          "version": "2.18.0",
                        },
                        "excerpt": "One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. ",
                        "featured_medium_id": 1,
                        "format": 1,
                        "format_id": 1,
                        "id": 1,
                        "is_featured": false,
                        "is_highlighted": false,
                        "is_sticky": false,
                        "medium": Object {
                          "alt_text": "example",
                          "id": 1,
                          "url": Object {
                            "raw": "http://example.com",
                          },
                        },
                        "published_date": "0001-01-01T00:00:00Z",
                        "slug": "explainer-the-us-presidential-debates-history-format",
                        "space_id": 1,
                        "status": "Publish",
                        "subtitle": "",
                        "tags": Array [
                          1,
                        ],
                        "title": "Explainer: The US Presidential Debates – History & Format",
                        "updated_at": "2020-09-09T10:51:20.681562Z",
                      },
                    ]
                  }
                  itemLayout="vertical"
                  loading={true}
                  pagination={
                    Object {
                      "current": 1,
                      "onChange": [Function],
                      "pageSize": 20,
                      "total": 1,
                    }
                  }
                  renderItem={[Function]}
                >
                  <div
                    className="ant-list ant-list-vertical ant-list-split ant-list-bordered ant-list-loading ant-list-something-after-last-item post-list"
                  >
                    <Spin
                      size="default"
                      spinning={true}
                      wrapperClassName=""
                    >
                      <div
                        className="ant-spin-nested-loading"
                      >
                        <div
                          key="loading"
                        >
                          <div
                            className="ant-spin ant-spin-spinning"
                          >
                            <span
                              className="ant-spin-dot ant-spin-dot-spin"
                            >
                              <i
                                className="ant-spin-dot-item"
                              />
                              <i
                                className="ant-spin-dot-item"
                              />
                              <i
                                className="ant-spin-dot-item"
                              />
                              <i
                                className="ant-spin-dot-item"
                              />
                            </span>
                          </div>
                        </div>
                        <div
                          className="ant-spin-container ant-spin-blur"
                          key="container"
                        >
                          <ul
                            className="ant-list-items"
                          >
                            <Item
                              actions={
                                Array [
                                  <ForwardRef
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                    to="/fact-checks/1/edit"
                                  >
                                    <ForwardRef(InternalButton)
                                      block={false}
                                      disabled={false}
                                      ghost={false}
                                      htmlType="button"
                                      icon={<ForwardRef(EditOutlined) />}
                                      loading={false}
                                    >
                                      Edit
                                    </ForwardRef(InternalButton)>
                                  </ForwardRef>,
                                  <ForwardRef
                                    disabled={false}
                                    icon={<ForwardRef(ExclamationCircleFilled) />}
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    title="Sure to Delete?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <ForwardRef(InternalButton)
                                      block={false}
                                      disabled={false}
                                      ghost={false}
                                      htmlType="button"
                                      icon={<ForwardRef(DeleteOutlined) />}
                                      loading={false}
                                    >
                                      Delete
                                    </ForwardRef(InternalButton)>
                                  </ForwardRef>,
                                ]
                              }
                              extra={
                                <img
                                  alt="example"
                                  src=""
                                  style={
                                    Object {
                                      "height": "100%",
                                      "width": "100%",
                                    }
                                  }
                                />
                              }
                            >
                              <li
                                className="ant-list-item"
                              >
                                <div
                                  className="ant-list-item-main"
                                  key="content"
                                >
                                  <Meta
                                    description="One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. "
                                    title={
                                      <ForwardRef
                                        to="/fact-checks/1/edit"
                                      >
                                        Explainer: The US Presidential Debates – History & Format
                                      </ForwardRef>
                                    }
                                  >
                                    <div
                                      className="ant-list-item-meta"
                                    >
                                      <div
                                        className="ant-list-item-meta-content"
                                      >
                                        <h4
                                          className="ant-list-item-meta-title"
                                        >
                                          <Link
                                            to="/fact-checks/1/edit"
                                          >
                                            <LinkAnchor
                                              href="/fact-checks/1/edit"
                                              navigate={[Function]}
                                            >
                                              <a
                                                href="/fact-checks/1/edit"
                                                onClick={[Function]}
                                              >
                                                Explainer: The US Presidential Debates – History & Format
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </h4>
                                        <div
                                          className="ant-list-item-meta-description"
                                        >
                                          One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. 
                                        </div>
                                      </div>
                                    </div>
                                  </Meta>
                                  <ul
                                    className="ant-list-item-action"
                                    key="actions"
                                  >
                                    <li
                                      key="ant-list-item-action-0"
                                    >
                                      <Link
                                        style={
                                          Object {
                                            "marginRight": 8,
                                          }
                                        }
                                        to="/fact-checks/1/edit"
                                      >
                                        <LinkAnchor
                                          href="/fact-checks/1/edit"
                                          navigate={[Function]}
                                          style={
                                            Object {
                                              "marginRight": 8,
                                            }
                                          }
                                        >
                                          <a
                                            href="/fact-checks/1/edit"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "marginRight": 8,
                                              }
                                            }
                                          >
                                            <Button
                                              block={false}
                                              disabled={false}
                                              ghost={false}
                                              htmlType="button"
                                              icon={<ForwardRef(EditOutlined) />}
                                              loading={false}
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(EditOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "edit",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="edit"
                                                        className="anticon anticon-edit"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "edit",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="edit"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-edit"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                                                              key="svg-edit-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(EditOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Edit
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                      <em
                                        className="ant-list-item-action-split"
                                      />
                                    </li>
                                    <li
                                      key="ant-list-item-action-1"
                                    >
                                      <ForwardRef
                                        disabled={false}
                                        icon={<ForwardRef(ExclamationCircleFilled) />}
                                        okType="primary"
                                        onConfirm={[Function]}
                                        placement="top"
                                        title="Sure to Delete?"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Tooltip
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          disabled={false}
                                          icon={<ForwardRef(ExclamationCircleFilled) />}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          okType="primary"
                                          onConfirm={[Function]}
                                          onVisibleChange={[Function]}
                                          overlay={
                                            <LocaleReceiver
                                              componentName="Popconfirm"
                                              defaultLocale={
                                                Object {
                                                  "cancelText": "Cancel",
                                                  "okText": "OK",
                                                }
                                              }
                                            >
                                              [Function]
                                            </LocaleReceiver>
                                          }
                                          overlayClassName="ant-popconfirm"
                                          placement="top"
                                          prefixCls="ant-popover"
                                          title="Sure to Delete?"
                                          transitionName="zoom-big"
                                          trigger="click"
                                        >
                                          <ForwardRef(Tooltip)
                                            arrowContent={
                                              <span
                                                className="ant-popover-arrow-content"
                                              />
                                            }
                                            arrowPointAtCenter={false}
                                            autoAdjustOverflow={true}
                                            builtinPlacements={
                                              Object {
                                                "bottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tc",
                                                    "bc",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "bottomLeft": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "bl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "bottomRight": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "br",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "left": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "cr",
                                                    "cl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "leftBottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "bl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "leftTop": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "tl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "right": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "cl",
                                                    "cr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "rightBottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "br",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "rightTop": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "tr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "top": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bc",
                                                    "tc",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "topLeft": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "tl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "topRight": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "tr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                              }
                                            }
                                            disabled={false}
                                            icon={<ForwardRef(ExclamationCircleFilled) />}
                                            mouseEnterDelay={0.1}
                                            mouseLeaveDelay={0.1}
                                            okType="primary"
                                            onConfirm={[Function]}
                                            onPopupAlign={[Function]}
                                            onVisibleChange={[Function]}
                                            overlay={
                                              <LocaleReceiver
                                                componentName="Popconfirm"
                                                defaultLocale={
                                                  Object {
                                                    "cancelText": "Cancel",
                                                    "okText": "OK",
                                                  }
                                                }
                                              >
                                                [Function]
                                              </LocaleReceiver>
                                            }
                                            overlayClassName="ant-popconfirm"
                                            placement="top"
                                            prefixCls="ant-popover"
                                            title="Sure to Delete?"
                                            transitionName="zoom-big"
                                            trigger="click"
                                          >
                                            <Trigger
                                              action="click"
                                              afterPopupVisibleChange={[Function]}
                                              arrowContent={
                                                <span
                                                  className="ant-popover-arrow-content"
                                                />
                                              }
                                              arrowPointAtCenter={false}
                                              autoAdjustOverflow={true}
                                              autoDestroy={false}
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tc",
                                                      "bc",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "bottomLeft": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "bottomRight": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "br",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "left": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "cr",
                                                      "cl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "leftBottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "bl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "leftTop": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "tl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "right": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "cl",
                                                      "cr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "rightBottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "br",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "rightTop": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "tr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "top": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bc",
                                                      "tc",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "topRight": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "tr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                }
                                              }
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              disabled={false}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={Array []}
                                              icon={<ForwardRef(ExclamationCircleFilled) />}
                                              mask={false}
                                              maskClosable={true}
                                              mouseEnterDelay={0.1}
                                              mouseLeaveDelay={0.1}
                                              okType="primary"
                                              onConfirm={[Function]}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              overlay={
                                                <LocaleReceiver
                                                  componentName="Popconfirm"
                                                  defaultLocale={
                                                    Object {
                                                      "cancelText": "Cancel",
                                                      "okText": "OK",
                                                    }
                                                  }
                                                >
                                                  [Function]
                                                </LocaleReceiver>
                                              }
                                              popup={[Function]}
                                              popupAlign={Object {}}
                                              popupClassName="ant-popconfirm"
                                              popupPlacement="top"
                                              popupStyle={Object {}}
                                              popupTransitionName="zoom-big"
                                              prefixCls="ant-popover"
                                              showAction={Array []}
                                              title="Sure to Delete?"
                                            >
                                              <Button
                                                block={false}
                                                disabled={false}
                                                ghost={false}
                                                htmlType="button"
                                                icon={<ForwardRef(DeleteOutlined) />}
                                                key="trigger"
                                                loading={false}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                onTouchStart={[Function]}
                                              >
                                                <Wave>
                                                  <button
                                                    className="ant-btn"
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(DeleteOutlined)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "delete",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="delete"
                                                          className="anticon anticon-delete"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "delete",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="delete"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-delete"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                key="svg-delete-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(DeleteOutlined)>
                                                    <span
                                                      key=".0"
                                                    >
                                                      Delete
                                                    </span>
                                                  </button>
                                                </Wave>
                                              </Button>
                                            </Trigger>
                                          </ForwardRef(Tooltip)>
                                        </Tooltip>
                                      </ForwardRef>
                                    </li>
                                  </ul>
                                </div>
                                <div
                                  className="ant-list-item-extra"
                                  key="extra"
                                >
                                  <img
                                    alt="example"
                                    src=""
                                    style={
                                      Object {
                                        "height": "100%",
                                        "width": "100%",
                                      }
                                    }
                                  />
                                </div>
                              </li>
                            </Item>
                          </ul>
                        </div>
                      </div>
                    </Spin>
                    <div
                      className="ant-list-pagination"
                    >
                      <Pagination
                        current={1}
                        onChange={[Function]}
                        onShowSizeChange={[Function]}
                        pageSize={20}
                        total={1}
                      >
                        <LocaleReceiver
                          componentName="Pagination"
                          defaultLocale={
                            Object {
                              "items_per_page": "/ page",
                              "jump_to": "Go to",
                              "jump_to_confirm": "confirm",
                              "next_3": "Next 3 Pages",
                              "next_5": "Next 5 Pages",
                              "next_page": "Next Page",
                              "page": "",
                              "prev_3": "Previous 3 Pages",
                              "prev_5": "Previous 5 Pages",
                              "prev_page": "Previous Page",
                            }
                          }
                        >
                          <Pagination
                            className=""
                            current={1}
                            defaultCurrent={1}
                            defaultPageSize={10}
                            hideOnSinglePage={false}
                            itemRender={[Function]}
                            jumpNextIcon={
                              <a
                                className="ant-pagination-item-link"
                              >
                                <div
                                  className="ant-pagination-item-container"
                                >
                                  <ForwardRef(DoubleRightOutlined)
                                    className="ant-pagination-item-link-icon"
                                  />
                                  <span
                                    className="ant-pagination-item-ellipsis"
                                  >
                                    •••
                                  </span>
                                </div>
                              </a>
                            }
                            jumpPrevIcon={
                              <a
                                className="ant-pagination-item-link"
                              >
                                <div
                                  className="ant-pagination-item-container"
                                >
                                  <ForwardRef(DoubleLeftOutlined)
                                    className="ant-pagination-item-link-icon"
                                  />
                                  <span
                                    className="ant-pagination-item-ellipsis"
                                  >
                                    •••
                                  </span>
                                </div>
                              </a>
                            }
                            locale={
                              Object {
                                "items_per_page": "/ page",
                                "jump_to": "Go to",
                                "jump_to_confirm": "confirm",
                                "next_3": "Next 3 Pages",
                                "next_5": "Next 5 Pages",
                                "next_page": "Next Page",
                                "page": "",
                                "prev_3": "Previous 3 Pages",
                                "prev_5": "Previous 5 Pages",
                                "prev_page": "Previous Page",
                              }
                            }
                            nextIcon={
                              <button
                                className="ant-pagination-item-link"
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(RightOutlined) />
                              </button>
                            }
                            onChange={[Function]}
                            onShowSizeChange={[Function]}
                            pageSize={20}
                            prefixCls="ant-pagination"
                            prevIcon={
                              <button
                                className="ant-pagination-item-link"
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(LeftOutlined) />
                              </button>
                            }
                            selectComponentClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "OptGroup": [Function],
                                "Option": [Function],
                                "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                "render": [Function],
                              }
                            }
                            selectPrefixCls="ant-select"
                            showLessItems={false}
                            showPrevNextJumpers={true}
                            showQuickJumper={false}
                            showTitle={true}
                            style={Object {}}
                            total={1}
                            totalBoundaryShowSizeChanger={50}
                          >
                            <ul
                              className="ant-pagination"
                              style={Object {}}
                              unselectable="unselectable"
                            >
                              <li
                                aria-disabled={true}
                                className="ant-pagination-prev ant-pagination-disabled"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                tabIndex={null}
                                title="Previous Page"
                              >
                                <button
                                  className="ant-pagination-item-link"
                                  disabled={true}
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <ForwardRef(LeftOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "left",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="left"
                                        className="anticon anticon-left"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "left",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="left"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-left"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                                              key="svg-left-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(LeftOutlined)>
                                </button>
                              </li>
                              <Pager
                                active={true}
                                itemRender={[Function]}
                                key="1"
                                locale={
                                  Object {
                                    "items_per_page": "/ page",
                                    "jump_to": "Go to",
                                    "jump_to_confirm": "confirm",
                                    "next_3": "Next 3 Pages",
                                    "next_5": "Next 5 Pages",
                                    "next_page": "Next Page",
                                    "page": "",
                                    "prev_3": "Previous 3 Pages",
                                    "prev_5": "Previous 5 Pages",
                                    "prev_page": "Previous Page",
                                  }
                                }
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                page={1}
                                rootPrefixCls="ant-pagination"
                                showTitle={true}
                              >
                                <li
                                  className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  tabIndex="0"
                                  title={1}
                                >
                                  <a
                                    rel="nofollow"
                                  >
                                    1
                                  </a>
                                </li>
                              </Pager>
                              <li
                                aria-disabled={true}
                                className="ant-pagination-next ant-pagination-disabled"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                tabIndex={null}
                                title="Next Page"
                              >
                                <button
                                  className="ant-pagination-item-link"
                                  disabled={true}
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <ForwardRef(RightOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="right"
                                        className="anticon anticon-right"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "right",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="right"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-right"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                              key="svg-right-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(RightOutlined)>
                                </button>
                              </li>
                              <Options
                                changeSize={null}
                                current={1}
                                goButton={false}
                                locale={
                                  Object {
                                    "items_per_page": "/ page",
                                    "jump_to": "Go to",
                                    "jump_to_confirm": "confirm",
                                    "next_3": "Next 3 Pages",
                                    "next_5": "Next 5 Pages",
                                    "next_page": "Next Page",
                                    "page": "",
                                    "prev_3": "Previous 3 Pages",
                                    "prev_5": "Previous 5 Pages",
                                    "prev_page": "Previous Page",
                                  }
                                }
                                pageSize={20}
                                pageSizeOptions={
                                  Array [
                                    "10",
                                    "20",
                                    "50",
                                    "100",
                                  ]
                                }
                                quickGo={null}
                                rootPrefixCls="ant-pagination"
                                selectComponentClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "OptGroup": [Function],
                                    "Option": [Function],
                                    "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                    "render": [Function],
                                  }
                                }
                                selectPrefixCls="ant-select"
                              />
                            </ul>
                          </Pagination>
                        </LocaleReceiver>
                      </Pagination>
                    </div>
                  </div>
                </List>
              </div>
            </Item>
          </div>
        </Space>
      </PostList>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`List component snapshot testing should match when component loading 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <PostList
        actions={
          Array [
            "update",
            "delete",
          ]
        }
        format={
          Object {
            "id": 1,
            "name": "article",
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Template
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                    }
                  }
                />
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <ForwardRef(InternalForm)
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  initialValues={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 20,
                      "page": 1,
                    }
                  }
                  layout="inline"
                  name="filters"
                  onFinish={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <SizeContextProvider>
                    <ForwardRef(Form)
                      className="ant-form ant-form-inline"
                      form={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": "filters",
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                        }
                      }
                      id="filters"
                      initialValues={
                        Object {
                          "format": Array [
                            1,
                          ],
                          "limit": 20,
                          "page": 1,
                        }
                      }
                      name="filters"
                      onFinish={[Function]}
                      onFinishFailed={[Function]}
                      style={
                        Object {
                          "maxWidth": "100%",
                        }
                      }
                    >
                      <form
                        className="ant-form ant-form-inline"
                        id="filters"
                        onSubmit={[Function]}
                        style={
                          Object {
                            "maxWidth": "100%",
                          }
                        }
                      >
                        <FormItem
                          label="Search"
                          name="q"
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                        >
                          <WrapperField
                            label="Search"
                            messageVariables={
                              Object {
                                "label": "Search",
                              }
                            }
                            name="q"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_q"
                              label="Search"
                              messageVariables={
                                Object {
                                  "label": "Search",
                                }
                              }
                              name={
                                Array [
                                  "q",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "25%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_q"
                                    label="Search"
                                    name="q"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_q"
                                          title="Search"
                                        >
                                          Search
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Search"
                                    name={
                                      Array [
                                        "q",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Input
                                                id="filters_q"
                                                onChange={[Function]}
                                                placeholder="search posts"
                                                type="text"
                                              >
                                                <ClearableLabeledInput
                                                  bordered={true}
                                                  element={
                                                    <input
                                                      className="ant-input"
                                                      id="filters_q"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="search posts"
                                                      type="text"
                                                    />
                                                  }
                                                  focused={false}
                                                  handleReset={[Function]}
                                                  id="filters_q"
                                                  inputType="input"
                                                  onChange={[Function]}
                                                  placeholder="search posts"
                                                  prefixCls="ant-input"
                                                  triggerFocus={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="filters_q"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="search posts"
                                                    type="text"
                                                    value=""
                                                  />
                                                </ClearableLabeledInput>
                                              </Input>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Sort"
                          name="sort"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Sort"
                            messageVariables={
                              Object {
                                "label": "Sort",
                              }
                            }
                            name="sort"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_sort"
                              label="Sort"
                              messageVariables={
                                Object {
                                  "label": "Sort",
                                }
                              }
                              name={
                                Array [
                                  "sort",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_sort"
                                    label="Sort"
                                    name="sort"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_sort"
                                          title="Sort"
                                        >
                                          Sort
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Sort"
                                    name={
                                      Array [
                                        "sort",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <ForwardRef(InternalSelect)
                                                defaultValue="desc"
                                                id="filters_sort"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <Select
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue="desc"
                                                  dropdownClassName=""
                                                  id="filters_sort"
                                                  inputIcon={[Function]}
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                  transitionName="slide-up"
                                                >
                                                  <ForwardRef(Select)
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue="desc"
                                                    dropdownClassName=""
                                                    id="filters_sort"
                                                    inputIcon={[Function]}
                                                    listHeight={256}
                                                    listItemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        dropdownClassName=""
                                                        empty={false}
                                                        getTriggerDOMNode={[Function]}
                                                        popupElement={
                                                          <ForwardRef(OptionList)
                                                            childrenAsData={true}
                                                            defaultActiveFirstOption={true}
                                                            flattenOptions={
                                                              Array [
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Latest",
                                                                    "key": null,
                                                                    "value": "desc",
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "desc",
                                                                },
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Old",
                                                                    "key": null,
                                                                    "value": "asc",
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "asc",
                                                                },
                                                              ]
                                                            }
                                                            height={256}
                                                            id="filters_sort"
                                                            itemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onActiveValue={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "children": "Latest",
                                                                  "key": null,
                                                                  "value": "desc",
                                                                },
                                                                Object {
                                                                  "children": "Old",
                                                                  "key": null,
                                                                  "value": "asc",
                                                                },
                                                              ]
                                                            }
                                                            prefixCls="ant-select"
                                                            searchValue=""
                                                            values={
                                                              Set {
                                                                "desc",
                                                              }
                                                            }
                                                            virtual={true}
                                                          />
                                                        }
                                                        prefixCls="ant-select"
                                                        transitionName="slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div>
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={
                                                                  Array [
                                                                    Object {
                                                                      "data": Object {
                                                                        "children": "Latest",
                                                                        "key": null,
                                                                        "value": "desc",
                                                                      },
                                                                      "groupOption": false,
                                                                      "key": "desc",
                                                                    },
                                                                    Object {
                                                                      "data": Object {
                                                                        "children": "Old",
                                                                        "key": null,
                                                                        "value": "asc",
                                                                      },
                                                                      "groupOption": false,
                                                                      "key": "asc",
                                                                    },
                                                                  ]
                                                                }
                                                                height={256}
                                                                id="filters_sort"
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "children": "Latest",
                                                                      "key": null,
                                                                      "value": "desc",
                                                                    },
                                                                    Object {
                                                                      "children": "Old",
                                                                      "key": null,
                                                                      "value": "asc",
                                                                    },
                                                                  ]
                                                                }
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    "desc",
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName=""
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            accessibilityIndex={0}
                                                            activeValue={null}
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="desc"
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="Latest"
                                                                  >
                                                                    Latest
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "maxWidth": "160px",
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "desc",
                                                                  "label": "Latest",
                                                                  "value": "desc",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue="desc"
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_sort_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_sort_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_sort_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_sort"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                        title="Latest"
                                                                      >
                                                                        Latest
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                id="filters_sort"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                listHeight={256}
                                                                listItemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "maxWidth": "160px",
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": "desc",
                                                                      "label": "Latest",
                                                                      "value": "desc",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    accessibilityIndex={0}
                                                                    attrs={Object {}}
                                                                    editable={false}
                                                                    id="filters_sort"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-item"
                                                                  title="Latest"
                                                                >
                                                                  Latest
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </ForwardRef(Select)>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Tags"
                          name="tags"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Tags"
                            messageVariables={
                              Object {
                                "label": "Tags",
                              }
                            }
                            name="tags"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_tags"
                              label="Tags"
                              messageVariables={
                                Object {
                                  "label": "Tags",
                                }
                              }
                              name={
                                Array [
                                  "tags",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_tags"
                                    label="Tags"
                                    name="tags"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_tags"
                                          title="Tags"
                                        >
                                          Tags
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Tags"
                                    name={
                                      Array [
                                        "tags",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Selector
                                                action="Tags"
                                                id="filters_tags"
                                                mode="multiple"
                                                onChange={[Function]}
                                                placeholder="Filter Tags"
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(InternalSelect)
                                                  allowClear={true}
                                                  bordered={true}
                                                  defaultValue={Array []}
                                                  filterOption={[Function]}
                                                  listHeight={128}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  placeholder="Filter Tags"
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                >
                                                  <Select
                                                    allowClear={true}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    inputIcon={[Function]}
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Filter Tags"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <ForwardRef(Select)
                                                      allowClear={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Filter Tags"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                      transitionName="slide-up"
                                                    >
                                                      <div
                                                        className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                      >
                                                        <SelectTrigger
                                                          containerWidth={null}
                                                          dropdownClassName=""
                                                          empty={false}
                                                          getTriggerDOMNode={[Function]}
                                                          popupElement={
                                                            <ForwardRef(OptionList)
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={
                                                                Array [
                                                                  Object {
                                                                    "data": Object {
                                                                      "children": "cricket",
                                                                      "key": "tags1",
                                                                      "value": 1,
                                                                    },
                                                                    "groupOption": false,
                                                                    "key": "tags1",
                                                                  },
                                                                ]
                                                              }
                                                              height={128}
                                                              id="rc_select_TEST_OR_SSR"
                                                              itemHeight={24}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onActiveValue={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onScroll={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "children": "cricket",
                                                                    "key": "tags1",
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              prefixCls="ant-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          }
                                                          prefixCls="ant-select"
                                                          transitionName="slide-up"
                                                        >
                                                          <Trigger
                                                            action={Array []}
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottomLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            getTriggerDOMNode={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            popup={
                                                              <div>
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "cricket",
                                                                          "key": "tags1",
                                                                          "value": 1,
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "tags1",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={128}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onScroll={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "cricket",
                                                                        "key": "tags1",
                                                                        "value": 1,
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={Set {}}
                                                                  virtual={true}
                                                                />
                                                              </div>
                                                            }
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="bottomLeft"
                                                            popupStyle={
                                                              Object {
                                                                "minWidth": null,
                                                                "width": null,
                                                              }
                                                            }
                                                            popupTransitionName="slide-up"
                                                            prefixCls="ant-select-dropdown"
                                                            showAction={Array []}
                                                          >
                                                            <Selector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Filter Tags
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              id="rc_select_TEST_OR_SSR"
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              key="trigger"
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Filter Tags"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              style={
                                                                Object {
                                                                  "maxWidth": "160px",
                                                                }
                                                              }
                                                              tokenWithEnter={false}
                                                              transitionName="slide-up"
                                                              values={Array []}
                                                            >
                                                              <div
                                                                className="ant-select-selector"
                                                                onClick={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectSelector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  allowClear={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={Array []}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-placeholder"
                                                                        >
                                                                          Filter Tags
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />,
                                                                    }
                                                                  }
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  mode="multiple"
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onInputChange={[Function]}
                                                                  onInputCompositionEnd={[Function]}
                                                                  onInputCompositionStart={[Function]}
                                                                  onInputKeyDown={[Function]}
                                                                  onInputMouseDown={[Function]}
                                                                  onInputPaste={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  placeholder="Filter Tags"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={true}
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "160px",
                                                                    }
                                                                  }
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  values={Array []}
                                                                >
                                                                  <CSSMotionList
                                                                    component={false}
                                                                    keys={Array []}
                                                                    motionAppear={true}
                                                                  />
                                                                  <span
                                                                    className="ant-select-selection-search"
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </span>
                                                                  <span
                                                                    className="ant-select-selection-placeholder"
                                                                  >
                                                                    Filter Tags
                                                                  </span>
                                                                </SelectSelector>
                                                              </div>
                                                            </Selector>
                                                          </Trigger>
                                                        </SelectTrigger>
                                                      </div>
                                                    </ForwardRef(Select)>
                                                  </Select>
                                                </ForwardRef(InternalSelect)>
                                              </Selector>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Categories"
                          name="categories"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Categories"
                            messageVariables={
                              Object {
                                "label": "Categories",
                              }
                            }
                            name="categories"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_categories"
                              label="Categories"
                              messageVariables={
                                Object {
                                  "label": "Categories",
                                }
                              }
                              name={
                                Array [
                                  "categories",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_categories"
                                    label="Categories"
                                    name="categories"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_categories"
                                          title="Categories"
                                        >
                                          Categories
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Categories"
                                    name={
                                      Array [
                                        "categories",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Selector
                                                action="Categories"
                                                id="filters_categories"
                                                mode="multiple"
                                                onChange={[Function]}
                                                placeholder="Filter Categories"
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(InternalSelect)
                                                  allowClear={true}
                                                  bordered={true}
                                                  defaultValue={Array []}
                                                  filterOption={[Function]}
                                                  listHeight={128}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  placeholder="Filter Categories"
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                >
                                                  <Select
                                                    allowClear={true}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    inputIcon={[Function]}
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Filter Categories"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <ForwardRef(Select)
                                                      allowClear={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Filter Categories"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                      transitionName="slide-up"
                                                    >
                                                      <div
                                                        className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                      >
                                                        <SelectTrigger
                                                          containerWidth={null}
                                                          dropdownClassName=""
                                                          empty={false}
                                                          getTriggerDOMNode={[Function]}
                                                          popupElement={
                                                            <ForwardRef(OptionList)
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={
                                                                Array [
                                                                  Object {
                                                                    "data": Object {
                                                                      "children": "Andhra Pradesh",
                                                                      "key": "categories1",
                                                                      "value": 1,
                                                                    },
                                                                    "groupOption": false,
                                                                    "key": "categories1",
                                                                  },
                                                                ]
                                                              }
                                                              height={128}
                                                              id="rc_select_TEST_OR_SSR"
                                                              itemHeight={24}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onActiveValue={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onScroll={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "children": "Andhra Pradesh",
                                                                    "key": "categories1",
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              prefixCls="ant-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          }
                                                          prefixCls="ant-select"
                                                          transitionName="slide-up"
                                                        >
                                                          <Trigger
                                                            action={Array []}
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottomLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            getTriggerDOMNode={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            popup={
                                                              <div>
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Andhra Pradesh",
                                                                          "key": "categories1",
                                                                          "value": 1,
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "categories1",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={128}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onScroll={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Andhra Pradesh",
                                                                        "key": "categories1",
                                                                        "value": 1,
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={Set {}}
                                                                  virtual={true}
                                                                />
                                                              </div>
                                                            }
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="bottomLeft"
                                                            popupStyle={
                                                              Object {
                                                                "minWidth": null,
                                                                "width": null,
                                                              }
                                                            }
                                                            popupTransitionName="slide-up"
                                                            prefixCls="ant-select-dropdown"
                                                            showAction={Array []}
                                                          >
                                                            <Selector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Filter Categories
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              id="rc_select_TEST_OR_SSR"
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              key="trigger"
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Filter Categories"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              style={
                                                                Object {
                                                                  "maxWidth": "160px",
                                                                }
                                                              }
                                                              tokenWithEnter={false}
                                                              transitionName="slide-up"
                                                              values={Array []}
                                                            >
                                                              <div
                                                                className="ant-select-selector"
                                                                onClick={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectSelector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  allowClear={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={Array []}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-placeholder"
                                                                        >
                                                                          Filter Categories
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />,
                                                                    }
                                                                  }
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  mode="multiple"
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onInputChange={[Function]}
                                                                  onInputCompositionEnd={[Function]}
                                                                  onInputCompositionStart={[Function]}
                                                                  onInputKeyDown={[Function]}
                                                                  onInputMouseDown={[Function]}
                                                                  onInputPaste={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  placeholder="Filter Categories"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={true}
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "160px",
                                                                    }
                                                                  }
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  values={Array []}
                                                                >
                                                                  <CSSMotionList
                                                                    component={false}
                                                                    keys={Array []}
                                                                    motionAppear={true}
                                                                  />
                                                                  <span
                                                                    className="ant-select-selection-search"
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </span>
                                                                  <span
                                                                    className="ant-select-selection-placeholder"
                                                                  >
                                                                    Filter Categories
                                                                  </span>
                                                                </SelectSelector>
                                                              </div>
                                                            </Selector>
                                                          </Trigger>
                                                        </SelectTrigger>
                                                      </div>
                                                    </ForwardRef(Select)>
                                                  </Select>
                                                </ForwardRef(InternalSelect)>
                                              </Selector>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                validateStatus=""
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          block={false}
                                          ghost={false}
                                          htmlType="submit"
                                          loading={false}
                                          type="primary"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Submit
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </form>
                    </ForwardRef(Form)>
                  </SizeContextProvider>
                </ForwardRef(InternalForm)>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={2}
              key="ant-space-item-2"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <List
                  bordered={true}
                  className="post-list"
                  dataSource={
                    Array [
                      Object {
                        "authors": Array [],
                        "categories": Array [
                          1,
                        ],
                        "claims": Array [],
                        "created_at": "2020-09-09T06:53:03.018593Z",
                        "deleted_at": null,
                        "description": Object {
                          "blocks": Array [
                            Object {
                              "data": Object {
                                "text": "The United States of America (USA) is one of the oldest modern democracies in the world. Over its existence as a democracy for nearly two and half centuries, it has developed institutions and practices which strengthen the idea of democracy. Democracy wrests the choice in the people to choose a government to preside over the administration. Hence it is imperative that the people know about the political party or the individual that they would be voting for. This knowledge includes – the ideology, stance on various issues, vision etc.&nbsp;",
                              },
                              "type": "paragraph",
                            },
                          ],
                          "time": 1599648677547,
                          "version": "2.18.0",
                        },
                        "excerpt": "One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. ",
                        "featured_medium_id": 1,
                        "format": 1,
                        "format_id": 1,
                        "id": 1,
                        "is_featured": false,
                        "is_highlighted": false,
                        "is_sticky": false,
                        "medium": Object {
                          "alt_text": "example",
                          "id": 1,
                          "url": Object {
                            "raw": "http://example.com",
                          },
                        },
                        "published_date": "0001-01-01T00:00:00Z",
                        "slug": "explainer-the-us-presidential-debates-history-format",
                        "space_id": 1,
                        "status": "Publish",
                        "subtitle": "",
                        "tags": Array [
                          1,
                        ],
                        "title": "Explainer: The US Presidential Debates – History & Format",
                        "updated_at": "2020-09-09T10:51:20.681562Z",
                      },
                    ]
                  }
                  itemLayout="vertical"
                  loading={false}
                  pagination={
                    Object {
                      "current": 1,
                      "onChange": [Function],
                      "pageSize": 20,
                      "total": 1,
                    }
                  }
                  renderItem={[Function]}
                >
                  <div
                    className="ant-list ant-list-vertical ant-list-split ant-list-bordered ant-list-something-after-last-item post-list"
                  >
                    <Spin
                      size="default"
                      spinning={false}
                      wrapperClassName=""
                    >
                      <div
                        className="ant-spin-nested-loading"
                      >
                        <div
                          className="ant-spin-container"
                          key="container"
                        >
                          <ul
                            className="ant-list-items"
                          >
                            <Item
                              actions={
                                Array [
                                  <ForwardRef
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                    to="/fact-checks/1/edit"
                                  >
                                    <ForwardRef(InternalButton)
                                      block={false}
                                      disabled={false}
                                      ghost={false}
                                      htmlType="button"
                                      icon={<ForwardRef(EditOutlined) />}
                                      loading={false}
                                    >
                                      Edit
                                    </ForwardRef(InternalButton)>
                                  </ForwardRef>,
                                  <ForwardRef
                                    disabled={false}
                                    icon={<ForwardRef(ExclamationCircleFilled) />}
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    title="Sure to Delete?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <ForwardRef(InternalButton)
                                      block={false}
                                      disabled={false}
                                      ghost={false}
                                      htmlType="button"
                                      icon={<ForwardRef(DeleteOutlined) />}
                                      loading={false}
                                    >
                                      Delete
                                    </ForwardRef(InternalButton)>
                                  </ForwardRef>,
                                ]
                              }
                              extra={
                                <img
                                  alt="example"
                                  src=""
                                  style={
                                    Object {
                                      "height": "100%",
                                      "width": "100%",
                                    }
                                  }
                                />
                              }
                            >
                              <li
                                className="ant-list-item"
                              >
                                <div
                                  className="ant-list-item-main"
                                  key="content"
                                >
                                  <Meta
                                    description="One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. "
                                    title={
                                      <ForwardRef
                                        to="/fact-checks/1/edit"
                                      >
                                        Explainer: The US Presidential Debates – History & Format
                                      </ForwardRef>
                                    }
                                  >
                                    <div
                                      className="ant-list-item-meta"
                                    >
                                      <div
                                        className="ant-list-item-meta-content"
                                      >
                                        <h4
                                          className="ant-list-item-meta-title"
                                        >
                                          <Link
                                            to="/fact-checks/1/edit"
                                          >
                                            <LinkAnchor
                                              href="/fact-checks/1/edit"
                                              navigate={[Function]}
                                            >
                                              <a
                                                href="/fact-checks/1/edit"
                                                onClick={[Function]}
                                              >
                                                Explainer: The US Presidential Debates – History & Format
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </h4>
                                        <div
                                          className="ant-list-item-meta-description"
                                        >
                                          One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. 
                                        </div>
                                      </div>
                                    </div>
                                  </Meta>
                                  <ul
                                    className="ant-list-item-action"
                                    key="actions"
                                  >
                                    <li
                                      key="ant-list-item-action-0"
                                    >
                                      <Link
                                        style={
                                          Object {
                                            "marginRight": 8,
                                          }
                                        }
                                        to="/fact-checks/1/edit"
                                      >
                                        <LinkAnchor
                                          href="/fact-checks/1/edit"
                                          navigate={[Function]}
                                          style={
                                            Object {
                                              "marginRight": 8,
                                            }
                                          }
                                        >
                                          <a
                                            href="/fact-checks/1/edit"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "marginRight": 8,
                                              }
                                            }
                                          >
                                            <Button
                                              block={false}
                                              disabled={false}
                                              ghost={false}
                                              htmlType="button"
                                              icon={<ForwardRef(EditOutlined) />}
                                              loading={false}
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(EditOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "edit",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="edit"
                                                        className="anticon anticon-edit"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "edit",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="edit"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-edit"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                                                              key="svg-edit-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(EditOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Edit
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                      <em
                                        className="ant-list-item-action-split"
                                      />
                                    </li>
                                    <li
                                      key="ant-list-item-action-1"
                                    >
                                      <ForwardRef
                                        disabled={false}
                                        icon={<ForwardRef(ExclamationCircleFilled) />}
                                        okType="primary"
                                        onConfirm={[Function]}
                                        placement="top"
                                        title="Sure to Delete?"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Tooltip
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          disabled={false}
                                          icon={<ForwardRef(ExclamationCircleFilled) />}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          okType="primary"
                                          onConfirm={[Function]}
                                          onVisibleChange={[Function]}
                                          overlay={
                                            <LocaleReceiver
                                              componentName="Popconfirm"
                                              defaultLocale={
                                                Object {
                                                  "cancelText": "Cancel",
                                                  "okText": "OK",
                                                }
                                              }
                                            >
                                              [Function]
                                            </LocaleReceiver>
                                          }
                                          overlayClassName="ant-popconfirm"
                                          placement="top"
                                          prefixCls="ant-popover"
                                          title="Sure to Delete?"
                                          transitionName="zoom-big"
                                          trigger="click"
                                        >
                                          <ForwardRef(Tooltip)
                                            arrowContent={
                                              <span
                                                className="ant-popover-arrow-content"
                                              />
                                            }
                                            arrowPointAtCenter={false}
                                            autoAdjustOverflow={true}
                                            builtinPlacements={
                                              Object {
                                                "bottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tc",
                                                    "bc",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "bottomLeft": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "bl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "bottomRight": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "br",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "left": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "cr",
                                                    "cl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "leftBottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "bl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "leftTop": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "tl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "right": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "cl",
                                                    "cr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "rightBottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "br",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "rightTop": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "tr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "top": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bc",
                                                    "tc",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "topLeft": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "tl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "topRight": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "tr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                              }
                                            }
                                            disabled={false}
                                            icon={<ForwardRef(ExclamationCircleFilled) />}
                                            mouseEnterDelay={0.1}
                                            mouseLeaveDelay={0.1}
                                            okType="primary"
                                            onConfirm={[Function]}
                                            onPopupAlign={[Function]}
                                            onVisibleChange={[Function]}
                                            overlay={
                                              <LocaleReceiver
                                                componentName="Popconfirm"
                                                defaultLocale={
                                                  Object {
                                                    "cancelText": "Cancel",
                                                    "okText": "OK",
                                                  }
                                                }
                                              >
                                                [Function]
                                              </LocaleReceiver>
                                            }
                                            overlayClassName="ant-popconfirm"
                                            placement="top"
                                            prefixCls="ant-popover"
                                            title="Sure to Delete?"
                                            transitionName="zoom-big"
                                            trigger="click"
                                          >
                                            <Trigger
                                              action="click"
                                              afterPopupVisibleChange={[Function]}
                                              arrowContent={
                                                <span
                                                  className="ant-popover-arrow-content"
                                                />
                                              }
                                              arrowPointAtCenter={false}
                                              autoAdjustOverflow={true}
                                              autoDestroy={false}
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tc",
                                                      "bc",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "bottomLeft": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "bottomRight": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "br",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "left": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "cr",
                                                      "cl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "leftBottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "bl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "leftTop": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "tl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "right": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "cl",
                                                      "cr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "rightBottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "br",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "rightTop": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "tr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "top": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bc",
                                                      "tc",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "topRight": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "tr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                }
                                              }
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              disabled={false}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={Array []}
                                              icon={<ForwardRef(ExclamationCircleFilled) />}
                                              mask={false}
                                              maskClosable={true}
                                              mouseEnterDelay={0.1}
                                              mouseLeaveDelay={0.1}
                                              okType="primary"
                                              onConfirm={[Function]}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              overlay={
                                                <LocaleReceiver
                                                  componentName="Popconfirm"
                                                  defaultLocale={
                                                    Object {
                                                      "cancelText": "Cancel",
                                                      "okText": "OK",
                                                    }
                                                  }
                                                >
                                                  [Function]
                                                </LocaleReceiver>
                                              }
                                              popup={[Function]}
                                              popupAlign={Object {}}
                                              popupClassName="ant-popconfirm"
                                              popupPlacement="top"
                                              popupStyle={Object {}}
                                              popupTransitionName="zoom-big"
                                              prefixCls="ant-popover"
                                              showAction={Array []}
                                              title="Sure to Delete?"
                                            >
                                              <Button
                                                block={false}
                                                disabled={false}
                                                ghost={false}
                                                htmlType="button"
                                                icon={<ForwardRef(DeleteOutlined) />}
                                                key="trigger"
                                                loading={false}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                onTouchStart={[Function]}
                                              >
                                                <Wave>
                                                  <button
                                                    className="ant-btn"
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(DeleteOutlined)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "delete",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="delete"
                                                          className="anticon anticon-delete"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "delete",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="delete"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-delete"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                key="svg-delete-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(DeleteOutlined)>
                                                    <span
                                                      key=".0"
                                                    >
                                                      Delete
                                                    </span>
                                                  </button>
                                                </Wave>
                                              </Button>
                                            </Trigger>
                                          </ForwardRef(Tooltip)>
                                        </Tooltip>
                                      </ForwardRef>
                                    </li>
                                  </ul>
                                </div>
                                <div
                                  className="ant-list-item-extra"
                                  key="extra"
                                >
                                  <img
                                    alt="example"
                                    src=""
                                    style={
                                      Object {
                                        "height": "100%",
                                        "width": "100%",
                                      }
                                    }
                                  />
                                </div>
                              </li>
                            </Item>
                          </ul>
                        </div>
                      </div>
                    </Spin>
                    <div
                      className="ant-list-pagination"
                    >
                      <Pagination
                        current={1}
                        onChange={[Function]}
                        onShowSizeChange={[Function]}
                        pageSize={20}
                        total={1}
                      >
                        <LocaleReceiver
                          componentName="Pagination"
                          defaultLocale={
                            Object {
                              "items_per_page": "/ page",
                              "jump_to": "Go to",
                              "jump_to_confirm": "confirm",
                              "next_3": "Next 3 Pages",
                              "next_5": "Next 5 Pages",
                              "next_page": "Next Page",
                              "page": "",
                              "prev_3": "Previous 3 Pages",
                              "prev_5": "Previous 5 Pages",
                              "prev_page": "Previous Page",
                            }
                          }
                        >
                          <Pagination
                            className=""
                            current={1}
                            defaultCurrent={1}
                            defaultPageSize={10}
                            hideOnSinglePage={false}
                            itemRender={[Function]}
                            jumpNextIcon={
                              <a
                                className="ant-pagination-item-link"
                              >
                                <div
                                  className="ant-pagination-item-container"
                                >
                                  <ForwardRef(DoubleRightOutlined)
                                    className="ant-pagination-item-link-icon"
                                  />
                                  <span
                                    className="ant-pagination-item-ellipsis"
                                  >
                                    •••
                                  </span>
                                </div>
                              </a>
                            }
                            jumpPrevIcon={
                              <a
                                className="ant-pagination-item-link"
                              >
                                <div
                                  className="ant-pagination-item-container"
                                >
                                  <ForwardRef(DoubleLeftOutlined)
                                    className="ant-pagination-item-link-icon"
                                  />
                                  <span
                                    className="ant-pagination-item-ellipsis"
                                  >
                                    •••
                                  </span>
                                </div>
                              </a>
                            }
                            locale={
                              Object {
                                "items_per_page": "/ page",
                                "jump_to": "Go to",
                                "jump_to_confirm": "confirm",
                                "next_3": "Next 3 Pages",
                                "next_5": "Next 5 Pages",
                                "next_page": "Next Page",
                                "page": "",
                                "prev_3": "Previous 3 Pages",
                                "prev_5": "Previous 5 Pages",
                                "prev_page": "Previous Page",
                              }
                            }
                            nextIcon={
                              <button
                                className="ant-pagination-item-link"
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(RightOutlined) />
                              </button>
                            }
                            onChange={[Function]}
                            onShowSizeChange={[Function]}
                            pageSize={20}
                            prefixCls="ant-pagination"
                            prevIcon={
                              <button
                                className="ant-pagination-item-link"
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(LeftOutlined) />
                              </button>
                            }
                            selectComponentClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "OptGroup": [Function],
                                "Option": [Function],
                                "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                "render": [Function],
                              }
                            }
                            selectPrefixCls="ant-select"
                            showLessItems={false}
                            showPrevNextJumpers={true}
                            showQuickJumper={false}
                            showTitle={true}
                            style={Object {}}
                            total={1}
                            totalBoundaryShowSizeChanger={50}
                          >
                            <ul
                              className="ant-pagination"
                              style={Object {}}
                              unselectable="unselectable"
                            >
                              <li
                                aria-disabled={true}
                                className="ant-pagination-prev ant-pagination-disabled"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                tabIndex={null}
                                title="Previous Page"
                              >
                                <button
                                  className="ant-pagination-item-link"
                                  disabled={true}
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <ForwardRef(LeftOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "left",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="left"
                                        className="anticon anticon-left"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "left",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="left"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-left"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                                              key="svg-left-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(LeftOutlined)>
                                </button>
                              </li>
                              <Pager
                                active={true}
                                itemRender={[Function]}
                                key="1"
                                locale={
                                  Object {
                                    "items_per_page": "/ page",
                                    "jump_to": "Go to",
                                    "jump_to_confirm": "confirm",
                                    "next_3": "Next 3 Pages",
                                    "next_5": "Next 5 Pages",
                                    "next_page": "Next Page",
                                    "page": "",
                                    "prev_3": "Previous 3 Pages",
                                    "prev_5": "Previous 5 Pages",
                                    "prev_page": "Previous Page",
                                  }
                                }
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                page={1}
                                rootPrefixCls="ant-pagination"
                                showTitle={true}
                              >
                                <li
                                  className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  tabIndex="0"
                                  title={1}
                                >
                                  <a
                                    rel="nofollow"
                                  >
                                    1
                                  </a>
                                </li>
                              </Pager>
                              <li
                                aria-disabled={true}
                                className="ant-pagination-next ant-pagination-disabled"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                tabIndex={null}
                                title="Next Page"
                              >
                                <button
                                  className="ant-pagination-item-link"
                                  disabled={true}
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <ForwardRef(RightOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="right"
                                        className="anticon anticon-right"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "right",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="right"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-right"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                              key="svg-right-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(RightOutlined)>
                                </button>
                              </li>
                              <Options
                                changeSize={null}
                                current={1}
                                goButton={false}
                                locale={
                                  Object {
                                    "items_per_page": "/ page",
                                    "jump_to": "Go to",
                                    "jump_to_confirm": "confirm",
                                    "next_3": "Next 3 Pages",
                                    "next_5": "Next 5 Pages",
                                    "next_page": "Next Page",
                                    "page": "",
                                    "prev_3": "Previous 3 Pages",
                                    "prev_5": "Previous 5 Pages",
                                    "prev_page": "Previous Page",
                                  }
                                }
                                pageSize={20}
                                pageSizeOptions={
                                  Array [
                                    "10",
                                    "20",
                                    "50",
                                    "100",
                                  ]
                                }
                                quickGo={null}
                                rootPrefixCls="ant-pagination"
                                selectComponentClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "OptGroup": [Function],
                                    "Option": [Function],
                                    "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                    "render": [Function],
                                  }
                                }
                                selectPrefixCls="ant-select"
                              />
                            </ul>
                          </Pagination>
                        </LocaleReceiver>
                      </Pagination>
                    </div>
                  </div>
                </List>
              </div>
            </Item>
          </div>
        </Space>
      </PostList>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`List component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <PostList
        actions={
          Array [
            "update",
            "delete",
          ]
        }
        format={
          Object {
            "id": 1,
            "name": "article",
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Template
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                    }
                  }
                />
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <ForwardRef(InternalForm)
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  initialValues={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 20,
                      "page": 1,
                    }
                  }
                  layout="inline"
                  name="filters"
                  onFinish={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <SizeContextProvider>
                    <ForwardRef(Form)
                      className="ant-form ant-form-inline"
                      form={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": "filters",
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                        }
                      }
                      id="filters"
                      initialValues={
                        Object {
                          "format": Array [
                            1,
                          ],
                          "limit": 20,
                          "page": 1,
                        }
                      }
                      name="filters"
                      onFinish={[Function]}
                      onFinishFailed={[Function]}
                      style={
                        Object {
                          "maxWidth": "100%",
                        }
                      }
                    >
                      <form
                        className="ant-form ant-form-inline"
                        id="filters"
                        onSubmit={[Function]}
                        style={
                          Object {
                            "maxWidth": "100%",
                          }
                        }
                      >
                        <FormItem
                          label="Search"
                          name="q"
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                        >
                          <WrapperField
                            label="Search"
                            messageVariables={
                              Object {
                                "label": "Search",
                              }
                            }
                            name="q"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_q"
                              label="Search"
                              messageVariables={
                                Object {
                                  "label": "Search",
                                }
                              }
                              name={
                                Array [
                                  "q",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "25%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_q"
                                    label="Search"
                                    name="q"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_q"
                                          title="Search"
                                        >
                                          Search
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Search"
                                    name={
                                      Array [
                                        "q",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "25%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Input
                                                id="filters_q"
                                                onChange={[Function]}
                                                placeholder="search posts"
                                                type="text"
                                              >
                                                <ClearableLabeledInput
                                                  bordered={true}
                                                  element={
                                                    <input
                                                      className="ant-input"
                                                      id="filters_q"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="search posts"
                                                      type="text"
                                                    />
                                                  }
                                                  focused={false}
                                                  handleReset={[Function]}
                                                  id="filters_q"
                                                  inputType="input"
                                                  onChange={[Function]}
                                                  placeholder="search posts"
                                                  prefixCls="ant-input"
                                                  triggerFocus={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="filters_q"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="search posts"
                                                    type="text"
                                                    value=""
                                                  />
                                                </ClearableLabeledInput>
                                              </Input>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Sort"
                          name="sort"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Sort"
                            messageVariables={
                              Object {
                                "label": "Sort",
                              }
                            }
                            name="sort"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_sort"
                              label="Sort"
                              messageVariables={
                                Object {
                                  "label": "Sort",
                                }
                              }
                              name={
                                Array [
                                  "sort",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_sort"
                                    label="Sort"
                                    name="sort"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_sort"
                                          title="Sort"
                                        >
                                          Sort
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Sort"
                                    name={
                                      Array [
                                        "sort",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <ForwardRef(InternalSelect)
                                                defaultValue="desc"
                                                id="filters_sort"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <Select
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue="desc"
                                                  dropdownClassName=""
                                                  id="filters_sort"
                                                  inputIcon={[Function]}
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                  transitionName="slide-up"
                                                >
                                                  <ForwardRef(Select)
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue="desc"
                                                    dropdownClassName=""
                                                    id="filters_sort"
                                                    inputIcon={[Function]}
                                                    listHeight={256}
                                                    listItemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        dropdownClassName=""
                                                        empty={false}
                                                        getTriggerDOMNode={[Function]}
                                                        popupElement={
                                                          <ForwardRef(OptionList)
                                                            childrenAsData={true}
                                                            defaultActiveFirstOption={true}
                                                            flattenOptions={
                                                              Array [
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Latest",
                                                                    "key": null,
                                                                    "value": "desc",
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "desc",
                                                                },
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Old",
                                                                    "key": null,
                                                                    "value": "asc",
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "asc",
                                                                },
                                                              ]
                                                            }
                                                            height={256}
                                                            id="filters_sort"
                                                            itemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onActiveValue={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "children": "Latest",
                                                                  "key": null,
                                                                  "value": "desc",
                                                                },
                                                                Object {
                                                                  "children": "Old",
                                                                  "key": null,
                                                                  "value": "asc",
                                                                },
                                                              ]
                                                            }
                                                            prefixCls="ant-select"
                                                            searchValue=""
                                                            values={
                                                              Set {
                                                                "desc",
                                                              }
                                                            }
                                                            virtual={true}
                                                          />
                                                        }
                                                        prefixCls="ant-select"
                                                        transitionName="slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div>
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={
                                                                  Array [
                                                                    Object {
                                                                      "data": Object {
                                                                        "children": "Latest",
                                                                        "key": null,
                                                                        "value": "desc",
                                                                      },
                                                                      "groupOption": false,
                                                                      "key": "desc",
                                                                    },
                                                                    Object {
                                                                      "data": Object {
                                                                        "children": "Old",
                                                                        "key": null,
                                                                        "value": "asc",
                                                                      },
                                                                      "groupOption": false,
                                                                      "key": "asc",
                                                                    },
                                                                  ]
                                                                }
                                                                height={256}
                                                                id="filters_sort"
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "children": "Latest",
                                                                      "key": null,
                                                                      "value": "desc",
                                                                    },
                                                                    Object {
                                                                      "children": "Old",
                                                                      "key": null,
                                                                      "value": "asc",
                                                                    },
                                                                  ]
                                                                }
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    "desc",
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName=""
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            accessibilityIndex={0}
                                                            activeValue={null}
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="desc"
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="Latest"
                                                                  >
                                                                    Latest
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "maxWidth": "160px",
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "desc",
                                                                  "label": "Latest",
                                                                  "value": "desc",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue="desc"
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_sort_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_sort_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_sort_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_sort"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                        title="Latest"
                                                                      >
                                                                        Latest
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                id="filters_sort"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                listHeight={256}
                                                                listItemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "maxWidth": "160px",
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": "desc",
                                                                      "label": "Latest",
                                                                      "value": "desc",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    accessibilityIndex={0}
                                                                    attrs={Object {}}
                                                                    editable={false}
                                                                    id="filters_sort"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_sort_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_sort_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_sort_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      id="filters_sort"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-item"
                                                                  title="Latest"
                                                                >
                                                                  Latest
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  className=""
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className=""
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </ForwardRef(Select)>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Tags"
                          name="tags"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Tags"
                            messageVariables={
                              Object {
                                "label": "Tags",
                              }
                            }
                            name="tags"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_tags"
                              label="Tags"
                              messageVariables={
                                Object {
                                  "label": "Tags",
                                }
                              }
                              name={
                                Array [
                                  "tags",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_tags"
                                    label="Tags"
                                    name="tags"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_tags"
                                          title="Tags"
                                        >
                                          Tags
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Tags"
                                    name={
                                      Array [
                                        "tags",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Selector
                                                action="Tags"
                                                id="filters_tags"
                                                mode="multiple"
                                                onChange={[Function]}
                                                placeholder="Filter Tags"
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(InternalSelect)
                                                  allowClear={true}
                                                  bordered={true}
                                                  defaultValue={Array []}
                                                  filterOption={[Function]}
                                                  listHeight={128}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  placeholder="Filter Tags"
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                >
                                                  <Select
                                                    allowClear={true}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    inputIcon={[Function]}
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Filter Tags"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <ForwardRef(Select)
                                                      allowClear={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Filter Tags"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                      transitionName="slide-up"
                                                    >
                                                      <div
                                                        className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                      >
                                                        <SelectTrigger
                                                          containerWidth={null}
                                                          dropdownClassName=""
                                                          empty={false}
                                                          getTriggerDOMNode={[Function]}
                                                          popupElement={
                                                            <ForwardRef(OptionList)
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={
                                                                Array [
                                                                  Object {
                                                                    "data": Object {
                                                                      "children": "cricket",
                                                                      "key": "tags1",
                                                                      "value": 1,
                                                                    },
                                                                    "groupOption": false,
                                                                    "key": "tags1",
                                                                  },
                                                                ]
                                                              }
                                                              height={128}
                                                              id="rc_select_TEST_OR_SSR"
                                                              itemHeight={24}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onActiveValue={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onScroll={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "children": "cricket",
                                                                    "key": "tags1",
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              prefixCls="ant-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          }
                                                          prefixCls="ant-select"
                                                          transitionName="slide-up"
                                                        >
                                                          <Trigger
                                                            action={Array []}
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottomLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            getTriggerDOMNode={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            popup={
                                                              <div>
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "cricket",
                                                                          "key": "tags1",
                                                                          "value": 1,
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "tags1",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={128}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onScroll={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "cricket",
                                                                        "key": "tags1",
                                                                        "value": 1,
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={Set {}}
                                                                  virtual={true}
                                                                />
                                                              </div>
                                                            }
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="bottomLeft"
                                                            popupStyle={
                                                              Object {
                                                                "minWidth": null,
                                                                "width": null,
                                                              }
                                                            }
                                                            popupTransitionName="slide-up"
                                                            prefixCls="ant-select-dropdown"
                                                            showAction={Array []}
                                                          >
                                                            <Selector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Filter Tags
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              id="rc_select_TEST_OR_SSR"
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              key="trigger"
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Filter Tags"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              style={
                                                                Object {
                                                                  "maxWidth": "160px",
                                                                }
                                                              }
                                                              tokenWithEnter={false}
                                                              transitionName="slide-up"
                                                              values={Array []}
                                                            >
                                                              <div
                                                                className="ant-select-selector"
                                                                onClick={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectSelector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  allowClear={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={Array []}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-placeholder"
                                                                        >
                                                                          Filter Tags
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />,
                                                                    }
                                                                  }
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  mode="multiple"
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onInputChange={[Function]}
                                                                  onInputCompositionEnd={[Function]}
                                                                  onInputCompositionStart={[Function]}
                                                                  onInputKeyDown={[Function]}
                                                                  onInputMouseDown={[Function]}
                                                                  onInputPaste={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  placeholder="Filter Tags"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={true}
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "160px",
                                                                    }
                                                                  }
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  values={Array []}
                                                                >
                                                                  <CSSMotionList
                                                                    component={false}
                                                                    keys={Array []}
                                                                    motionAppear={true}
                                                                  />
                                                                  <span
                                                                    className="ant-select-selection-search"
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </span>
                                                                  <span
                                                                    className="ant-select-selection-placeholder"
                                                                  >
                                                                    Filter Tags
                                                                  </span>
                                                                </SelectSelector>
                                                              </div>
                                                            </Selector>
                                                          </Trigger>
                                                        </SelectTrigger>
                                                      </div>
                                                    </ForwardRef(Select)>
                                                  </Select>
                                                </ForwardRef(InternalSelect)>
                                              </Selector>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem
                          label="Categories"
                          name="categories"
                          style={
                            Object {
                              "width": "15%",
                            }
                          }
                        >
                          <WrapperField
                            label="Categories"
                            messageVariables={
                              Object {
                                "label": "Categories",
                              }
                            }
                            name="categories"
                            onReset={[Function]}
                            style={
                              Object {
                                "width": "15%",
                              }
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                          >
                            <Field
                              fieldContext={
                                Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": "filters",
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                  "validateTrigger": "onChange",
                                }
                              }
                              key="_categories"
                              label="Categories"
                              messageVariables={
                                Object {
                                  "label": "Categories",
                                }
                              }
                              name={
                                Array [
                                  "categories",
                                ]
                              }
                              onReset={[Function]}
                              style={
                                Object {
                                  "width": "15%",
                                }
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                              valuePropName="value"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                                style={
                                  Object {
                                    "width": "15%",
                                  }
                                }
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={
                                    Object {
                                      "width": "15%",
                                    }
                                  }
                                >
                                  <FormItemLabel
                                    htmlFor="filters_categories"
                                    label="Categories"
                                    name="categories"
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_categories"
                                          title="Categories"
                                        >
                                          Categories
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Categories"
                                    name={
                                      Array [
                                        "categories",
                                      ]
                                    }
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    style={
                                      Object {
                                        "width": "15%",
                                      }
                                    }
                                    touched={false}
                                    validateStatus=""
                                    validating={false}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              update={2}
                                            >
                                              <Selector
                                                action="Categories"
                                                id="filters_categories"
                                                mode="multiple"
                                                onChange={[Function]}
                                                placeholder="Filter Categories"
                                                style={
                                                  Object {
                                                    "maxWidth": "160px",
                                                  }
                                                }
                                              >
                                                <ForwardRef(InternalSelect)
                                                  allowClear={true}
                                                  bordered={true}
                                                  defaultValue={Array []}
                                                  filterOption={[Function]}
                                                  listHeight={128}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  placeholder="Filter Categories"
                                                  style={
                                                    Object {
                                                      "maxWidth": "160px",
                                                    }
                                                  }
                                                >
                                                  <Select
                                                    allowClear={true}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    defaultValue={Array []}
                                                    dropdownClassName=""
                                                    filterOption={[Function]}
                                                    inputIcon={[Function]}
                                                    listHeight={128}
                                                    listItemHeight={24}
                                                    loading={false}
                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                    mode="multiple"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Filter Categories"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    transitionName="slide-up"
                                                  >
                                                    <ForwardRef(Select)
                                                      allowClear={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Filter Categories"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      style={
                                                        Object {
                                                          "maxWidth": "160px",
                                                        }
                                                      }
                                                      transitionName="slide-up"
                                                    >
                                                      <div
                                                        className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                      >
                                                        <SelectTrigger
                                                          containerWidth={null}
                                                          dropdownClassName=""
                                                          empty={false}
                                                          getTriggerDOMNode={[Function]}
                                                          popupElement={
                                                            <ForwardRef(OptionList)
                                                              childrenAsData={true}
                                                              defaultActiveFirstOption={true}
                                                              flattenOptions={
                                                                Array [
                                                                  Object {
                                                                    "data": Object {
                                                                      "children": "Andhra Pradesh",
                                                                      "key": "categories1",
                                                                      "value": 1,
                                                                    },
                                                                    "groupOption": false,
                                                                    "key": "categories1",
                                                                  },
                                                                ]
                                                              }
                                                              height={128}
                                                              id="rc_select_TEST_OR_SSR"
                                                              itemHeight={24}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onActiveValue={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onScroll={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "children": "Andhra Pradesh",
                                                                    "key": "categories1",
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              prefixCls="ant-select"
                                                              searchValue=""
                                                              values={Set {}}
                                                              virtual={true}
                                                            />
                                                          }
                                                          prefixCls="ant-select"
                                                          transitionName="slide-up"
                                                        >
                                                          <Trigger
                                                            action={Array []}
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottomLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 0,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            getTriggerDOMNode={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            popup={
                                                              <div>
                                                                <ForwardRef(OptionList)
                                                                  childrenAsData={true}
                                                                  defaultActiveFirstOption={true}
                                                                  flattenOptions={
                                                                    Array [
                                                                      Object {
                                                                        "data": Object {
                                                                          "children": "Andhra Pradesh",
                                                                          "key": "categories1",
                                                                          "value": 1,
                                                                        },
                                                                        "groupOption": false,
                                                                        "key": "categories1",
                                                                      },
                                                                    ]
                                                                  }
                                                                  height={128}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  itemHeight={24}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onActiveValue={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onScroll={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "children": "Andhra Pradesh",
                                                                        "key": "categories1",
                                                                        "value": 1,
                                                                      },
                                                                    ]
                                                                  }
                                                                  prefixCls="ant-select"
                                                                  searchValue=""
                                                                  values={Set {}}
                                                                  virtual={true}
                                                                />
                                                              </div>
                                                            }
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="bottomLeft"
                                                            popupStyle={
                                                              Object {
                                                                "minWidth": null,
                                                                "width": null,
                                                              }
                                                            }
                                                            popupTransitionName="slide-up"
                                                            prefixCls="ant-select-dropdown"
                                                            showAction={Array []}
                                                          >
                                                            <Selector
                                                              accessibilityIndex={0}
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className=""
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              defaultValue={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Filter Categories
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              filterOption={[Function]}
                                                              id="rc_select_TEST_OR_SSR"
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              key="trigger"
                                                              listHeight={128}
                                                              listItemHeight={24}
                                                              loading={false}
                                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                              mode="multiple"
                                                              multiple={true}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onSelect={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Filter Categories"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              style={
                                                                Object {
                                                                  "maxWidth": "160px",
                                                                }
                                                              }
                                                              tokenWithEnter={false}
                                                              transitionName="slide-up"
                                                              values={Array []}
                                                            >
                                                              <div
                                                                className="ant-select-selector"
                                                                onClick={[Function]}
                                                                onMouseDown={[Function]}
                                                              >
                                                                <SelectSelector
                                                                  accessibilityIndex={0}
                                                                  activeValue={null}
                                                                  allowClear={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={Array []}
                                                                  domRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="ant-select-selector"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </span>
                                                                        <span
                                                                          class="ant-select-selection-placeholder"
                                                                        >
                                                                          Filter Categories
                                                                        </span>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  inputIcon={[Function]}
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />,
                                                                    }
                                                                  }
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                  mode="multiple"
                                                                  multiple={true}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onInputChange={[Function]}
                                                                  onInputCompositionEnd={[Function]}
                                                                  onInputCompositionStart={[Function]}
                                                                  onInputKeyDown={[Function]}
                                                                  onInputMouseDown={[Function]}
                                                                  onInputPaste={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  onSearchSubmit={[Function]}
                                                                  onSelect={[Function]}
                                                                  onToggleOpen={[Function]}
                                                                  placeholder="Filter Categories"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  showSearch={true}
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "160px",
                                                                    }
                                                                  }
                                                                  tokenWithEnter={false}
                                                                  transitionName="slide-up"
                                                                  values={Array []}
                                                                >
                                                                  <CSSMotionList
                                                                    component={false}
                                                                    keys={Array []}
                                                                    motionAppear={true}
                                                                  />
                                                                  <span
                                                                    className="ant-select-selection-search"
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </span>
                                                                  <span
                                                                    className="ant-select-selection-placeholder"
                                                                  >
                                                                    Filter Categories
                                                                  </span>
                                                                </SelectSelector>
                                                              </div>
                                                            </Selector>
                                                          </Trigger>
                                                        </SelectTrigger>
                                                      </div>
                                                    </ForwardRef(Select)>
                                                  </Select>
                                                </ForwardRef(InternalSelect)>
                                              </Selector>
                                            </Component>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </Field>
                          </WrapperField>
                        </FormItem>
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                validateStatus=""
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          block={false}
                                          ghost={false}
                                          htmlType="submit"
                                          loading={false}
                                          type="primary"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Submit
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </form>
                    </ForwardRef(Form)>
                  </SizeContextProvider>
                </ForwardRef(InternalForm)>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={2}
              key="ant-space-item-2"
              marginDirection="marginRight"
              size="small"
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <List
                  bordered={true}
                  className="post-list"
                  dataSource={
                    Array [
                      Object {
                        "authors": Array [],
                        "categories": Array [
                          1,
                        ],
                        "claims": Array [],
                        "created_at": "2020-09-09T06:53:03.018593Z",
                        "deleted_at": null,
                        "description": Object {
                          "blocks": Array [
                            Object {
                              "data": Object {
                                "text": "The United States of America (USA) is one of the oldest modern democracies in the world. Over its existence as a democracy for nearly two and half centuries, it has developed institutions and practices which strengthen the idea of democracy. Democracy wrests the choice in the people to choose a government to preside over the administration. Hence it is imperative that the people know about the political party or the individual that they would be voting for. This knowledge includes – the ideology, stance on various issues, vision etc.&nbsp;",
                              },
                              "type": "paragraph",
                            },
                          ],
                          "time": 1599648677547,
                          "version": "2.18.0",
                        },
                        "excerpt": "One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. ",
                        "featured_medium_id": 1,
                        "format": 1,
                        "format_id": 1,
                        "id": 1,
                        "is_featured": false,
                        "is_highlighted": false,
                        "is_sticky": false,
                        "medium": Object {
                          "alt_text": "example",
                          "id": 1,
                          "url": Object {
                            "raw": "http://example.com",
                          },
                        },
                        "published_date": "0001-01-01T00:00:00Z",
                        "slug": "explainer-the-us-presidential-debates-history-format",
                        "space_id": 1,
                        "status": "Publish",
                        "subtitle": "",
                        "tags": Array [
                          1,
                        ],
                        "title": "Explainer: The US Presidential Debates – History & Format",
                        "updated_at": "2020-09-09T10:51:20.681562Z",
                      },
                    ]
                  }
                  itemLayout="vertical"
                  loading={false}
                  pagination={
                    Object {
                      "current": 1,
                      "onChange": [Function],
                      "pageSize": 20,
                      "total": 1,
                    }
                  }
                  renderItem={[Function]}
                >
                  <div
                    className="ant-list ant-list-vertical ant-list-split ant-list-bordered ant-list-something-after-last-item post-list"
                  >
                    <Spin
                      size="default"
                      spinning={false}
                      wrapperClassName=""
                    >
                      <div
                        className="ant-spin-nested-loading"
                      >
                        <div
                          className="ant-spin-container"
                          key="container"
                        >
                          <ul
                            className="ant-list-items"
                          >
                            <Item
                              actions={
                                Array [
                                  <ForwardRef
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                    to="/fact-checks/1/edit"
                                  >
                                    <ForwardRef(InternalButton)
                                      block={false}
                                      disabled={false}
                                      ghost={false}
                                      htmlType="button"
                                      icon={<ForwardRef(EditOutlined) />}
                                      loading={false}
                                    >
                                      Edit
                                    </ForwardRef(InternalButton)>
                                  </ForwardRef>,
                                  <ForwardRef
                                    disabled={false}
                                    icon={<ForwardRef(ExclamationCircleFilled) />}
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    title="Sure to Delete?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <ForwardRef(InternalButton)
                                      block={false}
                                      disabled={false}
                                      ghost={false}
                                      htmlType="button"
                                      icon={<ForwardRef(DeleteOutlined) />}
                                      loading={false}
                                    >
                                      Delete
                                    </ForwardRef(InternalButton)>
                                  </ForwardRef>,
                                ]
                              }
                              extra={
                                <img
                                  alt="example"
                                  src=""
                                  style={
                                    Object {
                                      "height": "100%",
                                      "width": "100%",
                                    }
                                  }
                                />
                              }
                            >
                              <li
                                className="ant-list-item"
                              >
                                <div
                                  className="ant-list-item-main"
                                  key="content"
                                >
                                  <Meta
                                    description="One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. "
                                    title={
                                      <ForwardRef
                                        to="/fact-checks/1/edit"
                                      >
                                        Explainer: The US Presidential Debates – History & Format
                                      </ForwardRef>
                                    }
                                  >
                                    <div
                                      className="ant-list-item-meta"
                                    >
                                      <div
                                        className="ant-list-item-meta-content"
                                      >
                                        <h4
                                          className="ant-list-item-meta-title"
                                        >
                                          <Link
                                            to="/fact-checks/1/edit"
                                          >
                                            <LinkAnchor
                                              href="/fact-checks/1/edit"
                                              navigate={[Function]}
                                            >
                                              <a
                                                href="/fact-checks/1/edit"
                                                onClick={[Function]}
                                              >
                                                Explainer: The US Presidential Debates – History & Format
                                              </a>
                                            </LinkAnchor>
                                          </Link>
                                        </h4>
                                        <div
                                          className="ant-list-item-meta-description"
                                        >
                                          One of the unique aspects of the US Presidential election is the face to face debate of the Presidential nominees. 
                                        </div>
                                      </div>
                                    </div>
                                  </Meta>
                                  <ul
                                    className="ant-list-item-action"
                                    key="actions"
                                  >
                                    <li
                                      key="ant-list-item-action-0"
                                    >
                                      <Link
                                        style={
                                          Object {
                                            "marginRight": 8,
                                          }
                                        }
                                        to="/fact-checks/1/edit"
                                      >
                                        <LinkAnchor
                                          href="/fact-checks/1/edit"
                                          navigate={[Function]}
                                          style={
                                            Object {
                                              "marginRight": 8,
                                            }
                                          }
                                        >
                                          <a
                                            href="/fact-checks/1/edit"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "marginRight": 8,
                                              }
                                            }
                                          >
                                            <Button
                                              block={false}
                                              disabled={false}
                                              ghost={false}
                                              htmlType="button"
                                              icon={<ForwardRef(EditOutlined) />}
                                              loading={false}
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(EditOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "edit",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="edit"
                                                        className="anticon anticon-edit"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "edit",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="edit"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-edit"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                                                              key="svg-edit-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(EditOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Edit
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                      <em
                                        className="ant-list-item-action-split"
                                      />
                                    </li>
                                    <li
                                      key="ant-list-item-action-1"
                                    >
                                      <ForwardRef
                                        disabled={false}
                                        icon={<ForwardRef(ExclamationCircleFilled) />}
                                        okType="primary"
                                        onConfirm={[Function]}
                                        placement="top"
                                        title="Sure to Delete?"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Tooltip
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          disabled={false}
                                          icon={<ForwardRef(ExclamationCircleFilled) />}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          okType="primary"
                                          onConfirm={[Function]}
                                          onVisibleChange={[Function]}
                                          overlay={
                                            <LocaleReceiver
                                              componentName="Popconfirm"
                                              defaultLocale={
                                                Object {
                                                  "cancelText": "Cancel",
                                                  "okText": "OK",
                                                }
                                              }
                                            >
                                              [Function]
                                            </LocaleReceiver>
                                          }
                                          overlayClassName="ant-popconfirm"
                                          placement="top"
                                          prefixCls="ant-popover"
                                          title="Sure to Delete?"
                                          transitionName="zoom-big"
                                          trigger="click"
                                        >
                                          <ForwardRef(Tooltip)
                                            arrowContent={
                                              <span
                                                className="ant-popover-arrow-content"
                                              />
                                            }
                                            arrowPointAtCenter={false}
                                            autoAdjustOverflow={true}
                                            builtinPlacements={
                                              Object {
                                                "bottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tc",
                                                    "bc",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "bottomLeft": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "bl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "bottomRight": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "br",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "left": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "cr",
                                                    "cl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "leftBottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "bl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "leftTop": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    -4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "tl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "right": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "cl",
                                                    "cr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "rightBottom": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "br",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "rightTop": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    4,
                                                    0,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "tr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "top": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bc",
                                                    "tc",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "topLeft": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "tl",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                                "topRight": Object {
                                                  "ignoreShake": true,
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 1,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "tr",
                                                  ],
                                                  "targetOffset": Array [
                                                    0,
                                                    0,
                                                  ],
                                                },
                                              }
                                            }
                                            disabled={false}
                                            icon={<ForwardRef(ExclamationCircleFilled) />}
                                            mouseEnterDelay={0.1}
                                            mouseLeaveDelay={0.1}
                                            okType="primary"
                                            onConfirm={[Function]}
                                            onPopupAlign={[Function]}
                                            onVisibleChange={[Function]}
                                            overlay={
                                              <LocaleReceiver
                                                componentName="Popconfirm"
                                                defaultLocale={
                                                  Object {
                                                    "cancelText": "Cancel",
                                                    "okText": "OK",
                                                  }
                                                }
                                              >
                                                [Function]
                                              </LocaleReceiver>
                                            }
                                            overlayClassName="ant-popconfirm"
                                            placement="top"
                                            prefixCls="ant-popover"
                                            title="Sure to Delete?"
                                            transitionName="zoom-big"
                                            trigger="click"
                                          >
                                            <Trigger
                                              action="click"
                                              afterPopupVisibleChange={[Function]}
                                              arrowContent={
                                                <span
                                                  className="ant-popover-arrow-content"
                                                />
                                              }
                                              arrowPointAtCenter={false}
                                              autoAdjustOverflow={true}
                                              autoDestroy={false}
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tc",
                                                      "bc",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "bottomLeft": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "bottomRight": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "br",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "left": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "cr",
                                                      "cl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "leftBottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "bl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "leftTop": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      -4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tr",
                                                      "tl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "right": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "cl",
                                                      "cr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "rightBottom": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "br",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "rightTop": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      4,
                                                      0,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "tr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "top": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bc",
                                                      "tc",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                  "topRight": Object {
                                                    "ignoreShake": true,
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 1,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "br",
                                                      "tr",
                                                    ],
                                                    "targetOffset": Array [
                                                      0,
                                                      0,
                                                    ],
                                                  },
                                                }
                                              }
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              disabled={false}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={Array []}
                                              icon={<ForwardRef(ExclamationCircleFilled) />}
                                              mask={false}
                                              maskClosable={true}
                                              mouseEnterDelay={0.1}
                                              mouseLeaveDelay={0.1}
                                              okType="primary"
                                              onConfirm={[Function]}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              overlay={
                                                <LocaleReceiver
                                                  componentName="Popconfirm"
                                                  defaultLocale={
                                                    Object {
                                                      "cancelText": "Cancel",
                                                      "okText": "OK",
                                                    }
                                                  }
                                                >
                                                  [Function]
                                                </LocaleReceiver>
                                              }
                                              popup={[Function]}
                                              popupAlign={Object {}}
                                              popupClassName="ant-popconfirm"
                                              popupPlacement="top"
                                              popupStyle={Object {}}
                                              popupTransitionName="zoom-big"
                                              prefixCls="ant-popover"
                                              showAction={Array []}
                                              title="Sure to Delete?"
                                            >
                                              <Button
                                                block={false}
                                                disabled={false}
                                                ghost={false}
                                                htmlType="button"
                                                icon={<ForwardRef(DeleteOutlined) />}
                                                key="trigger"
                                                loading={false}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                onTouchStart={[Function]}
                                              >
                                                <Wave>
                                                  <button
                                                    className="ant-btn"
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(DeleteOutlined)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "delete",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="delete"
                                                          className="anticon anticon-delete"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "delete",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="delete"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-delete"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                key="svg-delete-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(DeleteOutlined)>
                                                    <span
                                                      key=".0"
                                                    >
                                                      Delete
                                                    </span>
                                                  </button>
                                                </Wave>
                                              </Button>
                                            </Trigger>
                                          </ForwardRef(Tooltip)>
                                        </Tooltip>
                                      </ForwardRef>
                                    </li>
                                  </ul>
                                </div>
                                <div
                                  className="ant-list-item-extra"
                                  key="extra"
                                >
                                  <img
                                    alt="example"
                                    src=""
                                    style={
                                      Object {
                                        "height": "100%",
                                        "width": "100%",
                                      }
                                    }
                                  />
                                </div>
                              </li>
                            </Item>
                          </ul>
                        </div>
                      </div>
                    </Spin>
                    <div
                      className="ant-list-pagination"
                    >
                      <Pagination
                        current={1}
                        onChange={[Function]}
                        onShowSizeChange={[Function]}
                        pageSize={20}
                        total={1}
                      >
                        <LocaleReceiver
                          componentName="Pagination"
                          defaultLocale={
                            Object {
                              "items_per_page": "/ page",
                              "jump_to": "Go to",
                              "jump_to_confirm": "confirm",
                              "next_3": "Next 3 Pages",
                              "next_5": "Next 5 Pages",
                              "next_page": "Next Page",
                              "page": "",
                              "prev_3": "Previous 3 Pages",
                              "prev_5": "Previous 5 Pages",
                              "prev_page": "Previous Page",
                            }
                          }
                        >
                          <Pagination
                            className=""
                            current={1}
                            defaultCurrent={1}
                            defaultPageSize={10}
                            hideOnSinglePage={false}
                            itemRender={[Function]}
                            jumpNextIcon={
                              <a
                                className="ant-pagination-item-link"
                              >
                                <div
                                  className="ant-pagination-item-container"
                                >
                                  <ForwardRef(DoubleRightOutlined)
                                    className="ant-pagination-item-link-icon"
                                  />
                                  <span
                                    className="ant-pagination-item-ellipsis"
                                  >
                                    •••
                                  </span>
                                </div>
                              </a>
                            }
                            jumpPrevIcon={
                              <a
                                className="ant-pagination-item-link"
                              >
                                <div
                                  className="ant-pagination-item-container"
                                >
                                  <ForwardRef(DoubleLeftOutlined)
                                    className="ant-pagination-item-link-icon"
                                  />
                                  <span
                                    className="ant-pagination-item-ellipsis"
                                  >
                                    •••
                                  </span>
                                </div>
                              </a>
                            }
                            locale={
                              Object {
                                "items_per_page": "/ page",
                                "jump_to": "Go to",
                                "jump_to_confirm": "confirm",
                                "next_3": "Next 3 Pages",
                                "next_5": "Next 5 Pages",
                                "next_page": "Next Page",
                                "page": "",
                                "prev_3": "Previous 3 Pages",
                                "prev_5": "Previous 5 Pages",
                                "prev_page": "Previous Page",
                              }
                            }
                            nextIcon={
                              <button
                                className="ant-pagination-item-link"
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(RightOutlined) />
                              </button>
                            }
                            onChange={[Function]}
                            onShowSizeChange={[Function]}
                            pageSize={20}
                            prefixCls="ant-pagination"
                            prevIcon={
                              <button
                                className="ant-pagination-item-link"
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(LeftOutlined) />
                              </button>
                            }
                            selectComponentClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "OptGroup": [Function],
                                "Option": [Function],
                                "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                "render": [Function],
                              }
                            }
                            selectPrefixCls="ant-select"
                            showLessItems={false}
                            showPrevNextJumpers={true}
                            showQuickJumper={false}
                            showTitle={true}
                            style={Object {}}
                            total={1}
                            totalBoundaryShowSizeChanger={50}
                          >
                            <ul
                              className="ant-pagination"
                              style={Object {}}
                              unselectable="unselectable"
                            >
                              <li
                                aria-disabled={true}
                                className="ant-pagination-prev ant-pagination-disabled"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                tabIndex={null}
                                title="Previous Page"
                              >
                                <button
                                  className="ant-pagination-item-link"
                                  disabled={true}
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <ForwardRef(LeftOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "left",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="left"
                                        className="anticon anticon-left"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "left",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="left"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-left"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                                              key="svg-left-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(LeftOutlined)>
                                </button>
                              </li>
                              <Pager
                                active={true}
                                itemRender={[Function]}
                                key="1"
                                locale={
                                  Object {
                                    "items_per_page": "/ page",
                                    "jump_to": "Go to",
                                    "jump_to_confirm": "confirm",
                                    "next_3": "Next 3 Pages",
                                    "next_5": "Next 5 Pages",
                                    "next_page": "Next Page",
                                    "page": "",
                                    "prev_3": "Previous 3 Pages",
                                    "prev_5": "Previous 5 Pages",
                                    "prev_page": "Previous Page",
                                  }
                                }
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                page={1}
                                rootPrefixCls="ant-pagination"
                                showTitle={true}
                              >
                                <li
                                  className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  tabIndex="0"
                                  title={1}
                                >
                                  <a
                                    rel="nofollow"
                                  >
                                    1
                                  </a>
                                </li>
                              </Pager>
                              <li
                                aria-disabled={true}
                                className="ant-pagination-next ant-pagination-disabled"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                tabIndex={null}
                                title="Next Page"
                              >
                                <button
                                  className="ant-pagination-item-link"
                                  disabled={true}
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <ForwardRef(RightOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="right"
                                        className="anticon anticon-right"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "right",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="right"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-right"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                              key="svg-right-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(RightOutlined)>
                                </button>
                              </li>
                              <Options
                                changeSize={null}
                                current={1}
                                goButton={false}
                                locale={
                                  Object {
                                    "items_per_page": "/ page",
                                    "jump_to": "Go to",
                                    "jump_to_confirm": "confirm",
                                    "next_3": "Next 3 Pages",
                                    "next_5": "Next 5 Pages",
                                    "next_page": "Next Page",
                                    "page": "",
                                    "prev_3": "Previous 3 Pages",
                                    "prev_5": "Previous 5 Pages",
                                    "prev_page": "Previous Page",
                                  }
                                }
                                pageSize={20}
                                pageSizeOptions={
                                  Array [
                                    "10",
                                    "20",
                                    "50",
                                    "100",
                                  ]
                                }
                                quickGo={null}
                                rootPrefixCls="ant-pagination"
                                selectComponentClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "OptGroup": [Function],
                                    "Option": [Function],
                                    "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                                    "render": [Function],
                                  }
                                }
                                selectPrefixCls="ant-select"
                              />
                            </ul>
                          </Pagination>
                        </LocaleReceiver>
                      </Pagination>
                    </div>
                  </div>
                </List>
              </div>
            </Item>
          </div>
        </Space>
      </PostList>
    </Router>
  </BrowserRouter>
</Provider>
`;
