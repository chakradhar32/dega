// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Categories List component Snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Selector
    action="Categories"
    mode="multiple"
  >
    <ForwardRef(InternalSelect)
      allowClear={true}
      bordered={true}
      defaultValue={Array []}
      filterOption={[Function]}
      listHeight={128}
      loading={false}
      mode="multiple"
      notFoundContent={null}
      onChange={[Function]}
      onPopupScroll={[Function]}
      onSearch={[Function]}
      placeholder="Select categories"
    >
      <Select
        allowClear={true}
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        defaultValue={Array []}
        dropdownClassName=""
        filterOption={[Function]}
        inputIcon={[Function]}
        listHeight={128}
        listItemHeight={24}
        loading={false}
        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
        mode="multiple"
        notFoundContent={null}
        onChange={[Function]}
        onPopupScroll={[Function]}
        onSearch={[Function]}
        placeholder="Select categories"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
      >
        <ForwardRef(Select)
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          defaultValue={Array []}
          dropdownClassName=""
          filterOption={[Function]}
          inputIcon={[Function]}
          listHeight={128}
          listItemHeight={24}
          loading={false}
          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
          mode="multiple"
          notFoundContent={null}
          onChange={[Function]}
          onPopupScroll={[Function]}
          onSearch={[Function]}
          placeholder="Select categories"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
        >
          <div
            className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={null}
              dropdownClassName=""
              empty={true}
              getTriggerDOMNode={[Function]}
              popupElement={
                <ForwardRef(OptionList)
                  childrenAsData={true}
                  defaultActiveFirstOption={true}
                  flattenOptions={Array []}
                  height={128}
                  itemHeight={24}
                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                  multiple={true}
                  notFoundContent={null}
                  onActiveValue={[Function]}
                  onMouseEnter={[Function]}
                  onScroll={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  options={Array []}
                  prefixCls="ant-select"
                  searchValue=""
                  values={Set {}}
                  virtual={true}
                />
              }
              prefixCls="ant-select"
              transitionName="slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div>
                    <ForwardRef(OptionList)
                      childrenAsData={true}
                      defaultActiveFirstOption={true}
                      flattenOptions={Array []}
                      height={128}
                      itemHeight={24}
                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                      multiple={true}
                      notFoundContent={null}
                      onActiveValue={[Function]}
                      onMouseEnter={[Function]}
                      onScroll={[Function]}
                      onSelect={[Function]}
                      onToggleOpen={[Function]}
                      options={Array []}
                      prefixCls="ant-select"
                      searchValue=""
                      values={Set {}}
                      virtual={true}
                    />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName="ant-select-dropdown-empty"
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": null,
                    "width": null,
                  }
                }
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  accessibilityIndex={0}
                  activeValue={null}
                  allowClear={true}
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  defaultValue={Array []}
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <span
                          class="ant-select-selection-search"
                          style="width: 0px;"
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />
                          <span
                            aria-hidden="true"
                            class="ant-select-selection-search-mirror"
                          >
                            
                            Â 
                          </span>
                        </span>
                        <span
                          class="ant-select-selection-placeholder"
                        >
                          Select categories
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName=""
                  filterOption={[Function]}
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  listHeight={128}
                  listItemHeight={24}
                  loading={false}
                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                  mode="multiple"
                  multiple={true}
                  notFoundContent={null}
                  onChange={[Function]}
                  onPopupScroll={[Function]}
                  onSearch={[Function]}
                  onSearchSubmit={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  placeholder="Select categories"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue=""
                  showSearch={true}
                  tokenWithEnter={false}
                  transitionName="slide-up"
                  values={Array []}
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SelectSelector
                      accessibilityIndex={0}
                      activeValue={null}
                      allowClear={true}
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      defaultValue={Array []}
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <span
                              class="ant-select-selection-search"
                              style="width: 0px;"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                type="search"
                                unselectable="on"
                                value=""
                              />
                              <span
                                aria-hidden="true"
                                class="ant-select-selection-search-mirror"
                              >
                                
                                Â 
                              </span>
                            </span>
                            <span
                              class="ant-select-selection-placeholder"
                            >
                              Select categories
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName=""
                      filterOption={[Function]}
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      listHeight={128}
                      listItemHeight={24}
                      loading={false}
                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                      mode="multiple"
                      multiple={true}
                      notFoundContent={null}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onInputCompositionEnd={[Function]}
                      onInputCompositionStart={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onPopupScroll={[Function]}
                      onSearch={[Function]}
                      onSearchSubmit={[Function]}
                      onSelect={[Function]}
                      onToggleOpen={[Function]}
                      placeholder="Select categories"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue=""
                      showSearch={true}
                      tokenWithEnter={false}
                      transitionName="slide-up"
                      values={Array []}
                    >
                      <CSSMotionList
                        component={false}
                        keys={Array []}
                        motionAppear={false}
                      />
                      <span
                        className="ant-select-selection-search"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        <Input
                          accessibilityIndex={0}
                          attrs={Object {}}
                          inputElement={null}
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          prefixCls="ant-select"
                          value=""
                        >
                          <input
                            aria-activedescendant="undefined_list_0"
                            aria-autocomplete="list"
                            aria-controls="undefined_list"
                            aria-haspopup="listbox"
                            aria-owns="undefined_list"
                            autoComplete="off"
                            className="ant-select-selection-search-input"
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            readOnly={true}
                            role="combobox"
                            style={
                              Object {
                                "opacity": 0,
                              }
                            }
                            type="search"
                            unselectable="on"
                            value=""
                          />
                        </Input>
                        <span
                          aria-hidden={true}
                          className="ant-select-selection-search-mirror"
                        >
                          Â 
                        </span>
                      </span>
                      <span
                        className="ant-select-selection-placeholder"
                      >
                        Select categories
                      </span>
                    </SelectSelector>
                  </div>
                </Selector>
              </Trigger>
            </SelectTrigger>
          </div>
        </ForwardRef(Select)>
      </Select>
    </ForwardRef(InternalSelect)>
  </Selector>
</Provider>
`;

exports[`Categories List component Snapshot testing should render the component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Selector
    action="Categories"
    mode="multiple"
  >
    <ForwardRef(InternalSelect)
      allowClear={true}
      bordered={true}
      defaultValue={Array []}
      filterOption={[Function]}
      listHeight={128}
      loading={false}
      mode="multiple"
      notFoundContent={null}
      onChange={[Function]}
      onPopupScroll={[Function]}
      onSearch={[Function]}
      placeholder="Select categories"
    >
      <Select
        allowClear={true}
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        defaultValue={Array []}
        dropdownClassName=""
        filterOption={[Function]}
        inputIcon={[Function]}
        listHeight={128}
        listItemHeight={24}
        loading={false}
        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
        mode="multiple"
        notFoundContent={null}
        onChange={[Function]}
        onPopupScroll={[Function]}
        onSearch={[Function]}
        placeholder="Select categories"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="slide-up"
      >
        <ForwardRef(Select)
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          defaultValue={Array []}
          dropdownClassName=""
          filterOption={[Function]}
          inputIcon={[Function]}
          listHeight={128}
          listItemHeight={24}
          loading={false}
          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
          mode="multiple"
          notFoundContent={null}
          onChange={[Function]}
          onPopupScroll={[Function]}
          onSearch={[Function]}
          placeholder="Select categories"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
        >
          <div
            className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={null}
              dropdownClassName=""
              empty={true}
              getTriggerDOMNode={[Function]}
              popupElement={
                <ForwardRef(OptionList)
                  childrenAsData={true}
                  defaultActiveFirstOption={true}
                  flattenOptions={Array []}
                  height={128}
                  itemHeight={24}
                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                  multiple={true}
                  notFoundContent={null}
                  onActiveValue={[Function]}
                  onMouseEnter={[Function]}
                  onScroll={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  options={Array []}
                  prefixCls="ant-select"
                  searchValue=""
                  values={Set {}}
                  virtual={true}
                />
              }
              prefixCls="ant-select"
              transitionName="slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div>
                    <ForwardRef(OptionList)
                      childrenAsData={true}
                      defaultActiveFirstOption={true}
                      flattenOptions={Array []}
                      height={128}
                      itemHeight={24}
                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                      multiple={true}
                      notFoundContent={null}
                      onActiveValue={[Function]}
                      onMouseEnter={[Function]}
                      onScroll={[Function]}
                      onSelect={[Function]}
                      onToggleOpen={[Function]}
                      options={Array []}
                      prefixCls="ant-select"
                      searchValue=""
                      values={Set {}}
                      virtual={true}
                    />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName="ant-select-dropdown-empty"
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": null,
                    "width": null,
                  }
                }
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  accessibilityIndex={0}
                  activeValue={null}
                  allowClear={true}
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  defaultValue={Array []}
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <span
                          class="ant-select-selection-search"
                          style="width: 0px;"
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />
                          <span
                            aria-hidden="true"
                            class="ant-select-selection-search-mirror"
                          >
                            
                            Â 
                          </span>
                        </span>
                        <span
                          class="ant-select-selection-placeholder"
                        >
                          Select categories
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName=""
                  filterOption={[Function]}
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  listHeight={128}
                  listItemHeight={24}
                  loading={false}
                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                  mode="multiple"
                  multiple={true}
                  notFoundContent={null}
                  onChange={[Function]}
                  onPopupScroll={[Function]}
                  onSearch={[Function]}
                  onSearchSubmit={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  placeholder="Select categories"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue=""
                  showSearch={true}
                  tokenWithEnter={false}
                  transitionName="slide-up"
                  values={Array []}
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SelectSelector
                      accessibilityIndex={0}
                      activeValue={null}
                      allowClear={true}
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      defaultValue={Array []}
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <span
                              class="ant-select-selection-search"
                              style="width: 0px;"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                type="search"
                                unselectable="on"
                                value=""
                              />
                              <span
                                aria-hidden="true"
                                class="ant-select-selection-search-mirror"
                              >
                                
                                Â 
                              </span>
                            </span>
                            <span
                              class="ant-select-selection-placeholder"
                            >
                              Select categories
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName=""
                      filterOption={[Function]}
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      listHeight={128}
                      listItemHeight={24}
                      loading={false}
                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                      mode="multiple"
                      multiple={true}
                      notFoundContent={null}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onInputCompositionEnd={[Function]}
                      onInputCompositionStart={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onPopupScroll={[Function]}
                      onSearch={[Function]}
                      onSearchSubmit={[Function]}
                      onSelect={[Function]}
                      onToggleOpen={[Function]}
                      placeholder="Select categories"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue=""
                      showSearch={true}
                      tokenWithEnter={false}
                      transitionName="slide-up"
                      values={Array []}
                    >
                      <CSSMotionList
                        component={false}
                        keys={Array []}
                        motionAppear={false}
                      />
                      <span
                        className="ant-select-selection-search"
                        style={
                          Object {
                            "width": 0,
                          }
                        }
                      >
                        <Input
                          accessibilityIndex={0}
                          attrs={Object {}}
                          inputElement={null}
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          prefixCls="ant-select"
                          value=""
                        >
                          <input
                            aria-activedescendant="undefined_list_0"
                            aria-autocomplete="list"
                            aria-controls="undefined_list"
                            aria-haspopup="listbox"
                            aria-owns="undefined_list"
                            autoComplete="off"
                            className="ant-select-selection-search-input"
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            readOnly={true}
                            role="combobox"
                            style={
                              Object {
                                "opacity": 0,
                              }
                            }
                            type="search"
                            unselectable="on"
                            value=""
                          />
                        </Input>
                        <span
                          aria-hidden={true}
                          className="ant-select-selection-search-mirror"
                        >
                          Â 
                        </span>
                      </span>
                      <span
                        className="ant-select-selection-placeholder"
                      >
                        Select categories
                      </span>
                    </SelectSelector>
                  </div>
                </Selector>
              </Trigger>
            </SelectTrigger>
          </div>
        </ForwardRef(Select)>
      </Select>
    </ForwardRef(InternalSelect)>
  </Selector>
</Provider>
`;
